{"file_contents":{"DATABASE_SETUP.md":{"content":"\n# Database Setup Instructions\n\n## Step 1: Create PostgreSQL Database in Replit\n\n1. **Open a new tab in Replit** and search for \"Database\"\n2. **Click \"Create a database\"** - this will create a PostgreSQL database\n3. **Wait for setup to complete** - Replit will automatically set the `DATABASE_URL` environment variable\n\n## Step 2: Run Database Migration\n\nAfter the database is created, run:\n\n```bash\nnpm run db:migrate\n```\n\n## Step 3: Verify Connection\n\nYour app will automatically detect the database connection. Look for these messages in the console:\n\n- ✅ **Database connected successfully** - Database is working\n- ⚠️ **Using memory storage** - Database not available (properties won't persist)\n\n## Current Status\n\n- **Database**: Not connected (using memory storage)\n- **Data Persistence**: ❌ Properties are lost on restart\n- **Admin Uploads**: ✅ Working but temporary\n\n## After Database Setup\n\n- **Database**: ✅ Connected to PostgreSQL\n- **Data Persistence**: ✅ Properties saved permanently \n- **Admin Uploads**: ✅ Working with permanent storage\n\nAll property uploads through the admin interface will be **permanently stored** once the database is set up.\n","size_bytes":1178},"drizzle.config.ts":{"content":"\nimport type { Config } from \"drizzle-kit\";\n\nexport default {\n  schema: \"./shared/schema.ts\",\n  out: \"./drizzle\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL!,\n  },\n} satisfies Config;\n","size_bytes":219},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n};\n","size_bytes":81},"replit.md":{"content":"# Overview\n\nThis is a modern real estate website for Ebutine Properties, a Nigerian real estate company specializing in residential and commercial lands, luxury homes, and property management. The company targets both local Nigerian clients and diaspora investors worldwide. The website is built as a full-stack application with React frontend and Express backend, featuring property listings, contact forms, and inquiry management.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for client-side routing with page-based structure\n- **UI Components**: Shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom brand colors (ebutine-blue, ebutine-orange, ebutine-dark)\n- **State Management**: TanStack Query (React Query) for server state management\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n- **SEO**: React Helmet for meta tags and structured data optimization\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API with proper error handling and request logging\n- **Development**: Hot reloading with Vite middleware integration\n- **Data Storage**: In-memory storage implementation with interface for future database integration\n\n## Data Storage Solutions\n- **ORM**: Drizzle ORM configured for PostgreSQL\n- **Database**: PostgreSQL (configured but using in-memory storage for now)\n- **Schema**: Shared schema definitions with Zod validation\n- **Tables**: Users, properties, contacts, and property inquiries with proper relationships\n\n## Authentication and Authorization\n- **Current State**: Basic structure in place but not fully implemented\n- **Session Management**: Connect-pg-simple configured for PostgreSQL session storage\n- **User Model**: Basic user schema with username/password fields defined\n\n## API Structure\n- **Properties**: GET /api/properties (with filtering), GET /api/properties/:id\n- **Contacts**: POST /api/contacts, GET /api/contacts\n- **Property Inquiries**: Property-specific inquiry endpoints\n- **Filtering**: Support for property type, location, price range, and featured status\n- **Validation**: Zod schemas for request/response validation\n\n## External Dependencies\n\n### Core Dependencies\n- **Neon Database**: @neondatabase/serverless for PostgreSQL serverless connection\n- **Drizzle**: ORM with PostgreSQL dialect and migration support\n- **TanStack Query**: Server state management and caching\n- **Radix UI**: Comprehensive component primitives for accessibility\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration\n\n### Development Tools\n- **Vite**: Fast build tool with React plugin and runtime error overlay\n- **TypeScript**: Type safety with strict configuration\n- **ESBuild**: Production bundling for server code\n- **PostCSS**: CSS processing with Autoprefixer\n\n### Third-party Integrations\n- **WhatsApp Business**: Direct messaging integration for customer communication\n- **Google Analytics**: Configured for tracking (VITE_GA_MEASUREMENT_ID)\n- **Font Loading**: Google Fonts integration for typography\n- **Replit**: Development environment integration with error banner\n\n### SEO and Analytics\n- **Structured Data**: JSON-LD schema for real estate business\n- **Meta Tags**: OpenGraph and Twitter card optimization\n- **Google Fonts**: Inter font family for consistent typography\n- **Performance**: Optimized loading with preconnect hints","size_bytes":3630},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Ebutine brand colors\n        \"ebutine-blue\": \"var(--ebutine-blue)\",\n        \"ebutine-orange\": \"var(--ebutine-orange)\", \n        \"ebutine-dark\": \"var(--ebutine-dark)\",\n        \"ebutine-light\": \"var(--ebutine-light)\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"sans-serif\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        inter: [\"Inter\", \"sans-serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3036},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\n// import runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined &&\n    typeof runtimeErrorOverlay !== \"undefined\"\n      ? [\n          runtimeErrorOverlay(),\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n    rollupOptions: {\n      input: path.resolve(import.meta.dirname, \"client/index.html\"),\n    },\n  },\n});\n","size_bytes":1050},"client/env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_GA_MEASUREMENT_ID: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}","size_bytes":166},"scripts/migrate.ts":{"content":"\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport { migrate } from 'drizzle-orm/neon-serverless/migrator';\nimport { Pool } from '@neondatabase/serverless';\n\nasync function main() {\n  const pool = new Pool({ connectionString: process.env.DATABASE_URL });\n  const db = drizzle(pool);\n  \n  console.log('Running migrations...');\n  await migrate(db, { migrationsFolder: 'drizzle' });\n  console.log('Migrations completed!');\n  \n  await pool.end();\n}\n\nmain().catch(console.error);\n","size_bytes":487},"server/db.ts":{"content":"import { drizzle } from \"drizzle-orm/neon-serverless\";\nimport { Pool } from \"@neondatabase/serverless\";\nimport { users, properties, contacts, propertyInquiries } from '../shared/schema.js';\n\nlet db: any;\nlet isDbConnected = false;\n\ntry {\n  if (process.env.DATABASE_URL) {\n    const isProduction = process.env.NODE_ENV === 'production';\n\n    // Use pooler URL for production with SSL\n    let connectionString = process.env.DATABASE_URL;\n    if (isProduction && !connectionString.includes('-pooler.')) {\n      connectionString = connectionString.replace('.us-east-2', '-pooler.us-east-2');\n    }\n\n    const poolConfig = { \n      connectionString,\n      max: isProduction ? 3 : 10,\n      connectionTimeoutMillis: 15000,\n      idleTimeoutMillis: 30000,\n    };\n\n    // Add SSL only for production\n    if (isProduction) {\n      poolConfig.ssl = { rejectUnauthorized: false };\n    }\n\n    const pool = new Pool(poolConfig);\n\n    db = drizzle(pool, { \n      schema: { users, properties, contacts, propertyInquiries } \n    });\n    isDbConnected = true;\n    console.log('✅ Database connected successfully');\n  } else {\n    console.log('⚠️ DATABASE_URL not found, using memory storage');\n    isDbConnected = false;\n  }\n} catch (error) {\n  console.error('❌ Database connection failed:', error);\n  isDbConnected = false;\n}\n\nexport { db, isDbConnected };","size_bytes":1347},"server/index.ts":{"content":"import express, { type Request } from \"express\";\nimport type { Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes.js\";\nimport { setupVite, serveStatic, log } from \"./vite.js\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || \"5000\", 10);\n\n  server.listen(port, \"0.0.0.0\", () => {\n    log(`🚀 Server running on port ${port} in ${process.env.NODE_ENV || 'development'} mode`);\n  });\n\n  // Graceful shutdown\n  const gracefulShutdown = () => {\n    console.log('🔄 Graceful shutdown initiated...');\n    server.close(() => {\n      console.log('✅ Server closed successfully');\n      process.exit(0);\n    });\n  };\n\n  process.on('SIGTERM', gracefulShutdown);\n  process.on('SIGINT', gracefulShutdown);\n\n  // Handle uncaught exceptions\n  process.on('uncaughtException', (err) => {\n    console.error('💥 Uncaught Exception:', err);\n    process.exit(1);\n  });\n\n  process.on('unhandledRejection', (reason, promise) => {\n    console.error('💥 Unhandled Rejection at:', promise, 'reason:', reason);\n    process.exit(1);\n  });\n})();","size_bytes":2759},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { dirname } from \"path\";\nimport { storage } from \"./storage.js\";\nimport {\n  insertContactSchema,\n  insertPropertyInquirySchema,\n  insertPropertySchema,\n} from \"../shared/schema.js\";\nimport express from \"express\";\nimport fs from \"fs\";\n\n// Get the current directory (ES module equivalent of __dirname)\nconst __dirname = process.cwd();\n\n// Ensure uploads directories exist\nconst uploadsDir = path.join(process.cwd(), \"uploads\");\nconst imagesDir = path.join(uploadsDir, \"images\");\nconst videosDir = path.join(uploadsDir, \"videos\");\n\n[uploadsDir, imagesDir, videosDir].forEach((dir) => {\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir, { recursive: true });\n  }\n});\n\n// Enhanced AI generation helper functions\nasync function analyzeMediaAndGenerateProperty(mediaInfo: any): Promise<{\n  title: string;\n  description: string;\n  type: string;\n  location: string;\n  size: string;\n  bedrooms: string | null;\n  bathrooms: string | null;\n  features: string[];\n  price: string;\n}> {\n  // This is an enhanced AI analyzer that would in production use computer vision\n  // and location detection APIs. For now, we'll use intelligent pattern matching\n\n  const { hasImages, hasVideos, userInput } = mediaInfo;\n\n  // Analyze user input for clues\n  const inputLower = (\n    userInput.title +\n    \" \" +\n    (userInput.description || \"\")\n  ).toLowerCase();\n\n  // Detect property type from input\n  let type = \"house\";\n  if (inputLower.includes(\"land\") || inputLower.includes(\"plot\")) {\n    type = inputLower.includes(\"commercial\") ? \"commercial\" : \"land\";\n  } else if (inputLower.includes(\"apartment\") || inputLower.includes(\"flat\")) {\n    type = \"apartment\";\n  } else if (\n    inputLower.includes(\"luxury\") ||\n    inputLower.includes(\"duplex\") ||\n    inputLower.includes(\"mansion\")\n  ) {\n    type = \"house\";\n  } else if (\n    inputLower.includes(\"office\") ||\n    inputLower.includes(\"shop\") ||\n    inputLower.includes(\"store\")\n  ) {\n    type = \"commercial\";\n  }\n\n  // Generate intelligent location suggestions based on popular Lagos areas\n  const lagosAreas = [\n    \"Lekki\",\n    \"Victoria Island\",\n    \"Ikoyi\",\n    \"Ajah\",\n    \"Sangotedo\",\n    \"Chevron\",\n    \"Ibeju-Lekki\",\n    \"Banana Island\",\n    \"Parkview Estate\",\n    \"Ikeja\",\n    \"Maryland\",\n    \"Gbagada\",\n    \"Surulere\",\n    \"Yaba\",\n    \"Lagos Island\",\n    \"Festac\",\n    \"Magodo\",\n    \"Ojota\",\n    \"Ketu\",\n    \"Mile 2\",\n  ];\n\n  let detectedLocation = \"Lagos\";\n  for (const area of lagosAreas) {\n    if (inputLower.includes(area.toLowerCase())) {\n      detectedLocation = area + \", Lagos\";\n      break;\n    }\n  }\n\n  // If no location detected in input, suggest based on property type\n  if (detectedLocation === \"Lagos\") {\n    if (type === \"land\" || type === \"commercial\") {\n      detectedLocation = \"Ibeju-Lekki, Lagos\";\n    } else if (type === \"house\") {\n      detectedLocation = \"Lekki, Lagos\";\n    } else {\n      detectedLocation = \"Ajah, Lagos\";\n    }\n  }\n\n  // Generate bedrooms/bathrooms based on property type and media presence\n  let bedrooms = null;\n  let bathrooms = null;\n  let size = \"\";\n\n  if (type === \"house\" || type === \"apartment\") {\n    // Analyze for room indicators\n    if (inputLower.includes(\"studio\")) {\n      bedrooms = \"1\";\n      bathrooms = \"1\";\n    } else if (inputLower.includes(\"2\") || inputLower.includes(\"two\")) {\n      bedrooms = \"2\";\n      bathrooms = \"2\";\n    } else if (inputLower.includes(\"3\") || inputLower.includes(\"three\")) {\n      bedrooms = \"3\";\n      bathrooms = \"3\";\n    } else if (inputLower.includes(\"4\") || inputLower.includes(\"four\")) {\n      bedrooms = \"4\";\n      bathrooms = \"4\";\n    } else if (inputLower.includes(\"5\") || inputLower.includes(\"five\")) {\n      bedrooms = \"5\";\n      bathrooms = \"5\";\n    } else {\n      // Default based on property type\n      if (type === \"house\") {\n        bedrooms = \"3\";\n        bathrooms = \"3\";\n      } else {\n        bedrooms = \"2\";\n        bathrooms = \"2\";\n      }\n    }\n\n    size = bedrooms + \" bedrooms\";\n  } else if (type === \"land\" || type === \"commercial\") {\n    // Generate size for land\n    const sizesOptions = [\n      \"500 sqm\",\n      \"650 sqm\",\n      \"1000 sqm\",\n      \"1200 sqm\",\n      \"2000 sqm\",\n      \"3000 sqm\",\n    ];\n    size = sizesOptions[Math.floor(Math.random() * sizesOptions.length)];\n  }\n\n  // Generate intelligent title\n  let title = \"\";\n  if (type === \"house\") {\n    const houseTypes = [\"Modern\", \"Luxury\", \"Elegant\", \"Spacious\", \"Beautiful\"];\n    const houseStyle =\n      houseTypes[Math.floor(Math.random() * houseTypes.length)];\n    title = `${houseStyle} ${bedrooms}BR ${type === \"house\" ? \"House\" : \"Apartment\"}`;\n  } else if (type === \"land\") {\n    title = `Prime Residential Land - ${size}`;\n  } else if (type === \"commercial\") {\n    title = `Commercial Property - ${size}`;\n  } else {\n    title = userInput.title || \"Premium Property\";\n  }\n\n  // Generate price based on type and location\n  let price = \"0\";\n  const locationMultiplier =\n    detectedLocation.includes(\"Victoria Island\") ||\n    detectedLocation.includes(\"Ikoyi\")\n      ? 1.8\n      : detectedLocation.includes(\"Lekki\")\n        ? 1.4\n        : detectedLocation.includes(\"Ajah\")\n          ? 1.1\n          : 1.0;\n\n  if (type === \"house\") {\n    const basePrice = parseInt(bedrooms || \"3\") * 15000000; // 15M per bedroom\n    price = (basePrice * locationMultiplier).toString();\n  } else if (type === \"apartment\") {\n    const basePrice = parseInt(bedrooms || \"2\") * 8000000; // 8M per bedroom\n    price = (basePrice * locationMultiplier).toString();\n  } else if (type === \"land\") {\n    const sqm = parseInt(size.replace(/[^\\d]/g, \"\")) || 650;\n    const pricePerSqm = 25000; // 25k per sqm\n    price = (sqm * pricePerSqm * locationMultiplier).toString();\n  } else if (type === \"commercial\") {\n    price = (50000000 * locationMultiplier).toString(); // Base 50M for commercial\n  }\n\n  // Generate comprehensive description\n  const description = await generateEnhancedDescription({\n    title,\n    type,\n    location: detectedLocation,\n    price,\n    size,\n    bedrooms,\n    bathrooms,\n  });\n\n  // Generate intelligent features\n  const features = await generateIntelligentFeatures(\n    type,\n    detectedLocation,\n    bedrooms || undefined,\n    bathrooms || undefined,\n  );\n\n  return {\n    title,\n    description,\n    type,\n    location: detectedLocation,\n    size,\n    bedrooms,\n    bathrooms,\n    features,\n    price,\n  };\n}\n\nasync function generateEnhancedDescription(propertyData: any): Promise<string> {\n  const { title, type, location, price, size, bedrooms, bathrooms } =\n    propertyData;\n\n  const priceFormatted = price ? `₦${parseFloat(price).toLocaleString()}` : \"\";\n\n  let description = `Discover this exceptional ${title.toLowerCase()} strategically located in the heart of ${location}. `;\n\n  if (type === \"house\") {\n    description += `This stunning residential property combines modern architecture with premium finishes, offering the perfect blend of luxury and comfort. `;\n    if (bedrooms && bathrooms) {\n      description += `Featuring ${bedrooms} spacious bedrooms with en-suite bathrooms and ${bathrooms} well-appointed bathrooms, `;\n    }\n    description += `this home boasts an open-plan living area, modern kitchen with high-end appliances, and beautifully landscaped compound. `;\n  } else if (type === \"apartment\") {\n    description += `This contemporary apartment offers modern urban living at its finest. `;\n    if (bedrooms && bathrooms) {\n      description += `With ${bedrooms} comfortable bedrooms and ${bathrooms} modern bathrooms, `;\n    }\n    description += `the unit features premium finishes, ample natural light, and access to excellent building amenities. `;\n  } else if (type === \"land\") {\n    description += `This prime residential land presents an exceptional opportunity for development in one of Lagos's most sought-after neighborhoods. `;\n    if (size) {\n      description += `Spanning ${size} of well-documented land, `;\n    }\n    description += `the plot comes with verified title documents and access to essential infrastructure including electricity, water, and tarred roads. `;\n  } else if (type === \"commercial\") {\n    description += `This strategic commercial property offers outstanding investment potential in a high-traffic business district. `;\n    description += `Perfect for retail, office space, or mixed-use development, the property benefits from excellent visibility and accessibility. `;\n  }\n\n  description += `Located in ${location}, residents and visitors enjoy easy access to major expressways, shopping malls, schools, hospitals, and recreational facilities. `;\n  description += `The area is known for its excellent infrastructure, reliable power supply, and 24/7 security. `;\n\n  if (priceFormatted) {\n    description += `Competitively priced at ${priceFormatted}, this property represents exceptional value and strong investment potential in today's dynamic real estate market. `;\n  }\n\n  description += `Don't miss this rare opportunity to own a piece of premium real estate in Lagos. Contact our experienced team today to schedule an exclusive viewing and secure this outstanding property.`;\n\n  return description;\n}\n\nasync function generateIntelligentFeatures(\n  type: string,\n  location: string,\n  bedrooms?: string,\n  bathrooms?: string,\n): Promise<string[]> {\n  const baseFeatures = [\n    \"24/7 Security\",\n    \"Gated Community\",\n    \"Tarred Roads\",\n    \"Reliable Electricity\",\n    \"Borehole Water Supply\",\n  ];\n\n  const houseFeatures = [\n    \"Modern Kitchen\",\n    \"Fitted Wardrobes\",\n    \"Spacious Living Areas\",\n    \"Private Parking\",\n    \"Beautiful Landscaping\",\n    \"Premium Finishes\",\n    \"Air Conditioning Ready\",\n    \"Balconies\",\n    \"Family Lounge\",\n    \"Dining Area\",\n  ];\n\n  const apartmentFeatures = [\n    \"Modern Kitchen\",\n    \"Built-in Wardrobes\",\n    \"Elevator Access\",\n    \"Gymnasium\",\n    \"Swimming Pool\",\n    \"Parking Space\",\n    \"CCTV Surveillance\",\n    \"Generator Backup\",\n    \"Intercom System\",\n  ];\n\n  const landFeatures = [\n    \"Certificate of Occupancy Available\",\n    \"Surveyed and Documented\",\n    \"Ready for Development\",\n    \"Strategic Location\",\n    \"High ROI Potential\",\n    \"All Utilities Available\",\n    \"Drainage System\",\n    \"Estate Development\",\n  ];\n\n  const commercialFeatures = [\n    \"High Visibility Location\",\n    \"Ample Parking\",\n    \"Modern Infrastructure\",\n    \"Public Transportation Access\",\n    \"High Foot Traffic\",\n    \"Investment Grade\",\n    \"Flexible Space Design\",\n    \"Prime Business District\",\n  ];\n\n  // Add location-specific features\n  const locationFeatures = [];\n  if (\n    location.includes(\"Lekki\") ||\n    location.includes(\"Victoria Island\") ||\n    location.includes(\"Ikoyi\")\n  ) {\n    locationFeatures.push(\n      \"Premium Neighborhood\",\n      \"Close to Business District\",\n      \"Waterfront Access\",\n    );\n  }\n  if (location.includes(\"Ibeju-Lekki\")) {\n    locationFeatures.push(\n      \"Free Trade Zone Proximity\",\n      \"Airport Access\",\n      \"Future Growth Area\",\n    );\n  }\n\n  let features = [...baseFeatures];\n\n  if (type === \"house\") {\n    features = [...features, ...houseFeatures].slice(0, 10);\n  } else if (type === \"apartment\") {\n    features = [...features, ...apartmentFeatures].slice(0, 8);\n  } else if (type === \"land\") {\n    features = [...features, ...landFeatures].slice(0, 8);\n  } else if (type === \"commercial\") {\n    features = [...features, ...commercialFeatures].slice(0, 8);\n  }\n\n  // Add location features\n  features = [...features, ...locationFeatures].slice(0, 12);\n\n  return features;\n}\n\n// Configure multer for file uploads\nconst upload = multer({\n  storage: multer.diskStorage({\n    destination: (req, file, cb) => {\n      const uploadDir = file.mimetype.startsWith(\"video/\")\n        ? \"uploads/videos\"\n        : \"uploads/images\";\n      cb(null, uploadDir);\n    },\n    filename: (req, file, cb) => {\n      const uniqueSuffix = Date.now() + \"-\" + Math.round(Math.random() * 1e9);\n      cb(\n        null,\n        file.fieldname + \"-\" + uniqueSuffix + path.extname(file.originalname),\n      );\n    },\n  }),\n  limits: {\n    fileSize: 100 * 1024 * 1024, // 100MB limit\n  },\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Properties routes\n  app.get(\"/api/properties\", async (req, res) => {\n    try {\n      const { type, location, minPrice, maxPrice, featured } = req.query;\n      const filters = {\n        type: type as string,\n        location: location as string,\n        minPrice: minPrice ? parseFloat(minPrice as string) : undefined,\n        maxPrice: maxPrice ? parseFloat(maxPrice as string) : undefined,\n        featured: featured === \"true\" ? true : undefined,\n      };\n\n      const properties = await storage.getProperties(filters);\n      res.json(properties);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch properties\" });\n    }\n  });\n\n  app.get(\"/api/properties/:id\", async (req, res) => {\n    try {\n      const property = await storage.getProperty(req.params.id);\n      if (!property) {\n        return res.status(404).json({ message: \"Property not found\" });\n      }\n      res.json(property);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch property\" });\n    }\n  });\n\n  // Contacts routes\n  app.post(\"/api/contacts\", async (req, res) => {\n    try {\n      const contactData = insertContactSchema.parse(req.body);\n      const contact = await storage.createContact(contactData);\n      res.status(201).json(contact);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid contact data\", error });\n    }\n  });\n\n  app.get(\"/api/contacts\", async (req, res) => {\n    try {\n      const contacts = await storage.getContacts();\n      res.json(contacts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch contacts\" });\n    }\n  });\n\n  // Property inquiries routes\n  app.post(\"/api/property-inquiries\", async (req, res) => {\n    try {\n      const inquiryData = insertPropertyInquirySchema.parse(req.body);\n      const inquiry = await storage.createPropertyInquiry(inquiryData);\n      res.status(201).json(inquiry);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid inquiry data\", error });\n    }\n  });\n\n  app.get(\"/api/property-inquiries\", async (req, res) => {\n    try {\n      const { propertyId } = req.query;\n      const inquiries = await storage.getPropertyInquiries(\n        propertyId as string,\n      );\n      res.json(inquiries);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch inquiries\" });\n    }\n  });\n\n  // Admin property upload route\n  app.post(\n    \"/api/admin/properties\",\n    upload.fields([\n      { name: \"images\", maxCount: 10 },\n      { name: \"videos\", maxCount: 5 },\n    ]),\n    async (req, res) => {\n      try {\n        const files = req.files as {\n          [fieldname: string]: Express.Multer.File[];\n        };\n\n        // Process uploaded files\n        const imageUrls = files.images\n          ? files.images.map((file) => `/uploads/images/${file.filename}`)\n          : [];\n        const videoUrls = files.videos\n          ? files.videos.map((file) => `/uploads/videos/${file.filename}`)\n          : [];\n\n        // Parse external videos if provided\n        let externalVideos = [];\n        if (req.body.externalVideos) {\n          const lines = req.body.externalVideos\n            .split(\"\\n\")\n            .filter((line: string) => line.trim());\n          externalVideos = lines.map((line: string) => {\n            const [url, platform = \"other\", title = \"\"] = line.split(\"|\");\n            return {\n              url: url.trim(),\n              platform: platform.trim(),\n              title: title.trim(),\n            };\n          });\n        }\n\n        // Parse embed codes if provided\n        let embedCodes = [];\n        if (req.body.embedCodes) {\n          const lines = req.body.embedCodes\n            .split(\"\\n\")\n            .filter((line: string) => line.trim());\n          embedCodes = lines.map((line: string) => {\n            const [embedCode, title = \"\", platform = \"\"] = line.split(\"|\");\n            return {\n              embedCode: embedCode.trim(),\n              title: title.trim(),\n              platform: platform.trim(),\n            };\n          });\n        }\n\n        // This block is updated to include better error handling and logging\n        try {\n          console.log(\"📝 Creating property with data:\", {\n            title: req.body.title,\n            images: imageUrls.length,\n            videos: videoUrls.length,\n            externalVideos: externalVideos.length,\n            embedCodes: embedCodes.length,\n          });\n\n          const property = await storage.saveProperty({\n            title: req.body.title,\n            description: req.body.description,\n            price: parseFloat(req.body.price),\n            location: req.body.location,\n            type: req.body.type as \"residential\" | \"commercial\" | \"land\",\n            size: req.body.size,\n            features: req.body.features\n              ? req.body.features.split(\",\").map((f: string) => f.trim())\n              : [],\n            images: imageUrls,\n            videos: videoUrls,\n            externalVideos: externalVideos,\n            embedCodes: embedCodes, // Include embedCodes here\n            thumbnail: imageUrls[0] || videoUrls[0] || \"\",\n            featured: req.body.featured === \"true\",\n            createdAt: new Date(),\n          });\n\n          console.log(\"✅ Property created successfully:\", property.id);\n          res.json({ success: true, property });\n        } catch (error) {\n          console.error(\"❌ Error creating property:\", error);\n          res.status(500).json({\n            success: false,\n            error: \"Failed to create property\",\n            details: error instanceof Error ? error.message : \"Unknown error\",\n          });\n        }\n      } catch (error) {\n        console.error(\"Multer upload error:\", error);\n        res.status(400).json({ message: \"File upload failed\", error });\n      }\n    },\n  );\n\n  // Enhanced AI property generation endpoint\n  app.post(\"/api/admin/generate-property\", async (req, res) => {\n    try {\n      const { title, description, hasImages, hasVideos } = req.body;\n\n      // Analyze media and user input to generate comprehensive property details\n      const propertyData = await analyzeMediaAndGenerateProperty({\n        hasImages: hasImages || false,\n        hasVideos: hasVideos || false,\n        userInput: { title: title || \"\", description: description || \"\" },\n      });\n\n      res.json(propertyData);\n    } catch (error) {\n      console.error(\"AI generation error:\", error);\n      res.status(500).json({ message: \"Failed to generate property details\" });\n    }\n  });\n\n  // Legacy AI description generation endpoint (kept for backward compatibility)\n  app.post(\"/api/admin/generate-description\", async (req, res) => {\n    try {\n      const { title, type, location, price, size, bedrooms, bathrooms } =\n        req.body;\n\n      // Generate AI description based on property details\n      const description = await generateEnhancedDescription({\n        title,\n        type,\n        location,\n        price,\n        size,\n        bedrooms,\n        bathrooms,\n      });\n\n      const features = await generateIntelligentFeatures(\n        type,\n        location,\n        bedrooms,\n        bathrooms,\n      );\n\n      res.json({ description, features });\n    } catch (error) {\n      console.error(\"AI generation error:\", error);\n      res.status(500).json({ message: \"Failed to generate description\" });\n    }\n  });\n\n  // Delete property endpoint\n  app.delete(\"/api/admin/properties/:id\", async (req, res) => {\n    try {\n      const success = await storage.deleteProperty(req.params.id);\n      if (!success) {\n        return res.status(404).json({ message: \"Property not found\" });\n      }\n      res.json({ message: \"Property deleted successfully\" });\n    } catch (error) {\n      console.error(\"Delete property error:\", error);\n      res.status(500).json({ message: \"Failed to delete property\" });\n    }\n  });\n\n  // Update property endpoint\n  app.put(\n    \"/api/admin/properties/:id\",\n    upload.fields([\n      { name: \"images\", maxCount: 10 },\n      { name: \"videos\", maxCount: 5 },\n    ]),\n    async (req, res) => {\n      try {\n        const files = req.files as {\n          [fieldname: string]: Express.Multer.File[];\n        };\n\n        // Get existing property to preserve current media if no new files uploaded\n        const existingProperty = await storage.getProperty(req.params.id);\n        if (!existingProperty) {\n          return res.status(404).json({ message: \"Property not found\" });\n        }\n\n        // Process uploaded files or keep existing ones\n        const imageUrls = files.images\n          ? files.images.map((file) => `/uploads/images/${file.filename}`)\n          : existingProperty.images;\n        const videoUrls = files.videos\n          ? files.videos.map((file) => `/uploads/videos/${file.filename}`)\n          : existingProperty.videos;\n\n        // Parse embed codes if provided for update\n        let embedCodes = existingProperty.embedCodes || [];\n        if (req.body.embedCodes) {\n          const lines = req.body.embedCodes\n            .split(\"\\n\")\n            .filter((line: string) => line.trim());\n          embedCodes = lines.map((line: string) => {\n            const [embedCode, title = \"\", platform = \"\"] = line.split(\"|\");\n            return {\n              embedCode: embedCode.trim(),\n              title: title.trim(),\n              platform: platform.trim(),\n            };\n          });\n        }\n\n        const propertyData = {\n          ...req.body,\n          price: req.body.price.toString(),\n          size: req.body.size || null,\n          bedrooms: req.body.bedrooms || null,\n          bathrooms: req.body.bathrooms || null,\n          images: imageUrls,\n          videos: videoUrls,\n          externalVideos: existingProperty.externalVideos, // Assuming externalVideos are handled separately or not updated here\n          embedCodes: embedCodes, // Include updated embedCodes\n          features: Array.isArray(req.body.features)\n            ? req.body.features\n            : req.body.features\n              ? req.body.features.split(\",\").map((f: string) => f.trim())\n              : [],\n        };\n\n        const property = await storage.updateProperty(\n          req.params.id,\n          propertyData,\n        );\n        if (!property) {\n          return res.status(404).json({ message: \"Property not found\" });\n        }\n\n        res.json(property);\n      } catch (error) {\n        console.error(\"Property update error:\", error);\n        res.status(400).json({ message: \"Invalid property data\", error });\n      }\n    },\n  );\n\n  // Mark property as sold endpoint\n  app.patch(\"/api/admin/properties/:id/sold\", async (req, res) => {\n    try {\n      const property = await storage.updateProperty(req.params.id, {\n        status: \"sold\",\n      });\n      if (!property) {\n        return res.status(404).json({ message: \"Property not found\" });\n      }\n      res.json(property);\n    } catch (error) {\n      console.error(\"Update property error:\", error);\n      res.status(500).json({ message: \"Failed to update property\" });\n    }\n  });\n\n  // Serve uploaded files with proper headers\n  app.use(\n    \"/uploads\",\n    (req, res, next) => {\n      // Set proper headers for video files\n      if (req.path.match(/\\.(mp4|webm|ogg|avi|mov)$/i)) {\n        const ext = path.extname(req.path).toLowerCase();\n        let contentType = \"video/mp4\";\n\n        switch (ext) {\n          case \".webm\":\n            contentType = \"video/webm\";\n            break;\n          case \".ogg\":\n            contentType = \"video/ogg\";\n            break;\n          case \".avi\":\n            contentType = \"video/x-msvideo\";\n            break;\n          case \".mov\":\n            contentType = \"video/quicktime\";\n            break;\n          default:\n            contentType = \"video/mp4\";\n        }\n\n        res.set({\n          \"Content-Type\": contentType,\n          \"Accept-Ranges\": \"bytes\",\n          \"Cache-Control\": \"public, max-age=86400\", // Reduced cache time\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET, HEAD, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Range\",\n          \"Cross-Origin-Resource-Policy\": \"cross-origin\",\n          \"Cross-Origin-Embedder-Policy\": \"unsafe-none\",\n        });\n      } else if (req.path.match(/\\.(jpg|jpeg|png|gif|svg)$/i)) {\n        res.set({\n          \"Cache-Control\": \"public, max-age=86400\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        });\n      }\n      next();\n    },\n    express.static(path.join(__dirname, \"../uploads\")),\n  );\n\n  const httpServer = createServer(app);\n  return httpServer;\n}","size_bytes":24846},"server/storage.ts":{"content":"import {\n  type User,\n  type InsertUser,\n  type Property,\n  type InsertProperty,\n  type Contact,\n  type InsertContact,\n  type PropertyInquiry,\n  type InsertPropertyInquiry,\n} from \"../shared/schema.js\";\nimport { randomUUID } from \"crypto\";\nimport { db } from \"./db.js\";\nimport {\n  users,\n  properties,\n  contacts,\n  propertyInquiries,\n} from \"../shared/schema.js\";\nimport { eq, and, gte, lte, sql } from \"drizzle-orm\";\n\n// Add database connection check function\nfunction isDbConnected(): boolean {\n  try {\n    return !!db;\n  } catch {\n    return false;\n  }\n}\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n\n  // Properties\n  getProperties(filters?: {\n    type?: string;\n    location?: string;\n    minPrice?: number;\n    maxPrice?: number;\n    featured?: boolean;\n  }): Promise<Property[]>;\n  getProperty(id: string): Promise<Property | undefined>;\n  createProperty(property: InsertProperty): Promise<Property>;\n  updateProperty(\n    id: string,\n    property: Partial<InsertProperty>,\n  ): Promise<Property | undefined>;\n  deleteProperty(id: string): Promise<boolean>;\n\n  // Contacts\n  getContacts(): Promise<Contact[]>;\n  createContact(contact: InsertContact): Promise<Contact>;\n\n  // Property Inquiries\n  getPropertyInquiries(propertyId?: string): Promise<PropertyInquiry[]>;\n  createPropertyInquiry(\n    inquiry: InsertPropertyInquiry,\n  ): Promise<PropertyInquiry>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  private fallbackToMemory = false;\n  private memoryProperties = new Map<string, Property>();\n  private memoryContacts = new Map<string, Contact>();\n  private memoryInquiries = new Map<string, PropertyInquiry>();\n\n  constructor() {\n    this.initializeData();\n  }\n\n  private async initializeData() {\n    // Add sample properties to memory\n    const sampleProperties = [\n      {\n        id: randomUUID(),\n        title: \"Premium Investment Opportunity - Don't Miss Chevron Again!\",\n        description:\n          \"If you missed the opportunity of investing in Chevron, Lekki, Lagos, don't worry - this is another exceptional opportunity to own prime land in this prestigious location!\",\n        type: \"residential_land\",\n        price: \"170000000\",\n        location: \"Chevron, Lekki, Lagos\",\n        address: \"Chevron Estate, Lekki, Lagos\",\n        size: \"650sqm\",\n        bedrooms: null,\n        bathrooms: null,\n        parking: null,\n        features: [\n          \"Governors Consent\",\n          \"Fenced and Gated\",\n          \"Dryland\",\n          \"Strategic Location\",\n        ],\n        images: [],\n        videos: [],\n        externalVideos: [],\n        embedCodes: [\n          {\n            embedCode: `<iframe width=\"356\" height=\"634\" src=\"https://www.youtube.com/embed/PVR4PAI0asE\" title=\"650sqm Dryland for Sale in Chevron Lekki Lagos - fenced, gated, and ready for development\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>`,\n            title: \"Property Virtual Tour\",\n            platform: \"YouTube\",\n          },\n        ],\n        status: \"available\",\n        featured: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: randomUUID(),\n        title: \"QUICK SALE‼️ 1000sqm Cornerpiece Land - Atlantic View Estate\",\n        description:\n          \"QUICK SALE ALERT! This exceptional 1000sqm cornerpiece land is currently selling in the prestigious Atlantic View Estate, New Road, Chevron, Lekki, Lagos. This is a rare opportunity that won't stay in the market for long! Located in one of Chevron's most sought-after developments, this cornerpiece plot offers maximum privacy and development potential. The property comes with Global Certificate of Occupancy (CofO) providing absolute security of ownership and investment protection. Atlantic View Estate is renowned for its excellent infrastructure, strategic location, and high-end residential developments. With easy access to major business districts, shopping centers, international schools, and recreational facilities, this property represents an outstanding investment opportunity. The estate features tarred roads, reliable power supply, water infrastructure, and 24/7 security. Don't miss this chance to secure a premium cornerpiece land in Chevron at an attractive price point. Properties of this caliber and location are extremely rare and highly sought after by discerning investors and homeowners alike.\",\n        type: \"residential_land\",\n        price: \"280000000\",\n        location: \"Atlantic View Estate, Chevron, Lekki, Lagos\",\n        address: \"New Road, Atlantic View Estate, Chevron, Lekki, Lagos\",\n        size: \"1000sqm\",\n        bedrooms: null,\n        bathrooms: null,\n        parking: null,\n        features: [\n          \"Global Certificate of Occupancy (CofO)\",\n          \"Cornerpiece Land\",\n          \"1000sqm\",\n          \"Atlantic View Estate\",\n          \"Quick Sale\",\n          \"Strategic Location\",\n          \"Premium Development Area\",\n          \"24/7 Security\",\n          \"Tarred Roads\",\n          \"Reliable Infrastructure\",\n          \"High Investment Potential\",\n          \"Chevron, Lekki\",\n        ],\n        images: [],\n        videos: [],\n        externalVideos: [],\n        embedCodes: [\n          {\n            embedCode: `<iframe width=\"356\" height=\"634\" src=\"https://www.youtube.com/embed/FwRwvrvPHJs\" title=\"1000sqm Plots of Land For Sale at Chevron Lekki Lagos - Real Estate Investment Opportunities 2025\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>`,\n            title: \"Atlantic View Estate Overview\",\n            platform: \"YouTube\",\n          },\n        ],\n        status: \"available\",\n        featured: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: randomUUID(),\n        title: \"DISTRESS SALE 📌 2 Plots of Dryland - Alashela Estate\",\n        description:\n          \"URGENT DISTRESS SALE OPPORTUNITY! Two exceptional plots of dryland measuring 1244sqm in total are now available in the prestigious Alashela Estate, Ogombo, Ajah. This is a rare chance to acquire prime real estate at an incredible value due to urgent sale circumstances. Located in one of Ajah's most sought-after residential developments, Alashela Estate offers excellent infrastructure, peaceful environment, and strong investment potential. Each plot is being offered at an unbeatable price of ₦35M net per plot, making this an outstanding opportunity for savvy investors. The property comes with Certificate of Occupancy (CofO), ensuring complete legal documentation and peace of mind for buyers. Alashela Estate is known for its well-planned layout, good road network, and proximity to major landmarks including shopping centers, schools, and business districts. The estate features reliable utilities, security provisions, and a growing community of residents. Don't miss this limited-time opportunity to secure premium land in Ogombo at distress sale prices. Properties like these are extremely rare and won't last long in the market. Perfect for residential development or long-term investment with excellent appreciation potential.\",\n        type: \"residential_land\",\n        price: \"35000000\",\n        location: \"Alashela Estate, Ogombo, Ajah\",\n        address: \"Alashela Estate, Ogombo, Ajah, Lagos\",\n        size: \"1244sqm (2 plots)\",\n        bedrooms: null,\n        bathrooms: null,\n        parking: null,\n        features: [\n          \"Certificate of Occupancy (CofO)\",\n          \"Dryland\",\n          \"2 Plots Available\",\n          \"1244sqm Total\",\n          \"Distress Sale Price\",\n          \"Alashela Estate\",\n          \"Prime Location\",\n          \"Good Road Network\",\n          \"Reliable Utilities\",\n          \"Investment Opportunity\",\n          \"Legal Documentation\",\n          \"Ogombo, Ajah\",\n        ],\n        images: [],\n        videos: [],\n        externalVideos: [],\n        embedCodes: [\n          {\n            embedCode: `<iframe width=\"356\" height=\"634\" src=\"https://www.youtube.com/embed/jmAkC6FeOVI\" title=\"Distress Sale! Two Plots (1244sqm) Dry Land in Ogombo Ajah Lagos - N35M Per Plot\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>`,\n            title: \"Atlantic View Estate Overview\",\n            platform: \"YouTube\",\n          },\n        ],\n        status: \"available\",\n        featured: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: randomUUID(),\n        title: \"LAND FOR SALE📌 660sqm Prime Land - Ogombo, Ajah\",\n        description:\n          \"EXCEPTIONAL LAND OPPORTUNITY! Prime 660sqm land now available for sale in the highly sought-after Ogombo area of Ajah, Lagos. This strategically located property offers excellent investment potential and is perfect for residential development. Priced at an attractive ₦55M, this land comes with Governors Consent, providing complete legal security and peace of mind for buyers. Ogombo, Ajah is one of Lagos's fastest-growing residential areas, known for its excellent infrastructure development and proximity to major business districts. The location offers easy access to Lekki-Epe Expressway, shopping centers, schools, and recreational facilities. With its prime location and verified documentation, this property represents an outstanding opportunity for both end-users looking to build their dream home and investors seeking high-return real estate assets. The area has seen significant appreciation in property values over recent years, making it an ideal choice for long-term investment. Don't miss this chance to secure prime land in one of Lagos's most promising residential corridors at this competitive price point.\",\n        type: \"residential_land\",\n        price: \"55000000\",\n        location: \"Ogombo, Ajah\",\n        address: \"Ogombo, Ajah, Lagos\",\n        size: \"660sqm\",\n        bedrooms: null,\n        bathrooms: null,\n        parking: null,\n        features: [\n          \"Governors Consent\",\n          \"660sqm\",\n          \"Prime Location\",\n          \"Ogombo, Ajah\",\n          \"Residential Development\",\n          \"Investment Opportunity\",\n          \"Legal Documentation\",\n          \"Strategic Location\",\n          \"High Growth Area\",\n          \"Easy Access to Lekki-Epe Expressway\",\n          \"Proximity to Amenities\",\n          \"Competitive Price\",\n        ],\n        images: [],\n        videos: [\n          \"/uploads/videos/LAND FOR SALE📌SIZE- 660sqm LOCATION- Ogombo, Ajah Price-N55MTitle-Governors consentFOR ENQUIRIE.mp4\",\n        ],\n        externalVideos: [],\n        embedCodes: [],\n        status: \"available\",\n        featured: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: randomUUID(),\n        title: \"URGENT SALE‼️ 660sqm Land - Greenland Estate, Ogombo, Ajah\",\n        description:\n          \"URGENT SALE OPPORTUNITY! Prime 660sqm land is now available for immediate sale in the prestigious Greenland Estate, Ogombo, Ajah, Lagos. This urgent sale presents an exceptional opportunity to acquire prime real estate at a competitive price point due to the seller's urgent circumstances. Located in one of Ajah's most sought-after gated communities, Greenland Estate offers excellent infrastructure, peaceful residential environment, and strong investment potential. The property comes with Governor's Consent, providing complete legal documentation and absolute security of ownership. Greenland Estate is renowned for its well-planned layout, excellent road network, reliable utilities, and 24/7 security services. The estate's strategic location provides easy access to major business districts, shopping centers, schools, and recreational facilities along the Lekki-Epe corridor. With its proximity to key landmarks and ongoing infrastructure development in the area, this property offers excellent potential for both residential development and long-term investment appreciation. Don't miss this time-sensitive opportunity to secure premium land in one of Lagos's fastest-growing residential corridors at an urgent sale price.\",\n        type: \"residential_land\",\n        price: \"55000000\",\n        location: \"Greenland Estate, Ogombo, Ajah\",\n        address: \"Greenland Estate, Ogombo, Ajah, Lagos\",\n        size: \"660sqm\",\n        bedrooms: null,\n        bathrooms: null,\n        parking: null,\n        features: [\n          \"Governor's Consent\",\n          \"660sqm\",\n          \"Urgent Sale\",\n          \"Greenland Estate\",\n          \"Gated Community\",\n          \"Prime Location\",\n          \"Ogombo, Ajah\",\n          \"Investment Opportunity\",\n          \"Legal Documentation\",\n          \"24/7 Security\",\n          \"Good Road Network\",\n          \"Reliable Utilities\",\n          \"Strategic Location\",\n          \"Competitive Price\",\n        ],\n        images: [],\n        videos: [],\n        externalVideos: [],\n        embedCodes: [],\n        status: \"available\",\n        featured: true,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    ];\n\n    sampleProperties.forEach((property) => {\n      this.memoryProperties.set(property.id, property as Property);\n    });\n\n    console.log(\"✅ Sample properties loaded to memory storage\");\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        const result = await db\n          .select()\n          .from(users)\n          .where(eq(users.id, id))\n          .limit(1);\n        return result[0];\n      }\n      return undefined;\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      return undefined;\n    }\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        const result = await db\n          .select()\n          .from(users)\n          .where(eq(users.username, username))\n          .limit(1);\n        return result[0];\n      }\n      return undefined;\n    } catch (error) {\n      console.error(\"Error fetching user by username:\", error);\n      return undefined;\n    }\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        await db.insert(users).values(user);\n      }\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n    }\n\n    return user;\n  }\n\n  async getProperties(filters?: {\n    type?: string;\n    location?: string;\n    minPrice?: number;\n    maxPrice?: number;\n    featured?: boolean;\n  }): Promise<Property[]> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        let query = db.select().from(properties);\n        const conditions = [];\n\n        if (filters) {\n          if (filters.type && filters.type !== \"All Types\") {\n            conditions.push(eq(properties.type, filters.type));\n          }\n          if (filters.location && filters.location !== \"All Locations\") {\n            conditions.push(\n              sql`${properties.location} ILIKE ${`%${filters.location}%`}`,\n            );\n          }\n          if (filters.featured !== undefined) {\n            conditions.push(eq(properties.featured, filters.featured));\n          }\n          if (filters.minPrice) {\n            conditions.push(\n              gte(sql`CAST(${properties.price} AS DECIMAL)`, filters.minPrice),\n            );\n          }\n          if (filters.maxPrice) {\n            conditions.push(\n              lte(sql`CAST(${properties.price} AS DECIMAL)`, filters.maxPrice),\n            );\n          }\n        }\n\n        if (conditions.length > 0) {\n          query = query.where(and(...conditions));\n        }\n\n        const result = await query.orderBy(sql`${properties.createdAt} DESC`);\n        return result;\n      } else {\n        // Fallback to memory storage\n        let result = Array.from(this.memoryProperties.values());\n\n        if (filters) {\n          result = result.filter((property) => {\n            if (\n              filters.type &&\n              filters.type !== \"All Types\" &&\n              property.type !== filters.type\n            )\n              return false;\n            if (\n              filters.location &&\n              filters.location !== \"All Locations\" &&\n              !property.location\n                .toLowerCase()\n                .includes(filters.location.toLowerCase())\n            )\n              return false;\n            if (\n              filters.featured !== undefined &&\n              property.featured !== filters.featured\n            )\n              return false;\n            if (\n              filters.minPrice &&\n              parseFloat(property.price) < filters.minPrice\n            )\n              return false;\n            if (\n              filters.maxPrice &&\n              parseFloat(property.price) > filters.maxPrice\n            )\n              return false;\n            return true;\n          });\n        }\n\n        return result.sort(\n          (a, b) =>\n            new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime(),\n        );\n      }\n    } catch (error) {\n      this.fallbackToMemory = true;\n      console.error(\n        \"❌ Error fetching properties, falling back to memory storage:\",\n        error,\n      );\n      return Array.from(this.memoryProperties.values());\n    }\n  }\n\n  async getProperty(id: string): Promise<Property | undefined> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        const result = await db\n          .select()\n          .from(properties)\n          .where(eq(properties.id, id))\n          .limit(1);\n        return result[0];\n      } else {\n        return this.memoryProperties.get(id);\n      }\n    } catch (error) {\n      this.fallbackToMemory = true;\n      console.error(\n        \"❌ Error fetching property, falling back to memory storage:\",\n        error,\n      );\n      return this.memoryProperties.get(id);\n    }\n  }\n\n  async createProperty(property: InsertProperty): Promise<Property> {\n    const id = randomUUID();\n    const newProperty = {\n      ...property,\n      id,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        await db.insert(properties).values(newProperty);\n        console.log(\"✅ Property saved to database:\", newProperty.title);\n      } else {\n        this.fallbackToMemory = true;\n        this.memoryProperties.set(id, newProperty as Property);\n        console.log(\"✅ Property saved to memory storage:\", newProperty.title);\n      }\n      return newProperty as Property;\n    } catch (error) {\n      console.error(\n        \"❌ Database error, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      this.memoryProperties.set(id, newProperty as Property);\n      console.log(\"✅ Property saved to memory storage:\", newProperty.title);\n      return newProperty as Property;\n    }\n  }\n\n  async updateProperty(\n    id: string,\n    property: Partial<InsertProperty>,\n  ): Promise<Property | undefined> {\n    // Create properly typed update data with explicit type handling\n    const updateData: Partial<Property> & { updatedAt: Date } = {\n      updatedAt: new Date(),\n    };\n\n    // Copy all primitive properties\n    Object.keys(property).forEach((key) => {\n      if (key !== \"features\" && key !== \"images\" && key !== \"videos\") {\n        (updateData as any)[key] = (property as any)[key];\n      }\n    });\n\n    // Handle array properties with explicit typing\n    if (property.features !== undefined) {\n      updateData.features = Array.isArray(property.features)\n        ? property.features.map(String)\n        : [];\n    }\n    if (property.images !== undefined) {\n      updateData.images = Array.isArray(property.images)\n        ? property.images.map(String)\n        : [];\n    }\n    if (property.videos !== undefined) {\n      updateData.videos = Array.isArray(property.videos)\n        ? property.videos.map(String)\n        : [];\n    }\n\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        await db\n          .update(properties)\n          .set(updateData)\n          .where(eq(properties.id, id));\n        console.log(\"✅ Property updated in database:\", id);\n        return this.getProperty(id);\n      } else {\n        const existing = this.memoryProperties.get(id);\n        if (existing) {\n          const updated = { ...existing, ...updateData };\n          this.memoryProperties.set(id, updated);\n          console.log(\"✅ Property updated in memory storage:\", id);\n          return updated;\n        }\n        return undefined;\n      }\n    } catch (error) {\n      console.error(\n        \"❌ Database error, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      const existing = this.memoryProperties.get(id);\n      if (existing) {\n        const updated = { ...existing, ...updateData };\n        this.memoryProperties.set(id, updated);\n        console.log(\"✅ Property updated in memory storage:\", id);\n        return updated;\n      }\n      return undefined;\n    }\n  }\n\n  async deleteProperty(id: string): Promise<boolean> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        const result = await db.delete(properties).where(eq(properties.id, id));\n        console.log(\"✅ Property deleted from database:\", id);\n        return result.rowCount !== null && result.rowCount > 0;\n      } else {\n        const deleted = this.memoryProperties.delete(id);\n        if (deleted) {\n          console.log(\"✅ Property deleted from memory storage:\", id);\n        }\n        return deleted;\n      }\n    } catch (error) {\n      console.error(\n        \"❌ Database error, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      const deleted = this.memoryProperties.delete(id);\n      if (deleted) {\n        console.log(\"✅ Property deleted from memory storage:\", id);\n      }\n      return deleted;\n    }\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        const result = await db\n          .select()\n          .from(contacts)\n          .orderBy(sql`${contacts.createdAt} DESC`);\n        return result;\n      } else {\n        return Array.from(this.memoryContacts.values());\n      }\n    } catch (error) {\n      console.error(\n        \"❌ Error fetching contacts, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      return Array.from(this.memoryContacts.values());\n    }\n  }\n\n  async createContact(contact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const newContact = {\n      ...contact,\n      id,\n      status: \"new\",\n      createdAt: new Date(),\n    };\n\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        await db.insert(contacts).values(newContact);\n        console.log(\"✅ Contact saved to database\");\n      } else {\n        this.fallbackToMemory = true;\n        this.memoryContacts.set(id, newContact as Contact);\n        console.log(\"✅ Contact saved to memory storage\");\n      }\n      return newContact as Contact;\n    } catch (error) {\n      console.error(\n        \"❌ Database error, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      this.memoryContacts.set(id, newContact as Contact);\n      console.log(\"✅ Contact saved to memory storage\");\n      return newContact as Contact;\n    }\n  }\n\n  async getPropertyInquiries(propertyId?: string): Promise<PropertyInquiry[]> {\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        let query = db.select().from(propertyInquiries);\n\n        if (propertyId) {\n          query = query.where(eq(propertyInquiries.propertyId, propertyId));\n        }\n\n        const result = await query.orderBy(\n          sql`${propertyInquiries.createdAt} DESC`,\n        );\n        return result;\n      } else {\n        let result = Array.from(this.memoryInquiries.values());\n        if (propertyId) {\n          result = result.filter(\n            (inquiry) => inquiry.propertyId === propertyId,\n          );\n        }\n        return result.sort(\n          (a, b) =>\n            new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime(),\n        );\n      }\n    } catch (error) {\n      console.error(\n        \"❌ Error fetching inquiries, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      let result = Array.from(this.memoryInquiries.values());\n      if (propertyId) {\n        result = result.filter((inquiry) => inquiry.propertyId === propertyId);\n      }\n      return result.sort(\n        (a, b) =>\n          new Date(b.createdAt!).getTime() - new Date(a.createdAt!).getTime(),\n      );\n    }\n  }\n\n  async createPropertyInquiry(\n    inquiry: InsertPropertyInquiry,\n  ): Promise<PropertyInquiry> {\n    const id = randomUUID();\n    const newInquiry = {\n      ...inquiry,\n      id,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n\n    try {\n      if (isDbConnected() && !this.fallbackToMemory) {\n        await db.insert(propertyInquiries).values(newInquiry);\n        console.log(\"✅ Property inquiry saved to database\");\n      } else {\n        this.fallbackToMemory = true;\n        this.memoryInquiries.set(id, newInquiry as PropertyInquiry);\n        console.log(\"✅ Property inquiry saved to memory storage\");\n      }\n      return newInquiry as PropertyInquiry;\n    } catch (error) {\n      console.error(\n        \"❌ Database error, falling back to memory storage:\",\n        error,\n      );\n      this.fallbackToMemory = true;\n      this.memoryInquiries.set(id, newInquiry as PropertyInquiry);\n      console.log(\"✅ Property inquiry saved to memory storage\");\n      return newInquiry as PropertyInquiry;\n    }\n  }\n\n  // Add saveProperty method for compatibility with routes\n  async saveProperty(propertyData: any): Promise<Property> {\n    const insertProperty: InsertProperty = {\n      title: propertyData.title,\n      description: propertyData.description,\n      type: propertyData.type,\n      price: propertyData.price.toString(),\n      location: propertyData.location,\n      address: propertyData.address || null,\n      size: propertyData.size || null,\n      bedrooms: propertyData.bedrooms || null,\n      bathrooms: propertyData.bathrooms || null,\n      parking: propertyData.parking || null,\n      features: Array.isArray(propertyData.features)\n        ? (propertyData.features as string[])\n        : [],\n      images: Array.isArray(propertyData.images)\n        ? (propertyData.images as string[])\n        : [],\n      videos: Array.isArray(propertyData.videos)\n        ? (propertyData.videos as string[])\n        : [],\n      status: \"available\",\n      featured: propertyData.featured || false,\n    };\n\n    return this.createProperty(insertProperty);\n  }\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":27451},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\n// Use dynamic import to handle missing config gracefully\nconst viteConfig =\n  process.env.NODE_ENV === \"production\"\n    ? {}\n    : (await import(\"../vite.config.js\")).default;\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(template);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(\"dist\");\n  const publicPath = path.join(distPath, \"public\");\n\n  if (!fs.existsSync(publicPath)) {\n    log(`Build directory not found: ${publicPath}. Creating directory structure.`);\n    try {\n      fs.mkdirSync(publicPath, { recursive: true });\n      log(`Created build directory: ${publicPath}`);\n    } catch (error) {\n      log(`Failed to create build directory: ${error}`);\n      return;\n    }\n  }\n\n  app.use(express.static(publicPath));\n\n  app.use(\"*\", (_req, res) => {\n    const indexPath = path.resolve(publicPath, \"index.html\");\n    res.sendFile(indexPath);\n  });\n}","size_bytes":2467},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, decimal, boolean, timestamp, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const properties = pgTable(\"properties\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  type: text(\"type\").notNull(), // 'residential_land', 'commercial_land', 'luxury_home', 'apartment'\n  price: decimal(\"price\", { precision: 15, scale: 2 }).notNull(),\n  location: text(\"location\").notNull(),\n  address: text(\"address\"),\n  size: text(\"size\"), // e.g., \"650 sqm\", \"4 bedrooms\"\n  bedrooms: text(\"bedrooms\"),\n  bathrooms: text(\"bathrooms\"),\n  parking: text(\"parking\"),\n  features: jsonb(\"features\").$type<string[]>(), // Array of features\n  images: jsonb(\"images\").$type<string[]>(), // Array of image URLs\n  videos: jsonb(\"videos\").$type<string[]>(), // Array of video URLs\n  externalVideos: jsonb(\"external_videos\").$type<Array<{\n    url: string;\n    platform: string;\n    title?: string;\n    thumbnail?: string;\n  }>>(),\n  embedCodes: jsonb(\"embed_codes\").$type<Array<{\n    embedCode: string;\n    title?: string;\n    platform?: string;\n  }>>(),\n  status: text(\"status\").notNull().default(\"available\"), // 'available', 'sold', 'reserved'\n  featured: boolean(\"featured\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  fullName: text(\"full_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  location: text(\"location\"),\n  propertyType: text(\"property_type\"),\n  budget: text(\"budget\"),\n  purpose: text(\"purpose\"),\n  message: text(\"message\"),\n  contactMethod: text(\"contact_method\"), // 'email', 'phone', 'whatsapp'\n  status: text(\"status\").default(\"new\"), // 'new', 'contacted', 'qualified', 'converted'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const propertyInquiries = pgTable(\"property_inquiries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  propertyId: varchar(\"property_id\").references(() => properties.id),\n  fullName: text(\"full_name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  message: text(\"message\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertPropertySchema = createInsertSchema(properties).extend({\n  images: z.array(z.string()).optional(),\n  videos: z.array(z.string()).optional(),\n  features: z.array(z.string()).optional(),\n  // Support for external media URLs\n  externalImages: z.array(z.string().url()).optional(),\n  externalVideos: z.array(z.object({\n    url: z.string().url(),\n    platform: z.enum(['youtube', 'instagram', 'vimeo', 'facebook', 'tiktok', 'other']),\n    title: z.string().optional(),\n    thumbnail: z.string().url().optional()\n  })).optional(),\n  // Support for embed codes\n  embedCodes: z.array(z.object({\n    embedCode: z.string(),\n    title: z.string().optional(),\n    platform: z.string().optional()\n  })).optional(),\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n  status: true,\n});\n\nexport const insertPropertyInquirySchema = createInsertSchema(propertyInquiries).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Property = typeof properties.$inferSelect;\nexport type InsertProperty = z.infer<typeof insertPropertySchema>;\nexport type Contact = typeof contacts.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type PropertyInquiry = typeof propertyInquiries.$inferSelect;\nexport type InsertPropertyInquiry = z.infer<typeof insertPropertyInquirySchema>;","size_bytes":4257},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useEffect } from \"react\";\nimport { initGA } from \"./lib/analytics\";\nimport { useAnalytics } from \"./hooks/use-analytics\";\nimport { Helmet } from \"react-helmet\";\n\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport PropertyListings from \"@/pages/PropertyListings\";\nimport PropertyDetails from \"@/pages/PropertyDetails\";\nimport Contact from \"@/pages/Contact\";\nimport NotFound from \"@/pages/not-found\";\nimport Gallery from \"@/pages/Gallery\";\nimport AdminUpload from \"@/pages/AdminUpload\";\n\nimport Navigation from \"@/components/Navigation\";\nimport Footer from \"@/components/Footer\";\nimport FloatingWhatsApp from \"@/components/FloatingWhatsApp\";\n\nfunction Router() {\n  // Track page views when routes change\n  useAnalytics();\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Helmet>\n        <title>Ebutine Properties - Diaspora's First Choice for Verified Properties in Nigeria</title>\n        <meta name=\"description\" content=\"Premium real estate company in Lagos, Nigeria. Buy land, luxury homes, commercial properties. Trusted by diaspora clients. Verified listings in developed areas.\" />\n        <meta name=\"keywords\" content=\"buy land in Lagos, luxury homes Nigeria, commercial land Lagos, diaspora real estate Nigeria, verified properties Nigeria\" />\n\n        {/* Open Graph / Facebook */}\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content=\"Ebutine Properties - Verified Real Estate in Nigeria\" />\n        <meta property=\"og:description\" content=\"Premium properties in Lagos. Residential & commercial lands, luxury homes. Trusted by diaspora clients worldwide.\" />\n\n        {/* Structured Data for Real Estate */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"RealEstateAgent\",\n            \"name\": \"Ebutine Properties\",\n            \"description\": \"Premium real estate company specializing in residential and commercial lands, luxury homes, property management and development in Lagos, Nigeria\",\n            \"address\": {\n              \"@type\": \"PostalAddress\",\n              \"streetAddress\": \"House No 2, Road 4, Greenland Estate, Olokonla\",\n              \"addressLocality\": \"Sangotedo Ajah\",\n              \"addressRegion\": \"Lagos\",\n              \"addressCountry\": \"Nigeria\"\n            },\n            \"telephone\": \"+2349061461411\",\n            \"email\": \"ebutineproperties@gmail.com\",\n            \"areaServed\": \"Lagos, Nigeria\"\n          })}\n        </script>\n      </Helmet>\n\n      <Navigation />\n      <main className=\"flex-grow\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/properties\" component={PropertyListings} />\n          <Route path=\"/properties/:id\" component={PropertyDetails} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/gallery\" component={Gallery} />\n          <Route path=\"/admin/upload\" component={AdminUpload} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n      <FloatingWhatsApp />\n    </div>\n  );\n}\n\nfunction App() {\n  // Initialize Google Analytics when app loads\n  useEffect(() => {\n    // Verify required environment variable is present\n    if (!import.meta.env.VITE_GA_MEASUREMENT_ID) {\n      console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    } else {\n      initGA();\n    }\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Router />\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","size_bytes":3975},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Hero Section Animations */\n@keyframes slowZoom {\n  0% { transform: scale(1.1); }\n  100% { transform: scale(1.2); }\n}\n\n@keyframes slowPan {\n  0% { transform: translateX(0) translateY(0); }\n  25% { transform: translateX(-10px) translateY(-5px); }\n  50% { transform: translateX(0) translateY(-10px); }\n  75% { transform: translateX(10px) translateY(-5px); }\n  100% { transform: translateX(0) translateY(0); }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n@keyframes float-delayed {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-30px) rotate(-180deg); }\n}\n\n@keyframes float-slow {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-15px) rotate(90deg); }\n}\n\n@keyframes shimmer {\n  0% { background-position: -200px 0; }\n  100% { background-position: calc(200px + 100%) 0; }\n}\n\n@keyframes pulse {\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n}\n\n@keyframes bounce-subtle {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-5px); }\n}\n\n@keyframes slideInFromLeft {\n  0% { transform: translateX(-100px); opacity: 0; }\n  100% { transform: translateX(0); opacity: 1; }\n}\n\n@keyframes slideInFromRight {\n  0% { transform: translateX(100px); opacity: 0; }\n  100% { transform: translateX(0); opacity: 1; }\n}\n\n@keyframes fadeInUp {\n  0% { transform: translateY(30px); opacity: 0; }\n  100% { transform: translateY(0); opacity: 1; }\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-float-delayed {\n  animation: float-delayed 8s ease-in-out infinite;\n}\n\n.animate-float-slow {\n  animation: float-slow 10s ease-in-out infinite;\n}\n\n.animate-slide-in-left {\n  animation: slideInFromLeft 0.8s ease-out;\n}\n\n.animate-slide-in-right {\n  animation: slideInFromRight 0.8s ease-out;\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(240, 10%, 3.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(240, 10%, 3.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(240, 10%, 3.9%);\n  --primary: hsl(221, 14%, 44%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(240, 4.8%, 95.9%);\n  --secondary-foreground: hsl(240, 5.9%, 10%);\n  --muted: hsl(240, 4.8%, 95.9%);\n  --muted-foreground: hsl(240, 3.8%, 46.1%);\n  --accent: hsl(240, 4.8%, 95.9%);\n  --accent-foreground: hsl(240, 5.9%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 5.9%, 90%);\n  --input: hsl(240, 5.9%, 90%);\n  --ring: hsl(240, 5.9%, 10%);\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --radius: 1rem;\n\n  /* Enhanced Ebutine Brand Colors */\n  --ebutine-blue: hsl(220, 13%, 46%);\n  --ebutine-blue-light: hsl(220, 13%, 60%);\n  --ebutine-blue-dark: hsl(220, 13%, 32%);\n  --ebutine-orange: hsl(24, 95%, 53%);\n  --ebutine-orange-light: hsl(24, 95%, 65%);\n  --ebutine-orange-dark: hsl(24, 95%, 41%);\n  --ebutine-dark: hsl(220, 26%, 14%);\n  --ebutine-dark-light: hsl(220, 26%, 20%);\n  --ebutine-light: hsl(220, 14%, 96%);\n  --ebutine-light-dark: hsl(220, 14%, 90%);\n\n  /* Advanced Shadows */\n  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);\n  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\n  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);\n  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);\n  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);\n  --shadow-orange: 0 20px 25px -5px rgb(255 165 0 / 0.3), 0 8px 10px -6px rgb(255 165 0 / 0.2);\n  --shadow-blue: 0 20px 25px -5px rgb(59 130 246 / 0.3), 0 8px 10px -6px rgb(59 130 246 / 0.2);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(0, 0%, 98%);\n  --primary-foreground: hsl(240, 5.9%, 10%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --chart-1: hsl(220, 70%, 50%);\n  --chart-2: hsl(160, 60%, 45%);\n  --chart-3: hsl(30, 80%, 55%);\n  --chart-4: hsl(280, 65%, 60%);\n  --chart-5: hsl(340, 75%, 55%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n    font-family: 'Inter', sans-serif;\n  }\n  /* Favicon */\n  link[rel=\"icon\"] {\n    content: url('/public/favicon.png');\n  }\n}\n\n@layer utilities {\n  /* Contact Section Icons */\n  .contact-icon {\n    width: 24px;\n    height: 24px;\n    display: inline-block;\n    vertical-align: middle;\n    margin-right: 8px;\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n\n  .icon-office {\n    background-image: url('/icons/building.svg'); /* Replace with your office icon */\n  }\n\n  .icon-phone {\n    background-image: url('/icons/phone.svg'); /* Replace with your phone icon */\n  }\n\n  .icon-email {\n    background-image: url('/icons/mail.svg'); /* Replace with your email icon */\n  }\n\n  /* Text Colors */\n  .text-ebutine-blue {\n    color: var(--ebutine-blue);\n  }\n  .text-ebutine-blue-light {\n    color: var(--ebutine-blue-light);\n  }\n  .text-ebutine-orange {\n    color: var(--ebutine-orange);\n  }\n  .text-ebutine-dark {\n    color: var(--ebutine-dark);\n  }\n\n  /* Background Colors */\n  .bg-ebutine-blue {\n    background-color: var(--ebutine-blue);\n  }\n  .bg-ebutine-orange {\n    background-color: var(--ebutine-orange);\n  }\n  .bg-ebutine-dark {\n    background-color: var(--ebutine-dark);\n  }\n  .bg-ebutine-light {\n    background-color: var(--ebutine-light);\n  }\n\n  /* Gradient Backgrounds */\n  .bg-gradient-ebutine {\n    background: linear-gradient(135deg, var(--ebutine-blue) 0%, var(--ebutine-dark) 100%);\n  }\n  .bg-gradient-ebutine-orange {\n    background: linear-gradient(135deg, var(--ebutine-orange) 0%, var(--ebutine-orange-dark) 100%);\n  }\n  .bg-gradient-warm {\n    background: linear-gradient(135deg, rgb(254, 202, 202) 0%, rgb(252, 165, 165) 50%, var(--ebutine-orange) 100%);\n  }\n  .bg-gradient-cool {\n    background: linear-gradient(135deg, var(--ebutine-light) 0%, rgb(219, 234, 254) 50%, var(--ebutine-blue) 100%);\n  }\n\n  /* Border Colors */\n  .border-ebutine-orange {\n    border-color: var(--ebutine-orange);\n  }\n  .border-ebutine-blue {\n    border-color: var(--ebutine-blue);\n  }\n\n  /* Hover Effects */\n  .hover\\:bg-ebutine-orange:hover {\n    background-color: var(--ebutine-orange);\n  }\n  .hover\\:text-ebutine-orange:hover {\n    color: var(--ebutine-orange);\n  }\n  .hover\\:shadow-orange:hover {\n    box-shadow: var(--shadow-orange);\n  }\n  .hover\\:shadow-blue:hover {\n    box-shadow: var(--shadow-blue);\n  }\n\n  /* Enhanced Shadows */\n  .shadow-ebutine {\n    box-shadow: var(--shadow-xl);\n  }\n  .shadow-ebutine-orange {\n    box-shadow: var(--shadow-orange);\n  }\n  .shadow-ebutine-blue {\n    box-shadow: var(--shadow-blue);\n  }\n\n  /* Glass Effect */\n  .glass {\n    background: rgba(255, 255, 255, 0.25);\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.18);\n  }\n\n  /* Enhanced Transitions */\n  .transition-all-smooth {\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  /* Button Enhancements */\n  .btn-primary {\n    @apply bg-gradient-ebutine-orange text-white font-semibold py-3 px-8 rounded-xl shadow-lg hover:shadow-ebutine-orange transition-all-smooth transform hover:scale-105;\n  }\n\n  .btn-secondary {\n    @apply bg-white text-ebutine-blue border-2 border-ebutine-blue font-semibold py-3 px-8 rounded-xl shadow-lg hover:bg-ebutine-blue hover:text-white transition-all-smooth;\n  }\n\n  /* Card Enhancements */\n  .card-enhanced {\n    @apply bg-white rounded-2xl shadow-lg hover:shadow-ebutine transition-all-smooth transform hover:-translate-y-2;\n  }\n\n  /* Typography Enhancements */\n  .text-gradient {\n    background: linear-gradient(135deg, var(--ebutine-blue) 0%, var(--ebutine-orange) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n\n  .text-shadow-strong {\n    text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7), 1px 1px 4px rgba(0, 0, 0, 0.5);\n  }\n\n  /* Enhanced Button Styles */\n  .btn-primary {\n    @apply bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-3 px-8 rounded-xl shadow-lg hover:shadow-ebutine-orange transition-all-smooth transform hover:scale-105;\n  }\n\n  .btn-secondary {\n    @apply bg-white text-ebutine-blue border-2 border-ebutine-blue font-semibold py-3 px-8 rounded-xl shadow-lg hover:bg-ebutine-blue hover:text-white transition-all-smooth;\n  }\n\n  .btn-outline {\n    @apply bg-transparent border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-semibold py-3 px-8 rounded-xl shadow-lg backdrop-blur-sm transition-all-smooth;\n  }\n\n  /* Ready to Invest section styling */\n  .ready-to-invest {\n    background: white !important;\n    color: #2c3e50 !important;\n  }\n\n  /* Ensure all button text is always visible */\n  .ready-to-invest .btn-primary,\n  .ready-to-invest button {\n    background: #f39c12 !important;\n    color: white !important;\n    border: none !important;\n  }\n\n  .ready-to-invest .btn-secondary,\n  .ready-to-invest button[variant=\"outline\"],\n  .ready-to-invest a button,\n  .ready-to-invest a[class*=\"border\"] {\n    background: #2c3e50 !important;\n    color: white !important;\n    border: 2px solid #2c3e50 !important;\n  }\n\n  .ready-to-invest .btn-secondary:hover,\n  .ready-to-invest button[variant=\"outline\"]:hover,\n  .ready-to-invest a button:hover,\n  .ready-to-invest a[class*=\"border\"]:hover {\n    background: #34495e !important;\n    color: white !important;\n    border: 2px solid #34495e !important;\n  }\n\n  /* Specific styling for all second buttons including WhatsApp, View Properties, etc. */\n  .ready-to-invest a[href*=\"whatsapp\"] button,\n  .ready-to-invest a[href*=\"wa.me\"] button,\n  .ready-to-invest a[href*=\"tel:\"] button,\n  .ready-to-invest a[href*=\"properties\"] button,\n  .ready-to-invest a[href*=\"/properties\"] button,\n  .ready-to-invest a button[variant=\"outline\"],\n  .ready-to-invest a .border-white,\n  .ready-to-invest a .border-2 {\n    background: #2c3e50 !important;\n    color: white !important;\n    border: 2px solid #2c3e50 !important;\n  }\n\n  .ready-to-invest a[href*=\"whatsapp\"] button:hover,\n  .ready-to-invest a[href*=\"wa.me\"] button:hover,\n  .ready-to-invest a[href*=\"tel:\"] button:hover,\n  .ready-to-invest a[href*=\"properties\"] button:hover,\n  .ready-to-invest a[href*=\"/properties\"] button:hover,\n  .ready-to-invest a button[variant=\"outline\"]:hover,\n  .ready-to-invest a .border-white:hover,\n  .ready-to-invest a .border-2:hover {\n    background: #34495e !important;\n    color: white !important;\n    border: 2px solid #34495e !important;\n  }\n\n  /* Footer Social Icons Removal */\n  .footer-social-icons a[href*=\"linkedin\"],\n  .footer-social-icons a[href*=\"youtube\"] {\n    display: none;\n  }\n}","size_bytes":11614},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ContactForm.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { insertContactSchema, type InsertContact } from \"@shared/schema\";\nimport { Send } from \"lucide-react\";\n\nexport default function ContactForm() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<InsertContact>({\n    resolver: zodResolver(insertContactSchema),\n    defaultValues: {\n      fullName: \"\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      propertyType: \"\",\n      budget: \"\",\n      purpose: \"\",\n      message: \"\",\n      contactMethod: \"\",\n    },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: InsertContact) => {\n      return apiRequest(\"POST\", \"/api/contacts\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message Sent Successfully!\",\n        description: \"Thank you for your inquiry. We will contact you within 24 hours.\",\n      });\n      form.reset();\n      queryClient.invalidateQueries({ queryKey: [\"/api/contacts\"] });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error Sending Message\",\n        description: \"There was an error sending your message. Please try again.\",\n        variant: \"destructive\",\n      });\n      console.error(\"Contact form error:\", error);\n    },\n  });\n\n  const onSubmit = (data: InsertContact) => {\n    mutation.mutate(data);\n  };\n\n  return (\n    <div className=\"card-enhanced p-8\">\n      <h3 className=\"text-3xl font-bold text-gradient mb-8\">Send us a Message</h3>\n      \n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\" data-testid=\"contact-form\">\n          {/* Personal Information */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <FormField\n              control={form.control}\n              name=\"fullName\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Full Name *</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Enter your full name\" {...field} data-testid=\"input-full-name\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email Address *</FormLabel>\n                  <FormControl>\n                    <Input type=\"email\" placeholder=\"Enter your email\" {...field} data-testid=\"input-email\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <FormField\n              control={form.control}\n              name=\"phone\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Phone Number *</FormLabel>\n                  <FormControl>\n                    <Input type=\"tel\" placeholder=\"+234 xxx xxx xxxx\" {...field} data-testid=\"input-phone\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"location\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Current Location</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value || \"\"}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-location\">\n                        <SelectValue placeholder=\"Select Location\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"Nigeria\">Nigeria</SelectItem>\n                      <SelectItem value=\"United Kingdom\">United Kingdom</SelectItem>\n                      <SelectItem value=\"United States\">United States</SelectItem>\n                      <SelectItem value=\"Canada\">Canada</SelectItem>\n                      <SelectItem value=\"Australia\">Australia</SelectItem>\n                      <SelectItem value=\"Germany\">Germany</SelectItem>\n                      <SelectItem value=\"Other\">Other</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          {/* Investment Preferences */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <FormField\n              control={form.control}\n              name=\"propertyType\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Property Type Interest</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value || \"\"}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-property-type\">\n                        <SelectValue placeholder=\"Select Property Type\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"residential_land\">Residential Land</SelectItem>\n                      <SelectItem value=\"commercial_land\">Commercial Land</SelectItem>\n                      <SelectItem value=\"luxury_home\">Luxury Homes</SelectItem>\n                      <SelectItem value=\"mixed\">Mixed Portfolio</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"budget\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Budget Range</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value || \"\"}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-budget\">\n                        <SelectValue placeholder=\"Select Budget Range\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"5-15\">₦5M - ₦15M</SelectItem>\n                      <SelectItem value=\"15-30\">₦15M - ₦30M</SelectItem>\n                      <SelectItem value=\"30-50\">₦30M - ₦50M</SelectItem>\n                      <SelectItem value=\"50-100\">₦50M - ₦100M</SelectItem>\n                      <SelectItem value=\"100+\">₦100M+</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <FormField\n            control={form.control}\n            name=\"purpose\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Investment Purpose</FormLabel>\n                <Select onValueChange={field.onChange} defaultValue={field.value || \"\"}>\n                  <FormControl>\n                    <SelectTrigger data-testid=\"select-purpose\">\n                      <SelectValue placeholder=\"Select Purpose\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"personal\">Personal Use / Relocation</SelectItem>\n                    <SelectItem value=\"investment\">Investment / Capital Appreciation</SelectItem>\n                    <SelectItem value=\"rental\">Rental Income Generation</SelectItem>\n                    <SelectItem value=\"development\">Property Development</SelectItem>\n                    <SelectItem value=\"portfolio\">Portfolio Diversification</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"message\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Message</FormLabel>\n                <FormControl>\n                  <Textarea \n                    placeholder=\"Tell us about your property requirements, questions, or how we can help you...\"\n                    rows={5}\n                    {...field}\n                    value={field.value || \"\"}\n                    data-testid=\"textarea-message\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {/* Preferred Contact Method */}\n          <FormField\n            control={form.control}\n            name=\"contactMethod\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Preferred Contact Method</FormLabel>\n                <FormControl>\n                  <RadioGroup\n                    onValueChange={field.onChange}\n                    defaultValue={field.value || \"\"}\n                    className=\"grid grid-cols-1 md:grid-cols-3 gap-4\"\n                    data-testid=\"radio-contact-method\"\n                  >\n                    <div className=\"flex items-center space-x-2 p-3 border border-gray-300 rounded-lg\">\n                      <RadioGroupItem value=\"email\" id=\"email\" />\n                      <label htmlFor=\"email\" className=\"text-ebutine-blue cursor-pointer\">Email</label>\n                    </div>\n                    <div className=\"flex items-center space-x-2 p-3 border border-gray-300 rounded-lg\">\n                      <RadioGroupItem value=\"phone\" id=\"phone\" />\n                      <label htmlFor=\"phone\" className=\"text-ebutine-blue cursor-pointer\">Phone Call</label>\n                    </div>\n                    <div className=\"flex items-center space-x-2 p-3 border border-gray-300 rounded-lg\">\n                      <RadioGroupItem value=\"whatsapp\" id=\"whatsapp\" />\n                      <label htmlFor=\"whatsapp\" className=\"text-ebutine-blue cursor-pointer\">WhatsApp</label>\n                    </div>\n                  </RadioGroup>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <Button \n            type=\"submit\" \n            className=\"btn-primary w-full py-4 px-8 text-lg\"\n            disabled={mutation.isPending}\n            data-testid=\"submit-contact-form\"\n          >\n            {mutation.isPending ? (\n              \"Sending...\"\n            ) : (\n              <>\n                <Send className=\"mr-2 h-4 w-4\" />\n                Send Message\n              </>\n            )}\n          </Button>\n\n          <p className=\"text-xs text-ebutine-blue text-center\">\n            By submitting this form, you agree to our privacy policy and consent to be contacted by Ebutine Properties.\n          </p>\n        </form>\n      </Form>\n    </div>\n  );\n}\n","size_bytes":11676},"client/src/components/FeaturedProperties.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport PropertyCard from \"./PropertyCard\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport type { Property } from \"@shared/schema\";\n\nexport default function FeaturedProperties() {\n  const { data: properties = [], isLoading } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/properties?featured=true\");\n      if (!response.ok) throw new Error(\"Failed to fetch properties\");\n      return response.json();\n    },\n  });\n\n  const handleViewDetails = (id: string) => {\n    // Navigate to property details page\n    window.location.href = `/properties/${id}`;\n  };\n\n  const handleInquire = (id: string) => {\n    // Open WhatsApp with property inquiry\n    const message = `Hi, I'm interested in the property with ID: ${id}. Can you provide more details?`;\n    window.open(`https://wa.me/2349061461411?text=${encodeURIComponent(message)}`, '_blank');\n  };\n\n  if (isLoading) {\n    return (\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Featured Properties</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Handpicked premium properties with verified documentation and clear titles\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"bg-gray-200 rounded-2xl h-96 animate-pulse\"></div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Featured Properties</h2>\n          <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n            Handpicked premium properties with verified documentation and clear titles\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"featured-properties-grid\">\n          {properties.map((property) => (\n            <PropertyCard\n              key={property.id}\n              property={property}\n              onViewDetails={handleViewDetails}\n              onInquire={handleInquire}\n            />\n          ))}\n        </div>\n\n        <div className=\"text-center mt-12\">\n          <Link href=\"/properties\">\n            <Button \n              className=\"bg-ebutine-blue hover:bg-gray-600 text-white font-semibold py-4 px-8 text-lg\"\n              data-testid=\"view-all-properties-button\"\n            >\n              View All Properties\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2996},"client/src/components/FloatingWhatsApp.tsx":{"content":"import { useState } from \"react\";\nimport { X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function FloatingWhatsApp() {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50 flex flex-col items-end space-y-3\">\n      {/* Expanded Chat Options */}\n      {isExpanded && (\n        <div className=\"glass rounded-2xl p-4 shadow-ebutine max-w-sm transform animate-fade-in-up\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-semibold text-ebutine-dark\">Chat with us!</h4>\n            <button \n              onClick={() => setIsExpanded(false)}\n              className=\"text-ebutine-blue hover:text-ebutine-orange transition-colors\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          </div>\n          <p className=\"text-sm text-ebutine-blue mb-4\">\n            Get instant responses to your property inquiries. We're available 24/7!\n          </p>\n          <div className=\"space-y-2\">\n            <a \n              href=\"https://wa.me/2349061461411?text=Hi! I'm interested in your properties\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"block w-full\"\n            >\n              <Button className=\"w-full bg-green-500 hover:bg-green-600 text-white text-sm\">\n                <i className=\"fab fa-whatsapp mr-2\"></i>General Inquiry\n              </Button>\n            </a>\n            <a \n              href=\"https://wa.me/2349061461411?text=Hi! I need urgent assistance with my property matter\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"block w-full\"\n            >\n              <Button className=\"w-full bg-red-500 hover:bg-red-600 text-white text-sm\">\n                <i className=\"fab fa-whatsapp mr-2\"></i>Urgent Support\n              </Button>\n            </a>\n            <a \n              href=\"https://wa.me/2349061461411?text=Hi! I'd like to schedule a consultation\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"block w-full\"\n            >\n              <Button className=\"w-full bg-ebutine-blue hover:bg-ebutine-blue-dark text-white text-sm\">\n                <i className=\"fab fa-whatsapp mr-2\"></i>Book Consultation\n              </Button>\n            </a>\n          </div>\n        </div>\n      )}\n\n      {/* Main WhatsApp Button */}\n      <div className=\"relative group\">\n        {/* Pulse Animation Ring */}\n        <div className=\"absolute inset-0 bg-green-500 rounded-full animate-ping opacity-75 group-hover:opacity-0 transition-opacity\"></div>\n        \n        {/* Main Button */}\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"relative bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white w-16 h-16 rounded-full shadow-lg hover:shadow-xl transition-all-smooth transform hover:scale-110 flex items-center justify-center group\"\n          data-testid=\"floating-whatsapp-button\"\n        >\n          <i className=\"fab fa-whatsapp text-2xl\"></i>\n          \n          {/* Notification Badge */}\n          <div className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-bold animate-bounce\">\n            !\n          </div>\n        </button>\n\n        {/* Tooltip */}\n        {!isExpanded && (\n          <div className=\"absolute right-full mr-4 top-1/2 -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none\">\n            <div className=\"bg-ebutine-dark text-white px-3 py-2 rounded-lg text-sm whitespace-nowrap shadow-lg\">\n              Chat with us on WhatsApp\n              <div className=\"absolute left-full top-1/2 -translate-y-1/2 border-4 border-transparent border-l-ebutine-dark\"></div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Quick Chat Messages */}\n      <div className=\"absolute right-20 bottom-0 space-y-2 pointer-events-none\">\n        <div className=\"bg-white rounded-lg px-3 py-2 shadow-lg animate-bounce opacity-80 text-sm\" style={{animationDelay: '2s', animationDuration: '2s'}}>\n          💬 Need help? Chat with us!\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4445},"client/src/components/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { MapPin, Phone, Mail } from \"lucide-react\";\nimport Logo from \"./Logo\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gradient-to-br from-ebutine-dark via-gray-900 to-ebutine-dark text-white py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div>\n            <Logo textColor=\"text-white\" />\n            <p className=\"text-gray-300 mb-4 mt-4\">\n              Nigeria's trusted real estate partner for diaspora and local investors.\n              Verified properties, transparent dealings, exceptional service.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a\n                href=\"https://www.facebook.com/ebutineproperties\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-300 hover:text-blue-500 transition-all duration-300 transform hover:scale-110\"\n                data-testid=\"facebook-link\"\n              >\n                <i className=\"fab fa-facebook text-2xl\"></i>\n              </a>\n              <a\n                href=\"https://www.instagram.com/ebutineproperties\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-300 hover:text-pink-500 transition-all duration-300 transform hover:scale-110\"\n                data-testid=\"instagram-link\"\n              >\n                <i className=\"fab fa-instagram text-2xl\"></i>\n              </a>\n              <a\n                href=\"https://youtube.com/@ebutineproperties?si=w9B18Aee9vo8snFD\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-gray-300 hover:text-red-500 transition-all duration-300 transform hover:scale-110\"\n                data-testid=\"youtube-link\"\n              >\n                <i className=\"fab fa-youtube text-2xl\"></i>\n              </a>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"text-xl font-semibold mb-6\">Quick Links</h3>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Home</Link></li>\n              <li><Link href=\"/about\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">About Us</Link></li>\n              <li><Link href=\"/properties\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Properties</Link></li>\n              <li><Link href=\"/gallery\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Gallery</Link></li>\n              <li><Link href=\"/contact\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Contact</Link></li>\n            </ul>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h3 className=\"text-xl font-semibold mb-6\">Our Services</h3>\n            <ul className=\"space-y-3\">\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Residential Land</a></li>\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Commercial Land</a></li>\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Luxury Homes</a></li>\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Property Management</a></li>\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Property Development</a></li>\n              <li><a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors\">Investment Advisory</a></li>\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h3 className=\"text-xl font-semibold mb-6\">Contact Info</h3>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start\">\n                <MapPin className=\"h-5 w-5 text-ebutine-orange mt-1 mr-3\" />\n                <div className=\"text-gray-300\">\n                  <p>Lagos, Nigeria</p>\n                </div>\n              </div>\n              <div className=\"flex items-center\">\n                <Phone className=\"h-5 w-5 text-ebutine-orange mr-3\" />\n                <a\n                  href=\"tel:+2349061461411\"\n                  className=\"text-gray-300 hover:text-ebutine-orange transition-colors\"\n                  data-testid=\"footer-phone-link\"\n                >\n                  +234 906 146 1411\n                </a>\n              </div>\n              <div className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-ebutine-orange mr-3\" />\n                <a\n                  href=\"mailto:ebutinepropertieslimited@gmail.com\"\n                  className=\"text-gray-300 hover:text-ebutine-orange transition-colors\"\n                  data-testid=\"footer-email-link\"\n                >\n                  ebutinepropertieslimited@gmail.com\n                </a>\n              </div>\n              <div className=\"flex items-center\">\n                <i className=\"fab fa-whatsapp text-green-500 mr-3 text-lg animate-pulse\"></i>\n                <a\n                  href=\"https://wa.me/2349061461411\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-green-400 hover:text-green-300 transition-colors font-semibold\"\n                  data-testid=\"footer-whatsapp-link\"\n                >\n                  WhatsApp Chat\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Footer */}\n        <div className=\"border-t border-gray-600 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-300 mb-4 md:mb-0\">\n              © 2025 Ebutine Properties. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6\">\n              <a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors text-sm\">Privacy Policy</a>\n              <a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors text-sm\">Terms of Service</a>\n              <a href=\"#\" className=\"text-gray-300 hover:text-ebutine-orange transition-colors text-sm\">Cookie Policy</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":6548},"client/src/components/HeroSection.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { Search, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nexport default function HeroSection() {\n  const [searchFilters, setSearchFilters] = useState({\n    propertyType: \"\",\n    location: \"\",\n    budget: \"\",\n  });\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  const slides = [\n    {\n      image:\n        \"https://images.unsplash.com/photo-1564013799919-ab600027ffc6?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080\",\n      title: \"Luxury Living Redefined\",\n      subtitle:\n        \"Discover premium residential properties in Lagos's most prestigious neighborhoods\",\n      highlight: \"Luxury Homes\",\n    },\n    {\n      image:\n        \"https://images.unsplash.com/photo-1580587771525-78b9dba3b914?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080\",\n      title: \"Your Dream Home Awaits\",\n      subtitle:\n        \"Beautiful residential lands with verified documentation and clear titles\",\n      highlight: \"Residential Land\",\n    },\n    {\n      image:\n        \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080\",\n      title: \"Investment Opportunities\",\n      subtitle:\n        \"Strategic commercial properties in high-growth areas across Lagos\",\n      highlight: \"Commercial Land\",\n    },\n    {\n      image:\n        \"https://images.unsplash.com/photo-1582407947304-fd86f028f716?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080\",\n      title: \"Verified Properties Only\",\n      subtitle:\n        \"Every property undergoes rigorous verification for your peace of mind\",\n      highlight: \"100% Verified\",\n    },\n  ];\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % slides.length);\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  const handleSearch = () => {\n    const params = new URLSearchParams();\n    if (searchFilters.propertyType)\n      params.set(\"type\", searchFilters.propertyType);\n    if (searchFilters.location) params.set(\"location\", searchFilters.location);\n    if (searchFilters.budget) params.set(\"budget\", searchFilters.budget);\n\n    window.location.href = `/properties?${params.toString()}`;\n  };\n\n  return (\n    <section className=\"relative h-screen overflow-hidden\">\n      {/* Carousel Background */}\n      <div className=\"absolute inset-0\">\n        {slides.map((slide, index) => (\n          <div\n            key={index}\n            className={`absolute inset-0 transition-all duration-1000 ease-in-out transform ${\n              index === currentSlide\n                ? \"opacity-100 scale-100\"\n                : \"opacity-0 scale-110\"\n            }`}\n          >\n            <div\n              style={{\n                backgroundImage: `url('${slide.image}')`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                backgroundAttachment: \"fixed\",\n              }}\n              className=\"absolute inset-0\"\n            ></div>\n            <div className=\"absolute inset-0 bg-black/60\"></div>\n            <div className=\"absolute inset-0 bg-gradient-to-br from-ebutine-dark/80 via-ebutine-blue/70 to-ebutine-dark/90\"></div>\n          </div>\n        ))}\n      </div>\n\n      {/* Floating Animation Elements */}\n      <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\n        <div className=\"absolute top-20 left-10 opacity-20 animate-float-slow\">\n          <div className=\"bg-white/20 rounded-2xl p-6 backdrop-blur-sm transform rotate-12\">\n            <div className=\"w-16 h-16 bg-ebutine-orange rounded-2xl flex items-center justify-center shadow-xl\">\n              <i className=\"fas fa-home text-white text-2xl\"></i>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"absolute top-1/3 right-16 opacity-20 animate-float\"\n          style={{ animationDelay: \"2s\" }}\n        >\n          <div className=\"bg-white/20 rounded-2xl p-6 backdrop-blur-sm transform -rotate-12\">\n            <div className=\"w-16 h-16 bg-ebutine-blue rounded-2xl flex items-center justify-center shadow-xl\">\n              <i className=\"fas fa-building text-white text-2xl\"></i>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"absolute bottom-32 left-1/4 opacity-15 animate-float-delayed\">\n          <div className=\"bg-gradient-to-br from-ebutine-orange/30 to-ebutine-blue/30 w-32 h-32 rounded-full backdrop-blur-sm\"></div>\n        </div>\n\n        <div\n          className=\"absolute top-1/2 left-10 opacity-10 animate-float-slow\"\n          style={{ animationDelay: \"3s\" }}\n        >\n          <div className=\"bg-gradient-to-br from-white/20 to-ebutine-orange/20 w-24 h-24 rounded-full backdrop-blur-sm\"></div>\n        </div>\n      </div>\n\n      {/* Navigation Arrows */}\n      <button\n        onClick={prevSlide}\n        className=\"absolute left-2 md:left-6 top-1/2 transform -translate-y-1/2 z-20 bg-white/20 hover:bg-white/30 backdrop-blur-sm rounded-full p-2 md:p-3 transition-all duration-300 hover:scale-110\"\n      >\n        <ChevronLeft className=\"h-4 w-4 md:h-6 md:w-6 text-white\" />\n      </button>\n\n      <button\n        onClick={nextSlide}\n        className=\"absolute right-2 md:right-6 top-1/2 transform -translate-y-1/2 z-20 bg-white/20 hover:bg-white/30 backdrop-blur-sm rounded-full p-2 md:p-3 transition-all duration-300 hover:scale-110\"\n      >\n        <ChevronRight className=\"h-4 w-4 md:h-6 md:w-6 text-white\" />\n      </button>\n\n      {/* Slide Indicators */}\n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 z-20 flex space-x-3\">\n        {slides.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setCurrentSlide(index)}\n            className={`w-3 h-3 rounded-full transition-all duration-300 ${\n              index === currentSlide\n                ? \"bg-ebutine-orange scale-125 shadow-lg\"\n                : \"bg-white/50 hover:bg-white/70\"\n            }`}\n          />\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"relative z-10 flex items-center justify-center min-h-screen\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          {/* Dynamic Content */}\n          <div className=\"mb-16\">\n            <div className=\"inline-block bg-ebutine-orange/80 backdrop-blur-sm px-8 py-3 rounded-full border border-ebutine-orange mb-8 shadow-lg\">\n              <span className=\"text-white font-bold text-xl drop-shadow-lg\">\n                {slides[currentSlide].highlight}\n              </span>\n            </div>\n\n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-7xl font-bold text-white mb-6 md:mb-8 leading-tight drop-shadow-2xl text-shadow-strong px-2\">\n              {slides[currentSlide].title}\n            </h1>\n\n            <p className=\"text-lg sm:text-xl md:text-2xl text-white mb-8 md:mb-12 max-w-4xl mx-auto leading-relaxed drop-shadow-lg font-medium px-4\">\n              {slides[currentSlide].subtitle}\n            </p>\n\n            {/* CTA Buttons - Moved here */}\n            <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-6 px-4 mb-12 md:mb-16\">\n              <Link href=\"/contact\">\n                <Button className=\"w-full sm:w-auto bg-ebutine-orange hover:bg-orange-600 text-white font-bold py-3 md:py-4 px-6 md:px-10 text-base md:text-lg rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 border-2 border-ebutine-orange min-w-[200px]\">\n                  Book Free Consultation\n                </Button>\n              </Link>\n\n              <a\n                href=\"https://wa.me/2349061461411\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"w-full sm:w-auto\"\n              >\n                <Button className=\"w-full sm:w-auto bg-white/20 border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-bold py-3 md:py-4 px-6 md:px-10 text-base md:text-lg rounded-xl transition-all duration-300 transform hover:scale-105 backdrop-blur-sm min-w-[200px]\">\n                  <i className=\"fab fa-whatsapp mr-2 md:mr-3 text-lg md:text-xl\"></i>\n                  WhatsApp Us\n                </Button>\n              </a>\n            </div>\n          </div>\n\n          {/* Enhanced Search Bar */}\n          <div className=\"max-w-6xl mx-auto mb-12 md:mb-16 px-4\">\n            <div className=\"bg-white/95 backdrop-blur-lg rounded-2xl md:rounded-3xl p-4 md:p-8 shadow-2xl border border-white/50\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6\">\n                <div>\n                  <label className=\"block text-sm font-bold text-ebutine-dark mb-3\">\n                    Property Type\n                  </label>\n                  <Select\n                    value={searchFilters.propertyType}\n                    onValueChange={(value) =>\n                      setSearchFilters((prev) => ({\n                        ...prev,\n                        propertyType: value,\n                      }))\n                    }\n                  >\n                    <SelectTrigger className=\"bg-gray-50 border-gray-200 text-ebutine-dark font-medium\">\n                      <SelectValue placeholder=\"All Types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"residential_land\">\n                        Residential Land\n                      </SelectItem>\n                      <SelectItem value=\"commercial_land\">\n                        Commercial Land\n                      </SelectItem>\n                      <SelectItem value=\"luxury_home\">Luxury Homes</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-bold text-ebutine-dark mb-3\">\n                    Location\n                  </label>\n                  <Select\n                    value={searchFilters.location}\n                    onValueChange={(value) =>\n                      setSearchFilters((prev) => ({ ...prev, location: value }))\n                    }\n                  >\n                    <SelectTrigger className=\"bg-gray-50 border-gray-200 text-ebutine-dark font-medium\">\n                      <SelectValue placeholder=\"Lagos\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"Ajah\">Ajah</SelectItem>\n                      <SelectItem value=\"Sangotedo\">Sangotedo</SelectItem>\n                      <SelectItem value=\"Ibeju-Lekki\">Ibeju-Lekki</SelectItem>\n                      <SelectItem value=\"Victoria Island\">\n                        Victoria Island\n                      </SelectItem>\n                      <SelectItem value=\"Lekki\">Lekki</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-bold text-ebutine-dark mb-3\">\n                    Budget Range\n                  </label>\n                  <Select\n                    value={searchFilters.budget}\n                    onValueChange={(value) =>\n                      setSearchFilters((prev) => ({ ...prev, budget: value }))\n                    }\n                  >\n                    <SelectTrigger className=\"bg-gray-50 border-gray-200 text-ebutine-dark font-medium\">\n                      <SelectValue placeholder=\"Any Budget\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"5-10\">₦5M - ₦10M</SelectItem>\n                      <SelectItem value=\"10-25\">₦10M - ₦25M</SelectItem>\n                      <SelectItem value=\"25-50\">₦25M - ₦50M</SelectItem>\n                      <SelectItem value=\"50+\">₦50M+</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"flex items-end\">\n                  <Button\n                    onClick={handleSearch}\n                    className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white font-bold py-4 px-6 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105\"\n                  >\n                    <Search className=\"mr-2 h-5 w-5\" />\n                    Search Properties\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":12966},"client/src/components/Logo.tsx":{"content":"import logoImage from \"@assets/EBUTINE  LOGO FULL COLOUR_1755343969724.png\";\n\ninterface LogoProps {\n  className?: string;\n  textColor?: string;\n}\n\nexport default function Logo({ className = \"h-10 md:h-12 w-auto\", textColor = \"text-ebutine-blue\" }: LogoProps) {\n  return (\n    <div className=\"flex items-center\">\n      <img \n        src={logoImage} \n        alt=\"Ebutine Properties Logo\" \n        className={className}\n      />\n    </div>\n  );\n}\n","size_bytes":445},"client/src/components/Navigation.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, Phone } from \"lucide-react\";\nimport Logo from \"./Logo\";\n\nconst scrollToTop = () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n};\n\nexport default function Navigation() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navLinks = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/about\", label: \"About\" },\n    { href: \"/properties\", label: \"Properties\" },\n    { href: \"/gallery\", label: \"Gallery\" },\n    { href: \"/contact\", label: \"Contact\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\" && location === \"/\") return true;\n    if (href !== \"/\" && location.startsWith(href)) return true;\n    return false;\n  };\n\n  return (\n    <nav className=\"bg-white/95 backdrop-blur-md shadow-ebutine sticky top-0 z-50 border-b border-ebutine-light-dark\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16 md:h-20\">\n          <Link href=\"/\" onClick={scrollToTop} className=\"flex items-center\">\n            <Logo />\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              {navLinks.map((link) => (\n                <Link\n                  key={link.href}\n                  href={link.href}\n                  onClick={scrollToTop}\n                  className={`px-4 py-2 text-sm font-semibold rounded-lg transition-all-smooth ${\n                    isActive(link.href)\n                      ? \"text-white bg-gradient-ebutine-orange shadow-lg\"\n                      : \"text-ebutine-blue hover:text-ebutine-orange hover:bg-ebutine-light/50\"\n                  }`}\n                  data-testid={`nav-link-${link.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  {link.label}\n                </Link>\n              ))}\n            </div>\n          </div>\n\n          {/* Contact Actions */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            <a\n              href=\"tel:+2349061461411\"\n              className=\"text-ebutine-blue hover:text-ebutine-orange transition-colors\"\n              data-testid=\"phone-link\"\n            >\n              <Phone className=\"h-5 w-5\" />\n            </a>\n            <a\n              href=\"https://wa.me/2349061461411\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-xl text-sm font-bold transition-all-smooth transform hover:scale-105 shadow-lg hover:shadow-xl\"\n              data-testid=\"whatsapp-link\"\n            >\n              <i className=\"fab fa-whatsapp mr-2\"></i>WhatsApp\n            </a>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <button\n              className=\"text-ebutine-blue hover:text-ebutine-orange\"\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              data-testid=\"mobile-menu-button\"\n            >\n              {mobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation Menu */}\n      {mobileMenuOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 bg-white border-t\">\n            {navLinks.map((link) => (\n              <Link\n                key={link.href}\n                href={link.href}\n                onClick={() => {\n                  setMobileMenuOpen(false);\n                  scrollToTop();\n                }}\n                className={`block px-3 py-2 text-base font-medium ${\n                  isActive(link.href)\n                    ? \"text-ebutine-dark\"\n                    : \"text-ebutine-blue hover:text-ebutine-orange\"\n                }`}\n                data-testid={`mobile-nav-link-${link.label.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                {link.label}\n              </Link>\n            ))}\n            <div className=\"flex space-x-4 px-3 py-2\">\n              <a\n                href=\"tel:+2349061461411\"\n                className=\"text-ebutine-blue hover:text-ebutine-orange\"\n                data-testid=\"mobile-phone-link\"\n              >\n                <Phone className=\"h-5 w-5\" />\n              </a>\n              <a\n                href=\"https://wa.me/2349061461411\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-bold\"\n                data-testid=\"mobile-whatsapp-link\"\n              >\n                <i className=\"fab fa-whatsapp mr-2\"></i>WhatsApp\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}","size_bytes":4959},"client/src/components/PropertyCard.tsx":{"content":"import { Heart, Bed, Bath, Car, MapPin, Phone, Play } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useState, useEffect, useRef } from \"react\";\nimport PropertyVideoModal from \"./PropertyVideoModal\";\nimport type { Property } from \"@shared/schema\";\n\nfunction PropertyThumbnail({ property }: { property: Property }) {\n  const [thumbnailSrc, setThumbnailSrc] = useState<string>(\"\");\n  const [videoLoaded, setVideoLoaded] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const getYouTubeThumbnail = (url: string) => {\n    const videoId = url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/)?.[1];\n    return videoId ? `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg` : null;\n  };\n\n  const getInstagramThumbnail = (url: string) => {\n    // Instagram doesn't provide direct thumbnail access, but we can try the embed endpoint\n    return url.includes('instagram.com') ? `${url}media/?size=l` : null;\n  };\n\n  useEffect(() => {\n    const generateThumbnail = async () => {\n      // Priority 1: Check for embed codes (YouTube videos)\n      if (property.embedCodes && property.embedCodes.length > 0) {\n        const firstEmbed = property.embedCodes[0];\n        // Extract YouTube video ID from embed code\n        const youtubeMatch = firstEmbed.embedCode.match(/(?:youtube\\.com\\/embed\\/)([^\"?]+)/);\n        if (youtubeMatch) {\n          const videoId = youtubeMatch[1];\n          const thumbnail = `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`;\n          setThumbnailSrc(thumbnail);\n          return;\n        }\n      }\n\n      // Priority 2: Check for external videos with thumbnails\n      if (property.externalVideos && property.externalVideos.length > 0) {\n        const firstVideo = property.externalVideos[0];\n\n        if (firstVideo.thumbnail) {\n          setThumbnailSrc(firstVideo.thumbnail);\n          return;\n        }\n\n        // Generate thumbnail based on platform\n        if (firstVideo.platform === 'youtube') {\n          const ytThumbnail = getYouTubeThumbnail(firstVideo.url);\n          if (ytThumbnail) {\n            setThumbnailSrc(ytThumbnail);\n            return;\n          }\n        }\n\n        if (firstVideo.platform === 'instagram') {\n          const igThumbnail = getInstagramThumbnail(firstVideo.url);\n          if (igThumbnail) {\n            setThumbnailSrc(igThumbnail);\n            return;\n          }\n        }\n      }\n\n      // Priority 3: External images\n      if (property.externalImages && property.externalImages.length > 0) {\n        setThumbnailSrc(property.externalImages[0]);\n        return;\n      }\n\n      // Priority 4: Local videos - extract thumbnail from first video\n      if (property.videos && property.videos.length > 0) {\n        try {\n          const video = document.createElement('video');\n          video.muted = true;\n          video.preload = 'metadata';\n          video.playsInline = true;\n\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          let thumbnailGenerated = false;\n          let timeoutId: NodeJS.Timeout;\n\n          const generateFromFrame = () => {\n            if (thumbnailGenerated || !ctx || !video.videoWidth || !video.videoHeight) return;\n\n            try {\n              canvas.width = video.videoWidth;\n              canvas.height = video.videoHeight;\n              ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n              const thumbnail = canvas.toDataURL('image/jpeg', 0.7);\n              setThumbnailSrc(thumbnail);\n              thumbnailGenerated = true;\n              console.log('Video thumbnail generated successfully');\n              if (timeoutId) clearTimeout(timeoutId);\n            } catch (err) {\n              console.warn('Error generating thumbnail from video frame:', err);\n              useFallback();\n            }\n          };\n\n          const useFallback = () => {\n            if (!thumbnailGenerated) {\n              const fallback = property.images?.[0] || \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3\";\n              setThumbnailSrc(fallback);\n              thumbnailGenerated = true;\n            }\n          };\n\n          video.onloadedmetadata = () => {\n            if (video.duration > 0) {\n              video.currentTime = 0.1; // Small offset to ensure frame is available\n            } else {\n              useFallback();\n            }\n          };\n\n          video.onseeked = () => {\n            generateFromFrame();\n          };\n\n          video.oncanplay = () => {\n            // Additional attempt if onseeked doesn't fire\n            setTimeout(() => {\n              if (!thumbnailGenerated && video.videoWidth > 0) {\n                generateFromFrame();\n              }\n            }, 200);\n          };\n\n          video.onerror = (e) => {\n            console.warn('Video loading failed for thumbnail generation:', e);\n            useFallback();\n          };\n\n          // Set video source with proper URL formatting\n          const videoUrl = property.videos[0];\n          const fullVideoUrl = videoUrl.startsWith('http') ? videoUrl : `${window.location.origin}${videoUrl}`;\n\n          video.src = fullVideoUrl;\n          console.log('Loading video for thumbnail:', fullVideoUrl);\n\n          // Reduced timeout for faster fallback\n          timeoutId = setTimeout(() => {\n            if (!thumbnailGenerated) {\n              console.warn('Video thumbnail generation timeout, using fallback');\n              useFallback();\n            }\n          }, 3000);\n\n          // Start loading\n          video.load();\n\n        } catch (error) {\n          console.warn('Video thumbnail generation setup error:', error);\n          // Fallback to first image or default\n          const fallback = property.images?.[0] || \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3\";\n          setThumbnailSrc(fallback);\n        }\n      } else {\n        // Use first image or default\n        const fallback = property.images?.[0] || \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3\";\n        setThumbnailSrc(fallback);\n      }\n    };\n\n    generateThumbnail();\n  }, [property.id]); // Only depend on property.id to avoid infinite re-renders\n\n  return (\n    <img \n      src={thumbnailSrc || \"https://images.unsplash.com/photo-1560518883-ce09059eeffa?ixlib=rb-4.0.3\"} \n      alt={property.title}\n      className=\"w-full h-64 object-cover group-hover:scale-110 transition-transform duration-500\"\n      loading=\"lazy\"\n    />\n  );\n}\n\ninterface PropertyCardProps {\n  property: Property;\n  onViewDetails?: (id: string) => void;\n  onInquire?: (id: string) => void;\n}\n\nexport default function PropertyCard({ property, onViewDetails, onInquire }: PropertyCardProps) {\n  const [showVideoModal, setShowVideoModal] = useState(false);\n\n  const formatPrice = (price: string) => {\n    const num = parseFloat(price);\n    if (num >= 1000000) {\n      return `₦${(num / 1000000).toFixed(1)}M`;\n    }\n    return `₦${num.toLocaleString()}`;\n  };\n\n  const getStatusBadge = (status: string, featured: boolean) => {\n    if (featured) return <Badge className=\"bg-ebutine-orange text-white\">Featured</Badge>;\n    if (status === \"available\") return <Badge className=\"bg-green-500 text-white\">Available</Badge>;\n    if (status === \"sold\") return <Badge className=\"bg-red-500 text-white\">Sold</Badge>;\n    return <Badge className=\"bg-blue-500 text-white\">New</Badge>;\n  };\n\n  const handleInquire = () => {\n    const message = `Hi, I'm interested in \"${property.title}\" located in ${property.location}, priced at ${formatPrice(property.price)}. Can you provide more details?`;\n    window.open(`https://wa.me/2349061461411?text=${encodeURIComponent(message)}`, '_blank');\n  };\n\n  return (\n    <Card className=\"card-enhanced overflow-hidden group\" data-testid={`property-card-${property.id}`}>\n      <div className=\"relative overflow-hidden\">\n        <PropertyThumbnail property={property} />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n        <div className=\"absolute top-4 left-4\">\n          {getStatusBadge(property.status, property.featured || false)}\n        </div>\n        <div className=\"absolute top-4 right-4 flex space-x-2\">\n          {((property.videos && property.videos.length > 0) || \n            (property.externalVideos && property.externalVideos.length > 0) ||\n            (property.embedCodes && property.embedCodes.length > 0)) && (\n            <button \n              onClick={() => setShowVideoModal(true)}\n              className=\"glass p-2 rounded-full bg-black/40 hover:bg-black/60 transition-colors\"\n              title=\"View property videos\"\n            >\n              <Play className=\"h-4 w-4 text-white\" />\n            </button>\n          )}\n          <button \n            className=\"glass p-3 rounded-full hover:bg-white/40 transition-all-smooth transform hover:scale-110\"\n            data-testid={`favorite-button-${property.id}`}\n          >\n            <Heart className=\"h-4 w-4 text-ebutine-orange\" />\n          </button>\n        </div>\n        <div className=\"absolute bottom-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n          <div className=\"glass px-3 py-1 rounded-full\">\n            <span className=\"text-white text-sm font-medium\">View Details</span>\n          </div>\n        </div>\n      </div>\n\n      <CardContent className=\"p-6\">\n        <h3 className=\"text-xl font-bold text-ebutine-dark mb-3 group-hover:text-ebutine-orange transition-colors duration-300\" data-testid={`property-title-${property.id}`}>\n          {property.title}\n        </h3>\n        <p className=\"text-ebutine-blue-light mb-4 flex items-center\">\n          <MapPin className=\"h-4 w-4 mr-2 text-ebutine-orange\" />\n          {property.location}\n        </p>\n        <div className=\"mb-4\">\n          <p className=\"text-3xl font-bold text-gradient mb-1\" data-testid={`property-price-${property.id}`}>\n            {formatPrice(property.price)}\n          </p>\n          <p className=\"text-sm text-ebutine-blue-light\">Starting price</p>\n        </div>\n\n        {/* Property Details */}\n        <div className=\"grid grid-cols-3 gap-4 text-sm text-ebutine-blue mb-6\">\n          {property.bedrooms && (\n            <div className=\"flex items-center p-2 bg-ebutine-light rounded-lg\">\n              <Bed className=\"h-4 w-4 mr-2 text-ebutine-orange\" />\n              <span className=\"font-medium\">{property.bedrooms} Beds</span>\n            </div>\n          )}\n          {property.bathrooms && (\n            <div className=\"flex items-center p-2 bg-ebutine-light rounded-lg\">\n              <Bath className=\"h-4 w-4 mr-2 text-ebutine-orange\" />\n              <span className=\"font-medium\">{property.bathrooms} Baths</span>\n            </div>\n          )}\n          {property.parking && (\n            <div className=\"flex items-center p-2 bg-ebutine-light rounded-lg\">\n              <Car className=\"h-4 w-4 mr-2 text-ebutine-orange\" />\n              <span className=\"font-medium\">{property.parking} Parking</span>\n            </div>\n          )}\n          {property.size && !property.bedrooms && (\n            <div className=\"flex items-center p-2 bg-ebutine-light rounded-lg col-span-2\">\n              <i className=\"fas fa-ruler-combined mr-2 text-ebutine-orange\"></i>\n              <span className=\"font-medium\">{property.size}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex space-x-3\">\n          <Button \n            className=\"btn-primary flex-1\"\n            onClick={() => onViewDetails?.(property.id)}\n            data-testid={`view-details-button-${property.id}`}\n          >\n            View Details\n          </Button>\n          <Button \n            className=\"btn-secondary px-4\"\n            onClick={handleInquire}\n            data-testid={`inquire-button-${property.id}`}\n          >\n            <Phone className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </CardContent>\n\n      <PropertyVideoModal\n        isOpen={showVideoModal}\n        onClose={() => setShowVideoModal(false)}\n        videos={property.videos || []}\n        externalVideos={property.externalVideos || []}\n        embedCodes={property.embedCodes || []}\n        propertyTitle={property.title}\n      />\n    </Card>\n  );\n}","size_bytes":12523},"client/src/components/PropertyVideoModal.tsx":{"content":"import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { X, ExternalLink } from \"lucide-react\";\n\ninterface ExternalVideo {\n  url: string;\n  platform: 'youtube' | 'instagram' | 'vimeo' | 'facebook' | 'tiktok' | 'other';\n  title?: string;\n  thumbnail?: string;\n}\n\ninterface EmbedCode {\n  embedCode: string;\n  title?: string;\n  platform?: string;\n}\n\ninterface PropertyVideoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  videos: string[];\n  externalVideos?: ExternalVideo[];\n  embedCodes?: EmbedCode[];\n  propertyTitle: string;\n}\n\nexport default function PropertyVideoModal({ \n  isOpen, \n  onClose, \n  videos, \n  externalVideos = [],\n  embedCodes = [],\n  propertyTitle \n}: PropertyVideoModalProps) {\n  if (!videos?.length && !externalVideos?.length && !embedCodes?.length) return null;\n\n  const getYouTubeEmbedUrl = (url: string) => {\n    const videoId = url.match(/(?:youtube\\.com\\/watch\\?v=|youtu\\.be\\/)([^&\\n?#]+)/)?.[1];\n    return videoId ? `https://www.youtube.com/embed/${videoId}?autoplay=1&mute=1&loop=1&playlist=${videoId}` : null;\n  };\n\n  const getVimeoEmbedUrl = (url: string) => {\n    const videoId = url.match(/vimeo\\.com\\/(\\d+)/)?.[1];\n    return videoId ? `https://player.vimeo.com/video/${videoId}?autoplay=1&muted=1&loop=1` : null;\n  };\n\n  const renderEmbedCode = (embed: EmbedCode, index: number) => {\n    return (\n      <div key={`embed-${index}`} className=\"w-full\">\n        <h4 className=\"font-medium mb-2\">\n          {embed.title || `${embed.platform || 'Video'} ${index + 1}`}\n        </h4>\n        <div \n          className=\"w-full rounded-lg overflow-hidden\"\n          dangerouslySetInnerHTML={{ __html: embed.embedCode }}\n        />\n      </div>\n    );\n  };\n\n  const renderExternalVideo = (video: ExternalVideo, index: number) => {\n    switch (video.platform) {\n      case 'youtube':\n        const youtubeEmbedUrl = getYouTubeEmbedUrl(video.url);\n        if (youtubeEmbedUrl) {\n          return (\n            <div className=\"w-full max-w-3xl\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h4 className=\"font-medium\">{video.title || 'YouTube Video'}</h4>\n                <a \n                  href={video.url} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-blue-500 hover:text-blue-700\"\n                >\n                  <ExternalLink className=\"h-4 w-4\" />\n                </a>\n              </div>\n              <iframe\n                src={youtubeEmbedUrl}\n                className=\"w-full h-64 md:h-80 rounded-lg mx-auto\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                allowFullScreen\n              />\n            </div>\n          );\n        }\n        break;\n\n      case 'vimeo':\n        const vimeoEmbedUrl = getVimeoEmbedUrl(video.url);\n        if (vimeoEmbedUrl) {\n          return (\n            <div className=\"w-full max-w-3xl\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h4 className=\"font-medium\">{video.title || 'Vimeo Video'}</h4>\n                <a \n                  href={video.url} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-blue-500 hover:text-blue-700\"\n                >\n                  <ExternalLink className=\"h-4 w-4\" />\n                </a>\n              </div>\n              <iframe\n                src={vimeoEmbedUrl}\n                className=\"w-full h-64 md:h-80 rounded-lg mx-auto\"\n                frameBorder=\"0\"\n                allow=\"autoplay; fullscreen; picture-in-picture\"\n                allowFullScreen\n              />\n            </div>\n          );\n        }\n        break;\n\n      case 'instagram':\n        return (\n          <div className=\"w-full max-w-3xl\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h4 className=\"font-medium\">{video.title || 'Instagram Video'}</h4>\n              <a \n                href={video.url} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"text-blue-500 hover:text-blue-700\"\n              >\n                <ExternalLink className=\"h-4 w-4\" />\n              </a>\n            </div>\n            {/* Check if we have embed code in the URL field or render the embed */}\n            {video.url.includes('blockquote') ? (\n              <div \n                className=\"instagram-embed-container mx-auto\"\n                dangerouslySetInnerHTML={{ __html: video.url }}\n              />\n            ) : (\n              <>\n                <div className=\"bg-gray-100 p-4 rounded-lg text-center\">\n                  <p className=\"text-gray-600 mb-4\">Click to view Instagram content</p>\n                  <Button \n                    onClick={() => window.open(video.url, '_blank')}\n                    className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\"\n                  >\n                    View on Instagram\n                  </Button>\n                </div>\n                {/* Try to render as embedded iframe for regular Instagram URLs */}\n                <div className=\"mt-4\">\n                  <iframe\n                    src={`${video.url}embed/`}\n                    className=\"w-full h-96 rounded-lg border-0 mx-auto\"\n                    frameBorder=\"0\"\n                    scrolling=\"no\"\n                    allowTransparency={true}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"w-full max-w-3xl\">\n            <div className=\"flex justify-between items-center mb-2\">\n              <h4 className=\"font-medium\">{video.title || 'External Video'}</h4>\n              <a \n                href={video.url} \n                target=\"_blank\" \n                rel=\"noopener noreferrer\"\n                className=\"text-blue-500 hover:text-blue-700\"\n              >\n                <ExternalLink className=\"h-4 w-4\" />\n              </a>\n            </div>\n            <div className=\"bg-gray-100 p-4 rounded-lg text-center\">\n              <p className=\"text-gray-600 mb-4\">External video content</p>\n              <Button \n                onClick={() => window.open(video.url, '_blank')}\n                variant=\"outline\"\n              >\n                View External Content\n              </Button>\n            </div>\n          </div>\n        );\n    }\n\n    return null; // Return null if no case matches\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-hidden\">\n        <DialogHeader>\n          <DialogTitle className=\"flex justify-between items-center\">\n            <span>{propertyTitle} - Property Videos</span>\n            <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6 max-h-[70vh] overflow-y-auto\">\n          {/* Embed Codes */}\n          {embedCodes.map((embed, index) => (\n            <div key={`embed-${index}`} className=\"w-full flex flex-col items-center\">\n              <h4 className=\"font-medium mb-2 text-center\">\n                {embed.title || `${embed.platform || 'Video'} ${index + 1}`}\n              </h4>\n              <div \n                className=\"w-full max-w-3xl rounded-lg overflow-hidden mx-auto\"\n                dangerouslySetInnerHTML={{ __html: embed.embedCode }}\n              />\n            </div>\n          ))}\n\n          {/* External Videos */}\n          {externalVideos.map((video, index) => {\n            const content = renderExternalVideo(video, index);\n            return (\n              <div key={`external-wrapper-${index}`} className=\"w-full flex flex-col items-center\">\n                {content}\n              </div>\n            );\n          })}\n\n          {/* Local Videos */}\n          {videos.map((videoUrl, index) => {\n            const fullVideoUrl = videoUrl.startsWith('http') ? videoUrl : `${window.location.origin}${videoUrl}`;\n\n            return (\n              <div key={`local-${index}`} className=\"w-full flex flex-col items-center\">\n                <h4 className=\"font-medium mb-2 text-center\">Local Video {index + 1}</h4>\n                <video \n                  controls \n                  autoPlay\n                  className=\"w-full max-w-3xl h-auto max-h-96 rounded-lg mx-auto\"\n                  preload=\"metadata\"\n                  playsInline\n                  muted\n                  loop\n                  controlsList=\"nodownload\"\n                  style={{ backgroundColor: '#f3f4f6' }}\n                  onError={(e) => {\n                    console.error('Video error:', e);\n                    e.currentTarget.style.display = 'none';\n                  }}\n                >\n                  <source src={fullVideoUrl} />\n                  Your browser does not support the video tag.\n                </video>\n              </div>\n            );\n          })}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":9325},"client/src/components/TestimonialsSection.tsx":{"content":"import { Star } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nconst testimonials = [\n  {\n    id: 1,\n    name: \"Adaora Okafor\",\n    location: \"London, UK\",\n    content:\n      \"Ebutine Properties made buying land in Lagos so easy from London. They provided regular updates, verified documentation, and excellent customer service. I highly recommend them to any diaspora investor.\",\n    avatar: \"\",\n    rating: 5,\n  },\n  {\n    id: 2,\n    name: \"Chinedu Asika\",\n    location: \"Toronto, Canada\",\n    content:\n      \"I purchased a luxury home through Ebutine Properties while living in Canada. The entire process was transparent, and they handled all the paperwork. My property has already appreciated significantly.\",\n    avatar: \"\",\n    rating: 5,\n  },\n  {\n    id: 3,\n    name: \"Funmi Adebayo\",\n    location: \"Lagos, Nigeria\",\n    content:\n      \"As a local investor, I was impressed by Ebutine's professionalism and integrity. They helped me acquire three commercial properties that are now generating excellent rental income. Truly trustworthy!\",\n    avatar: \"\",\n    rating: 5,\n  },\n];\n\nexport default function TestimonialsSection() {\n  return (\n    <section className=\"py-20 bg-gradient-to-br from-ebutine-light to-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">\n            What Our Clients Say\n          </h2>\n          <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n            Real testimonials from satisfied clients across Nigeria and the\n            diaspora\n          </p>\n        </div>\n\n        <div\n          className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          data-testid=\"testimonials-grid\"\n        >\n          {testimonials.map((testimonial) => (\n            <Card\n              key={testimonial.id}\n              className=\"hover:shadow-2xl transition-shadow\"\n              data-testid={`testimonial-${testimonial.id}`}\n            >\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <img\n                    src={testimonial.avatar}\n                    alt={`${testimonial.name} testimonial`}\n                    className=\"w-12 h-12 rounded-full mr-4\"\n                  />\n                  <div>\n                    <h4\n                      className=\"font-semibold text-ebutine-dark\"\n                      data-testid={`testimonial-name-${testimonial.id}`}\n                    >\n                      {testimonial.name}\n                    </h4>\n                    <p\n                      className=\"text-sm text-ebutine-blue\"\n                      data-testid={`testimonial-location-${testimonial.id}`}\n                    >\n                      {testimonial.location}\n                    </p>\n                  </div>\n                </div>\n\n                <div\n                  className=\"flex mb-4\"\n                  data-testid={`testimonial-rating-${testimonial.id}`}\n                >\n                  {Array.from({ length: testimonial.rating }).map((_, i) => (\n                    <Star\n                      key={i}\n                      className=\"h-4 w-4 text-yellow-400 fill-current\"\n                    />\n                  ))}\n                </div>\n\n                <p\n                  className=\"text-ebutine-blue italic\"\n                  data-testid={`testimonial-content-${testimonial.id}`}\n                >\n                  \"{testimonial.content}\"\n                </p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3707},"client/src/components/WhatsAppButton.tsx":{"content":"export default function WhatsAppButton() {\n  return (\n    <div className=\"fixed bottom-6 right-6 z-50\">\n      <a \n        href=\"https://wa.me/2349061461411\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        className=\"bg-green-500 hover:bg-green-600 text-white p-4 rounded-full shadow-2xl hover:shadow-3xl transition-all duration-300 transform hover:scale-110\"\n        data-testid=\"whatsapp-floating-button\"\n      >\n        <i className=\"fab fa-whatsapp text-2xl\"></i>\n      </a>\n    </div>\n  );\n}\n","size_bytes":516},"client/src/hooks/use-analytics.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport { trackPageView } from '../lib/analytics';\n\nexport const useAnalytics = () => {\n  const [location] = useLocation();\n  const prevLocationRef = useRef<string>(location);\n  \n  useEffect(() => {\n    if (location !== prevLocationRef.current) {\n      trackPageView(location);\n      prevLocationRef.current = location;\n    }\n  }, [location]);\n};","size_bytes":426},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/analytics.ts":{"content":"// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Add Google Analytics script to the head\n  const script1 = document.createElement('script');\n  script1.async = true;\n  script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n  document.head.appendChild(script1);\n\n  // Initialize gtag\n  const script2 = document.createElement('script');\n  script2.textContent = `\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', '${measurementId}');\n  `;\n  document.head.appendChild(script2);\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};","size_bytes":1581},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport {\n  Handshake,\n  Shield,\n  DollarSign,\n  Headphones,\n  Users,\n  Award,\n  Globe,\n  Target,\n  TrendingUp,\n} from \"lucide-react\";\n\nexport default function About() {\n  return (\n    <div>\n      <Helmet>\n        <title>\n          About Ebutine Properties - Nigeria's Trusted Real Estate Partner\n        </title>\n        <meta\n          name=\"description\"\n          content=\"Learn about Ebutine Properties, Nigeria's trusted real estate company serving diaspora and local clients. Our story, values, and commitment to verified properties.\"\n        />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            About Ebutine Properties\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Empowering Nigerians worldwide with genuine, verified, and\n            profitable real estate investments\n          </p>\n        </div>\n      </section>\n\n      {/* Our Story */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-ebutine-dark mb-6\">\n                Who We Are\n              </h2>\n              <p className=\"text-lg text-ebutine-blue mb-6\">\n                At Ebutine Properties, we help Nigerians at home and in the\n                Diaspora acquire safe, profitable and verified real estate\n                investments. We specialize in both Residential and Commercial\n                properties across prime locations in Nigeria.\n              </p>\n              <p className=\"text-lg text-ebutine-blue mb-6\">\n                We understand the challenges Nigerians abroad face when\n                investing in back home. The lack of trust, transparency, and the\n                fear of being defrauded of their hard earned money. To solve\n                these problems, Ebutine Properties was incorporated. Our company\n                is built on three core values: Trust, Integrity, and\n                Professionalism. With a dedicated team and verified properties,\n                we ensure that every transaction is transparent, easy, and\n                rewarding.\n              </p>\n              <p className=\"text-lg text-ebutine-blue mb-6\">\n                Whether you're looking to build your dream home, expand your\n                investment portfolio, or secure land for future growth, we're\n                here to guide you all the way through - from selecting the right\n                property to documentations.\n              </p>\n              <p className=\"text-lg text-ebutine-blue mb-8\">\n                With satisfied clients across the United Kingdom, United States,\n                Canada, Australia, China and beyond, we take pride in connecting\n                Nigerians worldwide to safe and profitable real estate\n                investments in Nigeria.\n              </p>\n\n              <Link href=\"/contact\">\n                <Button className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\">\n                  Start Your Journey\n                </Button>\n              </Link>\n            </div>\n\n            <div className=\"relative\">\n              <img\n                src=\"/founder-augustine.jpg\"\n                alt=\"Mr. Augustine Akunechendo - Founder & CEO of Ebutine Properties\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n              />\n              <div className=\"relative pb-20\">\n                <div className=\"mt-6 text-center\">\n                  <h3 className=\"text-2xl font-bold text-ebutine-dark\">\n                    Mr. Augustine E. Akunechendo\n                  </h3>\n                  <p className=\"text-lg text-ebutine-orange font-semibold\">\n                    Founder & CEO\n                  </p>\n                </div>\n                <div className=\"absolute -bottom-6 -right-6 bg-ebutine-orange text-white p-6 rounded-2xl shadow-lg\">\n                  <h3 className=\"text-2xl font-bold\">Global</h3>\n                  <p className=\"text-sm\">Reach & Trust</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Values */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">\n              Our Core Values\n            </h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Our company is built on three core values that guide everything we\n              do\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: Handshake,\n                title: \"Trust\",\n                description:\n                  \"We build lasting relationships with our clients through transparency, honesty, and reliable service delivery at every step of the investment process.\",\n              },\n              {\n                icon: Shield,\n                title: \"Integrity\",\n                description:\n                  \"Every property we offer undergoes rigorous verification. We maintain the highest ethical standards in all our dealings and transactions.\",\n              },\n              {\n                icon: Award,\n                title: \"Professionalism\",\n                description:\n                  \"Our dedicated team provides expert guidance, comprehensive support, and professional service from property selection to documentation completion.\",\n              },\n            ].map((value, index) => (\n              <Card\n                key={index}\n                className=\"hover:shadow-2xl hover:scale-105 transition-all duration-300 text-center group border-2 border-transparent hover:border-ebutine-orange/20\"\n              >\n                <CardContent className=\"p-8\">\n                  <value.icon className=\"h-12 w-12 text-ebutine-orange mb-4 mx-auto group-hover:scale-110 group-hover:text-orange-600 transition-all duration-300\" />\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4 group-hover:text-ebutine-orange transition-colors duration-300\">\n                    {value.title}\n                  </h3>\n                  <p className=\"text-ebutine-blue\">{value.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Mission & Vision */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            <Card className=\"bg-ebutine-dark text-white\">\n              <CardContent className=\"p-12 text-center\">\n                <Target className=\"h-16 w-16 text-ebutine-orange mb-6 mx-auto\" />\n                <h3 className=\"text-3xl font-bold mb-6\">Our Mission</h3>\n                <p className=\"text-lg text-gray-300\">\n                  To empower Nigerians at home and in the Diaspora with genuine,\n                  verified, and profitable real estate investment opportunities.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-ebutine-orange text-white\">\n              <CardContent className=\"p-12 text-center\">\n                <Globe className=\"h-16 w-16 text-white mb-6 mx-auto\" />\n                <h3 className=\"text-3xl font-bold mb-6\">Our Vision</h3>\n                <p className=\"text-lg\">\n                  To be the most trusted and the number one real estate company\n                  for Nigerians worldwide, by providing them with genuine,\n                  verified, and profitable real estate investment opportunities,\n                  for wealth creation.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Global Reach */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">\n              Global Reach\n            </h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              With satisfied clients across multiple continents, we take pride\n              in connecting Nigerians worldwide to safe and profitable real\n              estate investments\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6 text-center\">\n            {[\n              \"United Kingdom\",\n              \"United States\",\n              \"Canada\",\n              \"Australia\",\n              \"China\",\n              \"Nigeria\",\n            ].map((country, index) => (\n              <div\n                key={index}\n                className=\"bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow\"\n              >\n                <div className=\"text-ebutine-orange font-semibold text-lg mb-2\">\n                  {country}\n                </div>\n                <div className=\"text-ebutine-blue text-sm\">\n                  Satisfied Clients\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Wealth Building Philosophy */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold text-ebutine-dark mb-6\">\n            Beyond Property Sales\n          </h2>\n          <p className=\"text-xl text-ebutine-blue mb-12 max-w-3xl mx-auto\">\n            At Ebutine Properties, we don't just sell properties, we help you\n            BUILD WEALTH, MULTIPLY WEALTH AND SUSTAIN WEALTH.\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            {[\n              {\n                icon: DollarSign,\n                title: \"BUILD WEALTH\",\n                description:\n                  \"Start your wealth creation journey with strategic real estate investments in prime Nigerian locations.\",\n              },\n              {\n                icon: TrendingUp,\n                title: \"MULTIPLY WEALTH\",\n                description:\n                  \"Grow your investment portfolio through carefully selected properties with high appreciation potential.\",\n              },\n              {\n                icon: Shield,\n                title: \"SUSTAIN WEALTH\",\n                description:\n                  \"Maintain and protect your investments with our comprehensive property management and advisory services.\",\n              },\n            ].map((philosophy, index) => (\n              <Card\n                key={index}\n                className=\"hover:shadow-lg transition-shadow bg-gradient-to-br from-ebutine-orange/5 to-ebutine-blue/5\"\n              >\n                <CardContent className=\"p-8 text-center\">\n                  <philosophy.icon className=\"h-12 w-12 text-ebutine-orange mb-4 mx-auto\" />\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">\n                    {philosophy.title}\n                  </h3>\n                  <p className=\"text-ebutine-blue\">{philosophy.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <Link href=\"/properties\">\n            <Button className=\"bg-ebutine-blue hover:bg-gray-600 text-white font-semibold py-4 px-8 text-lg\">\n              Explore Investment Opportunities\n            </Button>\n          </Link>\n        </div>\n      </section>\n\n      {/* Why Choose Us Preview */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold text-ebutine-dark mb-6\">\n            Why Clients Choose Us\n          </h2>\n          <p className=\"text-xl text-ebutine-blue mb-12 max-w-2xl mx-auto\">\n            Discover what makes Ebutine Properties the preferred choice for real\n            estate investment in Nigeria\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            {[\n              {\n                icon: Users,\n                title: \"Diaspora Focused\",\n                description:\n                  \"Specialized services designed for overseas investors with remote transaction capabilities and dedicated support.\",\n              },\n              {\n                icon: Shield,\n                title: \"100% Verified\",\n                description:\n                  \"Every property undergoes thorough verification including title checks, documentation review, and legal compliance.\",\n              },\n              {\n                icon: Headphones,\n                title: \"Global Support\",\n                description:\n                  \"24/7 customer support across multiple time zones with WhatsApp, email, and phone assistance in multiple languages.\",\n              },\n            ].map((benefit, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-8 text-center\">\n                  <benefit.icon className=\"h-12 w-12 text-ebutine-orange mb-4 mx-auto\" />\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">\n                    {benefit.title}\n                  </h3>\n                  <p className=\"text-ebutine-blue\">{benefit.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <Link href=\"/why-choose-us\">\n            <Button className=\"bg-ebutine-blue hover:bg-gray-600 text-white font-semibold py-4 px-8 text-lg\">\n              Learn More About Us\n            </Button>\n          </Link>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">\n            Ready to Start Your Wealth Building Journey?\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n            Join thousands of satisfied clients worldwide who have trusted\n            Ebutine Properties with their real estate investments\n          </p>\n\n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <Link href=\"/contact\">\n              <Button\n                size=\"lg\"\n                className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\"\n              >\n                Get Started Today\n              </Button>\n            </Link>\n            <Link href=\"/properties\">\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-ebutine-dark text-ebutine-dark hover:bg-ebutine-dark hover:text-white font-semibold py-4 px-8 text-lg\"\n              >\n                View Properties\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":15772},"client/src/pages/AdminUpload.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Trash2, Edit, Sparkles } from \"lucide-react\";\nimport type { Property } from \"@shared/schema\";\n\nexport default function AdminUpload() {\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    price: \"\",\n    location: \"\",\n    type: \"\",\n    size: \"\",\n    bedrooms: \"\",\n    bathrooms: \"\",\n    features: \"\",\n    images: [] as File[],\n    videos: [] as File[],\n    externalVideos: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isGeneratingAI, setIsGeneratingAI] = useState(false);\n  const [editingProperty, setEditingProperty] = useState<Property | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [thumbnail, setThumbnail] = useState<string>('');\n\n  // Fetch existing properties for management\n  const { data: properties = [], refetch } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/properties\");\n      if (!response.ok) throw new Error(\"Failed to fetch properties\");\n      return response.json();\n    },\n  });\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handleFileChange = async (field: 'images' | 'videos', files: FileList | null) => {\n    if (files) {\n      const fileArray = Array.from(files);\n      if (field === 'images') {\n        const compressedImages = await Promise.all(\n          fileArray.map(file => compressImage(file))\n        );\n        setFormData(prev => ({ ...prev, [field]: compressedImages }));\n        if (compressedImages.length > 0 && !thumbnail) {\n          const thumb = await generateThumbnail(compressedImages[0]);\n          setThumbnail(thumb);\n        }\n      } else if (field === 'videos') {\n        const compressedVideos = await Promise.all(\n          fileArray.map(file => compressVideo(file))\n        );\n        setFormData(prev => ({ ...prev, [field]: compressedVideos }));\n        if (compressedVideos.length > 0 && !thumbnail) {\n          const thumb = await generateThumbnail(compressedVideos[0]);\n          setThumbnail(thumb);\n        }\n      }\n    }\n  };\n\n  const compressImage = (file: File, quality: number = 0.8): Promise<File> => {\n    return new Promise((resolve) => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n      const img = new Image();\n\n      img.onload = () => {\n        const MAX_WIDTH = 1200;\n        const MAX_HEIGHT = 800;\n\n        let { width, height } = img;\n\n        if (width > height) {\n          if (width > MAX_WIDTH) {\n            height = (height * MAX_WIDTH) / width;\n            width = MAX_WIDTH;\n          }\n        } else {\n          if (height > MAX_HEIGHT) {\n            width = (width * MAX_HEIGHT) / height;\n            height = MAX_HEIGHT;\n          }\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        ctx.drawImage(img, 0, 0, width, height);\n\n        canvas.toBlob((blob) => {\n          if (blob) {\n            const compressedFile = new File([blob], file.name, {\n              type: 'image/jpeg',\n              lastModified: Date.now(),\n            });\n            resolve(compressedFile);\n          }\n        }, 'image/jpeg', quality);\n      };\n\n      img.src = URL.createObjectURL(file);\n    });\n  };\n\n  const compressVideo = (file: File): Promise<File> => {\n    // For video compression, we'll reduce the file size by limiting resolution\n    // In a real implementation, you might use ffmpeg.wasm or similar\n    return Promise.resolve(file); // Placeholder - actual video compression would need additional libraries\n  };\n\n  const generateThumbnail = (file: File): Promise<string> => {\n    return new Promise((resolve) => {\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (e) => resolve(e.target?.result as string);\n        reader.readAsDataURL(file);\n      } else if (file.type.startsWith('video/')) {\n        const video = document.createElement('video');\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        video.onloadedmetadata = () => {\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          video.currentTime = 1; // Get frame at 1 second\n        };\n\n        video.onseeked = () => {\n          if (ctx) {\n            ctx.drawImage(video, 0, 0);\n            resolve(canvas.toDataURL());\n          } else {\n            resolve(''); // Return empty string if canvas context is not available\n          }\n        };\n\n        video.src = URL.createObjectURL(file);\n      } else {\n        resolve(''); // Return empty string for unsupported file types\n      }\n    });\n  };\n\n  const handleImageUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const files = Array.from(e.target.files);\n      setFormData(prev => ({ ...prev, images: files })); // Directly set new files\n\n      if (files.length > 0 && !thumbnail) { // Only generate if no thumbnail exists yet\n        const thumb = await generateThumbnail(files[0]);\n        setThumbnail(thumb);\n      }\n    }\n  };\n\n  const handleVideoUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const files = Array.from(e.target.files);\n      setFormData(prev => ({ ...prev, videos: files })); // Directly set new files\n\n      if (files.length > 0 && !thumbnail) { // Only generate if no thumbnail exists yet\n        const thumb = await generateThumbnail(files[0]);\n        setThumbnail(thumb);\n      }\n    }\n  };\n\n  const startEdit = (property: Property) => {\n    setEditingProperty(property);\n    setIsEditing(true);\n    setFormData({\n      title: property.title,\n      description: property.description || \"\",\n      price: property.price,\n      location: property.location,\n      type: property.type,\n      size: property.size || \"\",\n      bedrooms: property.bedrooms || \"\",\n      bathrooms: property.bathrooms || \"\",\n      features: property.features ? property.features.join(', ') : \"\",\n      images: [], // Reset images on edit start\n      videos: [], // Reset videos on edit start\n      externalVideos: property.externalVideos ? property.externalVideos.map(v => `${v.url}|${v.platform}|${v.title || ''}`).join('\\n') : \"\"\n    });\n    // Assuming thumbnail is stored with the property or needs to be fetched/generated again\n    // For simplicity, we'll clear it here if editing, and it can be regenerated if new files are uploaded.\n    setThumbnail('');\n  };\n\n  const cancelEdit = () => {\n    setEditingProperty(null);\n    setIsEditing(false);\n    setFormData({\n      title: \"\",\n      description: \"\",\n      price: \"\",\n      location: \"\",\n      type: \"\",\n      size: \"\",\n      bedrooms: \"\",\n      bathrooms: \"\",\n      features: \"\",\n      images: [],\n      videos: [],\n      externalVideos: \"\"\n    });\n    setThumbnail('');\n  };\n\n  const generateAIDescription = async () => {\n    if (!formData.title && !formData.description && !formData.images.length && !formData.videos.length) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please provide at least a title or description, or upload images/videos for AI analysis.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsGeneratingAI(true);\n    try {\n      const response = await fetch('/api/admin/generate-description', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          title: formData.title,\n          type: formData.type,\n          location: formData.location,\n          price: formData.price,\n          size: formData.size,\n          bedrooms: formData.bedrooms,\n          bathrooms: formData.bathrooms,\n        }),\n      });\n\n      if (!response.ok) throw new Error('Failed to generate description');\n\n      const { description, features } = await response.json();\n\n      setFormData(prev => ({\n        ...prev,\n        description,\n        features: features.join(', ')\n      }));\n\n      toast({\n        title: \"AI Generated!\",\n        description: \"Description and features have been generated successfully.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Generation Failed\",\n        description: \"Could not generate AI description. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsGeneratingAI(false);\n    }\n  };\n\n  const generateSmartProperty = async () => {\n    if (!formData.images.length && !formData.videos.length && !formData.title) {\n      toast({\n        title: \"Missing Information\",\n        description: \"Please upload images/videos or provide a basic title for smart AI generation.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsGeneratingAI(true);\n    try {\n      const response = await fetch('/api/admin/generate-property', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          title: formData.title,\n          description: formData.description,\n          hasImages: formData.images.length > 0,\n          hasVideos: formData.videos.length > 0,\n        }),\n      });\n\n      if (!response.ok) throw new Error('Failed to generate property details');\n\n      const propertyData = await response.json();\n\n      setFormData(prev => ({\n        ...prev,\n        title: propertyData.title,\n        description: propertyData.description,\n        type: propertyData.type,\n        location: propertyData.location,\n        size: propertyData.size,\n        bedrooms: propertyData.bedrooms || \"\",\n        bathrooms: propertyData.bathrooms || \"\",\n        price: propertyData.price,\n        features: propertyData.features.join(', ')\n      }));\n\n      toast({\n        title: \"Smart AI Complete!\",\n        description: \"All property details have been intelligently generated from your media and input.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Generation Failed\",\n        description: \"Could not generate smart property details. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsGeneratingAI(false);\n    }\n  };\n\n  const deleteProperty = async (id: string) => {\n    if (!confirm(\"Are you sure you want to delete this property?\")) return;\n\n    try {\n      const response = await fetch(`/api/admin/properties/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) throw new Error('Failed to delete property');\n\n      toast({\n        title: \"Success\",\n        description: \"Property deleted successfully!\",\n      });\n      refetch();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete property. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const markAsSold = async (id: string) => {\n    try {\n      const response = await fetch(`/api/admin/properties/${id}/sold`, {\n        method: 'PATCH',\n      });\n\n      if (!response.ok) throw new Error('Failed to mark as sold');\n\n      toast({\n        title: \"Success\",\n        description: \"Property marked as sold!\",\n      });\n      refetch();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update property status. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      const formDataToSend = new FormData();\n\n      // Add text fields\n      Object.entries(formData).forEach(([key, value]) => {\n        if (key !== 'images' && key !== 'videos' && key !== 'externalVideos') {\n          formDataToSend.append(key, value as string);\n        }\n      });\n\n      // Process external videos\n      if (formData.externalVideos) {\n        const externalVideosArray = formData.externalVideos\n          .split('\\n')\n          .filter(line => line.trim())\n          .map(line => {\n            const parts = line.split('|');\n            const url = parts[0].trim();\n            const platform = parts[1]?.trim() || 'other';\n            const title = parts[2]?.trim() || '';\n            return { url, platform, title };\n          });\n        \n        formDataToSend.append('externalVideos', JSON.stringify(externalVideosArray));\n      }\n\n      // Add files only if new files are selected\n      if (formData.images.length > 0) {\n        formData.images.forEach(file => {\n          formDataToSend.append('images', file);\n        });\n      }\n\n      if (formData.videos.length > 0) {\n        formData.videos.forEach(file => {\n          formDataToSend.append('videos', file);\n        });\n      }\n\n      // Append thumbnail if it exists\n      if (thumbnail) {\n        // Convert data URL to File object to append\n        const blob = await fetch(thumbnail).then(res => res.blob());\n        const thumbnailFile = new File([blob], 'thumbnail.jpeg', { type: 'image/jpeg' });\n        formDataToSend.append('thumbnail', thumbnailFile);\n      }\n\n\n      const url = isEditing && editingProperty\n        ? `/api/admin/properties/${editingProperty.id}`\n        : '/api/admin/properties';\n\n      const method = isEditing ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method: method,\n        body: formDataToSend,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json(); // Try to get more error details\n        throw new Error(`Failed to ${isEditing ? 'update' : 'upload'} property: ${errorData.message || response.statusText}`);\n      }\n\n      toast({\n        title: \"Success\",\n        description: `Property ${isEditing ? 'updated' : 'uploaded'} successfully!`,\n      });\n\n      // Reset form\n      cancelEdit();\n      refetch();\n\n    } catch (error: any) { // Explicitly type error as any or unknown\n      toast({\n        title: \"Error\",\n        description: `Failed to ${isEditing ? 'update' : 'upload'} property. ${error.message}`,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 max-w-6xl\">\n      <Tabs defaultValue=\"upload\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"upload\">Upload Property</TabsTrigger>\n          <TabsTrigger value=\"manage\">Manage Properties</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"upload\">\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                {isEditing ? `Edit Property: ${editingProperty?.title}` : 'Upload New Property'}\n              </CardTitle>\n              {isEditing && (\n                <Button variant=\"outline\" onClick={cancelEdit} className=\"w-fit\">\n                  Cancel Edit\n                </Button>\n              )}\n            </CardHeader>\n            <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"title\">Property Title</Label>\n              <Input\n                id=\"title\"\n                value={formData.title}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                placeholder=\"Enter a basic title or leave empty for AI to generate\"\n                required\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                💡 Tip: Upload images/videos and click \"Smart AI\" to automatically generate all property details!\n              </p>\n            </div>\n\n            <div>\n              <Label htmlFor=\"description\" className=\"flex items-center justify-between\">\n                Description\n                <div className=\"flex gap-2\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={generateSmartProperty}\n                    disabled={isGeneratingAI}\n                  >\n                    <Sparkles className=\"h-4 w-4 mr-1\" />\n                    {isGeneratingAI ? \"Analyzing...\" : \"Smart AI\"}\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={generateAIDescription}\n                    disabled={isGeneratingAI}\n                    className=\"ml-2\"\n                  >\n                    <Sparkles className=\"h-4 w-4 mr-1\" />\n                    {isGeneratingAI ? \"Generating...\" : \"AI Enhance\"}\n                  </Button>\n                </div>\n              </Label>\n              <Textarea\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => handleInputChange('description', e.target.value)}\n                rows={4}\n                required\n                placeholder=\"Describe the property or use AI to generate a description...\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"price\">Price (₦)</Label>\n                <Input\n                  id=\"price\"\n                  type=\"number\"\n                  value={formData.price}\n                  onChange={(e) => handleInputChange('price', e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"location\">Location</Label>\n                <Input\n                  id=\"location\"\n                  value={formData.location}\n                  onChange={(e) => handleInputChange('location', e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"type\">Property Type</Label>\n                <Select value={formData.type} onValueChange={(value) => handleInputChange('type', value)}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"land\">Land</SelectItem>\n                    <SelectItem value=\"house\">House</SelectItem>\n                    <SelectItem value=\"apartment\">Apartment</SelectItem>\n                    <SelectItem value=\"commercial\">Commercial</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div>\n                <Label htmlFor=\"size\">Size (sqm)</Label>\n                <Input\n                  id=\"size\"\n                  value={formData.size}\n                  onChange={(e) => handleInputChange('size', e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"bedrooms\">Bedrooms</Label>\n                <Input\n                  id=\"bedrooms\"\n                  type=\"number\"\n                  value={formData.bedrooms}\n                  onChange={(e) => handleInputChange('bedrooms', e.target.value)}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"bathrooms\">Bathrooms</Label>\n                <Input\n                  id=\"bathrooms\"\n                  type=\"number\"\n                  value={formData.bathrooms}\n                  onChange={(e) => handleInputChange('bathrooms', e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"features\">Features (comma separated)</Label>\n              <Textarea\n                id=\"features\"\n                value={formData.features}\n                onChange={(e) => handleInputChange('features', e.target.value)}\n                placeholder=\"e.g., Swimming pool, Garage, Security, etc.\"\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"images\">Property Images {isEditing && \"(Leave empty to keep existing images)\"}</Label>\n              <p className=\"text-sm text-gray-600 mb-2\">Images will be automatically compressed for faster loading</p>\n              <Input\n                id=\"images\"\n                type=\"file\"\n                multiple\n                accept=\"image/*\"\n                onChange={handleImageUpload}\n              />\n              {thumbnail && !isEditing && ( // Display thumbnail only when not editing and thumbnail is available\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Generated Thumbnail:</p>\n                  <img src={thumbnail} alt=\"Generated Thumbnail\" className=\"w-32 h-32 object-cover rounded\" />\n                </div>\n              )}\n            </div>\n\n            <div>\n              <Label htmlFor=\"videos\">Property Videos {isEditing && \"(Leave empty to keep existing videos)\"}</Label>\n              <p className=\"text-sm text-gray-600 mb-2\">Upload local videos or add external video URLs below</p>\n              <Input\n                id=\"videos\"\n                type=\"file\"\n                multiple\n                accept=\"video/*\"\n                onChange={handleVideoUpload}\n              />\n              {thumbnail && !isEditing && ( // Display thumbnail only when not editing and thumbnail is available\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-600 mb-1\">Generated Thumbnail:</p>\n                  <img src={thumbnail} alt=\"Generated Thumbnail\" className=\"w-32 h-32 object-cover rounded\" />\n                </div>\n              )}\n            </div>\n\n            <div>\n              <Label htmlFor=\"externalVideos\">External Video URLs (YouTube, Instagram, etc.)</Label>\n              <p className=\"text-sm text-gray-600 mb-2\">Add one URL per line. Format: URL|Platform|Title (Platform and Title are optional)</p>\n              <Textarea\n                id=\"externalVideos\"\n                value={formData.externalVideos || \"\"}\n                onChange={(e) => handleInputChange('externalVideos', e.target.value)}\n                placeholder=\"https://www.instagram.com/reel/DNOvEZvsqYv/|instagram|Premium Investment in Lekki&#10;https://www.youtube.com/watch?v=example|youtube|Property Tour\"\n                rows={3}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"embedCodes\">Video Embed Codes</Label>\n              <p className=\"text-sm text-gray-600 mb-2\">Add embed codes from Instagram, YouTube, TikTok, etc. Format: EmbedCode|Title|Platform (one per line)</p>\n              <Textarea\n                id=\"embedCodes\"\n                value={formData.embedCodes || \"\"}\n                onChange={(e) => handleInputChange('embedCodes', e.target.value)}\n                placeholder='<blockquote class=\"instagram-media\">...</blockquote>|Property Tour|Instagram&#10;<iframe src=\"https://www.youtube.com/embed/...\"></iframe>|Video Tour|YouTube'\n                rows={4}\n              />\n            </div>\n\n            <Button type=\"submit\" disabled={isSubmitting} className=\"w-full\">\n              {isSubmitting ? (isEditing ? \"Updating...\" : \"Uploading...\") : (isEditing ? \"Update Property\" : \"Upload Property\")}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </TabsContent>\n\n    <TabsContent value=\"manage\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Manage Properties ({properties.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {properties.map((property) => (\n              <div key={property.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <h3 className=\"font-semibold\">{property.title}</h3>\n                      <Badge variant={property.status === 'sold' ? 'destructive' : 'default'}>\n                        {property.status}\n                      </Badge>\n                      {property.featured && <Badge variant=\"secondary\">Featured</Badge>}\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-2\">{property.location}</p>\n                    <p className=\"text-lg font-bold text-green-600\">₦{parseFloat(property.price).toLocaleString()}</p>\n                    <div className=\"flex gap-2 mt-2\">\n                      {property.bedrooms && <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">{property.bedrooms} beds</span>}\n                      {property.bathrooms && <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">{property.bathrooms} baths</span>}\n                      {property.size && <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">{property.size}</span>}\n                    </div>\n                  </div>\n                  <div className=\"flex gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => startEdit(property)}\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    {property.status !== 'sold' && (\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => markAsSold(property.id)}\n                      >\n                        Mark as Sold\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"destructive\"\n                      size=\"sm\"\n                      onClick={() => deleteProperty(property.id)}\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {properties.length === 0 && (\n              <p className=\"text-center text-gray-500 py-8\">No properties found.</p>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </TabsContent>\n  </Tabs>\n    </div>\n  );\n}","size_bytes":26812},"client/src/pages/Contact.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { MapPin, Phone, Mail, Clock } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport ContactForm from \"@/components/ContactForm\";\n\nexport default function Contact() {\n  return (\n    <div>\n      <Helmet>\n        <title>Contact Ebutine Properties - Real Estate Experts in Lagos, Nigeria</title>\n        <meta name=\"description\" content=\"Contact Ebutine Properties for verified real estate in Lagos. Office in Greenland Estate, Sangotedo. Call +234 906 146 1411 or WhatsApp for instant response.\" />\n        <meta name=\"keywords\" content=\"contact Ebutine Properties, real estate Lagos contact, property agents Nigeria, Greenland Estate Sangotedo\" />\n        \n        {/* Local Business Schema */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"RealEstateAgent\", \n            \"name\": \"Ebutine Properties\",\n            \"address\": {\n              \"@type\": \"PostalAddress\",\n              \"streetAddress\": \"House No 2, Road 4, Greenland Estate, Olokonla\",\n              \"addressLocality\": \"Sangotedo Ajah\",\n              \"addressRegion\": \"Lagos\",\n              \"addressCountry\": \"Nigeria\"\n            },\n            \"geo\": {\n              \"@type\": \"GeoCoordinates\",\n              \"latitude\": \"6.4474\",\n              \"longitude\": \"3.5074\"\n            },\n            \"telephone\": \"+2349061461411\",\n            \"email\": \"ebutinepropertieslimited@gmail.com\",\n            \"openingHours\": [\"Mo-Fr 08:00-18:00\", \"Sa 09:00-16:00\"],\n            \"areaServed\": \"Lagos, Nigeria\"\n          })}\n        </script>\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Contact Us</h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Ready to invest in Nigerian real estate? Get in touch with our experts today\n          </p>\n        </div>\n      </section>\n\n      {/* Main Contact Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Contact Information */}\n            <div>\n              <h2 className=\"text-3xl font-bold text-ebutine-dark mb-8\">Get In Touch</h2>\n              \n              {/* Contact Methods */}\n              <div className=\"space-y-6 mb-8\">\n                <div className=\"flex items-start\">\n                  <div className=\"bg-ebutine-orange bg-opacity-10 p-3 rounded-lg mr-4\">\n                    <MapPin className=\"h-6 w-6 text-ebutine-orange\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-ebutine-dark mb-1\">Office Address</h4>\n                    <p className=\"text-ebutine-blue\">\n                      Sangotedo Ajah, Lagos, Nigeria\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <div className=\"bg-ebutine-orange bg-opacity-10 p-3 rounded-lg mr-4\">\n                    <Phone className=\"h-6 w-6 text-ebutine-orange\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-ebutine-dark mb-1\">Phone</h4>\n                    <p className=\"text-ebutine-blue\">\n                      <a \n                        href=\"tel:+2349061461411\" \n                        className=\"hover:text-ebutine-orange transition-colors\"\n                        data-testid=\"contact-phone-link\"\n                      >\n                        +234 906 146 1411\n                      </a>\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <div className=\"bg-ebutine-orange bg-opacity-10 p-3 rounded-lg mr-4\">\n                    <Mail className=\"h-6 w-6 text-ebutine-orange\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-ebutine-dark mb-1\">Email</h4>\n                    <p className=\"text-ebutine-blue\">\n                      <a \n                        href=\"mailto:ebutinepropertieslimited@gmail.com\" \n                        className=\"hover:text-ebutine-orange transition-colors\"\n                        data-testid=\"contact-email-link\"\n                      >\n                        ebutinepropertieslimited@gmail.com\n                      </a>\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <div className=\"bg-green-500 bg-opacity-10 p-3 rounded-lg mr-4\">\n                    <i className=\"fab fa-whatsapp text-green-500 text-xl\"></i>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-ebutine-dark mb-1\">WhatsApp</h4>\n                    <p className=\"text-ebutine-blue\">\n                      <a \n                        href=\"https://wa.me/2349061461411\" \n                        target=\"_blank\" \n                        rel=\"noopener noreferrer\"\n                        className=\"hover:text-green-500 transition-colors\"\n                        data-testid=\"contact-whatsapp-link\"\n                      >\n                        Chat with us instantly\n                      </a>\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Action Buttons */}\n              <div className=\"space-y-4 mb-8\">\n                <a \n                  href=\"https://wa.me/2349061461411\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"block w-full\"\n                  data-testid=\"contact-whatsapp-button\"\n                >\n                  <Button className=\"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-4 px-6\">\n                    <i className=\"fab fa-whatsapp mr-2\"></i>Start WhatsApp Chat\n                  </Button>\n                </a>\n                <a href=\"tel:+2349061461411\" className=\"block w-full\" data-testid=\"contact-call-button\">\n                  <Button variant=\"outline\" className=\"w-full border-2 border-ebutine-orange text-ebutine-orange hover:bg-ebutine-orange hover:text-white font-semibold py-4 px-6\">\n                    <Phone className=\"mr-2 h-4 w-4\" />Call Now\n                  </Button>\n                </a>\n              </div>\n\n              {/* Office Hours */}\n              <Card className=\"bg-ebutine-light\">\n                <CardContent className=\"p-6\">\n                  <h4 className=\"font-semibold text-ebutine-dark mb-4 flex items-center\">\n                    <Clock className=\"mr-2 h-5 w-5\" />\n                    Office Hours\n                  </h4>\n                  <div className=\"space-y-2 text-sm text-ebutine-blue\">\n                    <div className=\"flex justify-between\">\n                      <span>Monday - Friday</span>\n                      <span>8:00 AM - 6:00 PM</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Saturday</span>\n                      <span>9:00 AM - 4:00 PM</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Sunday</span>\n                      <span>Closed</span>\n                    </div>\n                    <p className=\"text-xs text-ebutine-blue mt-3 italic\">\n                      *WhatsApp support available 24/7 for diaspora clients across all time zones\n                    </p>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Contact Form */}\n            <div>\n              <ContactForm />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Map Section */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-ebutine-dark mb-4\">Visit Our Office</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Located in the heart of Greenland Estate, Sangotedo Ajah, Lagos\n            </p>\n          </div>\n          \n          <div className=\"rounded-2xl overflow-hidden shadow-2xl\">\n            <iframe \n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3964.5947829345567!2d3.5074!3d6.4474!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x103bf730a3e9e4e3%3A0x6c8c8c8c8c8c8c8c!2sGreenland%20Estate%2C%20Sangotedo%20Ajah%2C%20Lagos!5e0!3m2!1sen!2sng!4v1\"\n              width=\"100%\" \n              height=\"400\" \n              style={{ border: 0 }} \n              allowFullScreen\n              loading=\"lazy\" \n              referrerPolicy=\"no-referrer-when-downgrade\"\n              className=\"w-full\"\n              title=\"Ebutine Properties Office Location - Greenland Estate, Sangotedo Ajah, Lagos\"\n              data-testid=\"office-map\"\n            />\n          </div>\n          \n          <div className=\"mt-8 text-center\">\n            <p className=\"text-ebutine-blue mb-4\">\n              Can't make it to our office? No problem! We offer virtual consultations for all our diaspora clients.\n            </p>\n            <Button className=\"bg-ebutine-orange hover:bg-orange-600 text-white\">\n              <a href=\"https://wa.me/2349061461411?text=Hi, I'd like to schedule a virtual consultation\" target=\"_blank\" rel=\"noopener noreferrer\">\n                Schedule Virtual Meeting\n              </a>\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-bold text-ebutine-dark mb-4\">Frequently Asked Questions</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Quick answers to common questions from our clients\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {[\n              {\n                question: \"How quickly can you respond to inquiries?\",\n                answer: \"We typically respond to WhatsApp messages within 15 minutes during business hours and within 2 hours outside business hours. Email inquiries are answered within 4 hours.\"\n              },\n              {\n                question: \"Do you assist diaspora clients with remote transactions?\",\n                answer: \"Yes! We specialize in helping diaspora clients complete property transactions remotely. We handle all documentation, verification, and legal processes on your behalf.\"\n              },\n              {\n                question: \"What payment methods do you accept?\",\n                answer: \"We accept bank transfers (both local and international), Western Union, MoneyGram, and cryptocurrency payments. Flexible payment plans are available.\"\n              },\n              {\n                question: \"Do you provide property management services?\",\n                answer: \"Yes, we offer comprehensive property management services including tenant screening, rent collection, maintenance, and regular property reports for diaspora investors.\"\n              }\n            ].map((faq, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`faq-${index}`}>\n                <CardContent className=\"p-6\">\n                  <h4 className=\"font-semibold text-ebutine-dark mb-3\">{faq.question}</h4>\n                  <p className=\"text-ebutine-blue\">{faq.answer}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Emergency Contact */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-orange to-orange-600 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold mb-6\">Need Immediate Assistance?</h2>\n          <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\n            For urgent property matters or emergency support, contact us immediately\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <a href=\"tel:+2349061461411\" data-testid=\"emergency-call-button\">\n              <Button size=\"lg\" className=\"bg-red-600 hover:bg-red-700 text-white font-semibold py-4 px-8 text-lg\">\n                <Phone className=\"mr-2 h-5 w-5\" />Emergency Call\n              </Button>\n            </a>\n            <a \n              href=\"https://wa.me/2349061461411?text=URGENT: I need immediate assistance with my property matter\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              data-testid=\"emergency-whatsapp-button\"\n            >\n              <Button size=\"lg\" className=\"bg-green-600 hover:bg-green-700 text-white font-semibold py-4 px-8 text-lg\">\n                <i className=\"fab fa-whatsapp mr-2\"></i>Emergency WhatsApp\n              </Button>\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":13634},"client/src/pages/Gallery.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function Gallery() {\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\n\n  const galleryImages = [\n    {\n      id: 1,\n      src: \"/gallery/modern-duplex-1.webp\",\n      title: \"Modern Executive Duplex\",\n      category: \"luxury\",\n      location: \"Lekki, Lagos\",\n    },\n    {\n      id: 2,\n      src: \"/gallery/luxury-villa-2.webp\",\n      title: \"Contemporary Luxury Villa\",\n      category: \"luxury\",\n      location: \"Victoria Island, Lagos\",\n    },\n    {\n      id: 3,\n      src: \"/gallery/terrace-homes-3.jpg\",\n      title: \"Modern Terrace Houses\",\n      category: \"residential\",\n      location: \"Sangotedo, Lagos\",\n    },\n  ];\n\n  const categories = [\n    { key: \"all\", label: \"All Properties\" },\n    { key: \"luxury\", label: \"Luxury Homes\" },\n    { key: \"residential\", label: \"Residential\" },\n    { key: \"commercial\", label: \"Commercial\" },\n  ];\n\n  const filteredImages =\n    selectedCategory === \"all\"\n      ? galleryImages\n      : galleryImages.filter((img) => img.category === selectedCategory);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Property Gallery - Ebutine Properties | Lagos Nigeria</title>\n        <meta\n          name=\"description\"\n          content=\"Browse our stunning gallery of premium properties in Lagos, Nigeria. Luxury homes, residential estates, and commercial properties.\"\n        />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\n            Property Gallery\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Explore our collection of premium properties across Lagos\n          </p>\n        </div>\n      </section>\n\n      {/* Filter Buttons */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n            {categories.map((category) => (\n              <Button\n                key={category.key}\n                onClick={() => setSelectedCategory(category.key)}\n                className={`px-6 py-3 rounded-full transition-all duration-300 ${\n                  selectedCategory === category.key\n                    ? \"bg-ebutine-orange text-white shadow-lg transform scale-105\"\n                    : \"bg-gray-100 text-ebutine-dark hover:bg-gray-200\"\n                }`}\n              >\n                {category.label}\n              </Button>\n            ))}\n          </div>\n\n          {/* Gallery Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredImages.map((image) => (\n              <Card\n                key={image.id}\n                className=\"group overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:scale-105\"\n              >\n                <div className=\"relative\">\n                  <img\n                    src={image.src}\n                    alt={image.title}\n                    className=\"w-full h-80 object-cover transition-transform duration-300 group-hover:scale-110\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"absolute bottom-4 left-4 right-4 transform translate-y-4 group-hover:translate-y-0 opacity-0 group-hover:opacity-100 transition-all duration-300\">\n                    <h3 className=\"text-white font-semibold text-lg mb-1\">\n                      {image.title}\n                    </h3>\n                    <p className=\"text-gray-200 text-sm\">{image.location}</p>\n                  </div>\n                  <Badge className=\"absolute top-4 right-4 bg-ebutine-orange text-white capitalize\">\n                    {image.category}\n                  </Badge>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          {filteredImages.length === 0 && (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 text-lg\">\n                No properties found in this category.\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Invest?</h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n            See a property you like? Get in touch with our experts today\n          </p>\n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <a\n              href=\"https://wa.me/2349061461411\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button\n                size=\"lg\"\n                className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\"\n              >\n                <i className=\"fab fa-whatsapp mr-2\"></i>WhatsApp Us\n              </Button>\n            </a>\n            <a href=\"tel:+2349061461411\">\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-ebutine-dark text-ebutine-dark hover:bg-ebutine-dark hover:text-white font-semibold py-4 px-8 text-lg\"\n              >\n                Call Us Now\n              </Button>\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":5977},"client/src/pages/Home.tsx":{"content":"import HeroSection from \"@/components/HeroSection\";\nimport FeaturedProperties from \"@/components/FeaturedProperties\";\nimport TestimonialsSection from \"@/components/TestimonialsSection\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  Handshake,\n  Shield,\n  DollarSign,\n  Headphones,\n  MapPin,\n  Phone,\n  Mail,\n} from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function Home() {\n  return (\n    <div>\n      {/* Hero Section */}\n      <HeroSection />\n\n      {/* Featured Properties */}\n      <FeaturedProperties />\n\n      {/* About Section */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-ebutine-dark mb-6\">\n                About Ebutine Properties\n              </h2>\n              <p className=\"text-lg text-ebutine-blue mb-6\">\n                Founded with a vision to bridge the gap between diaspora\n                investors and premium Nigerian real estate, Ebutine Properties\n                has become the trusted partner for thousands of clients\n                worldwide.\n              </p>\n              <p className=\"text-lg text-ebutine-blue mb-8\">\n                We specialize in verified properties with clear documentation,\n                ensuring our clients make secure investments in Nigeria's\n                thriving real estate market. Our commitment to honesty,\n                integrity, and affordability has earned us recognition as the\n                diaspora's first choice.\n              </p>\n\n              {/* Core Values */}\n              <div className=\"grid grid-cols-2 gap-6\">\n                <Card>\n                  <CardContent className=\"text-center p-4\">\n                    <Handshake className=\"h-8 w-8 text-ebutine-orange mb-3 mx-auto\" />\n                    <h3 className=\"font-semibold text-ebutine-dark\">\n                      Integrity\n                    </h3>\n                    <p className=\"text-sm text-ebutine-blue\">\n                      Transparent dealings always\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"text-center p-4\">\n                    <Shield className=\"h-8 w-8 text-ebutine-orange mb-3 mx-auto\" />\n                    <h3 className=\"font-semibold text-ebutine-dark\">\n                      Verified Properties\n                    </h3>\n                    <p className=\"text-sm text-ebutine-blue\">\n                      Thoroughly vetted listings\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"text-center p-4\">\n                    <DollarSign className=\"h-8 w-8 text-ebutine-orange mb-3 mx-auto\" />\n                    <h3 className=\"font-semibold text-ebutine-dark\">\n                      Affordability\n                    </h3>\n                    <p className=\"text-sm text-ebutine-blue\">\n                      Competitive pricing\n                    </p>\n                  </CardContent>\n                </Card>\n                <Card>\n                  <CardContent className=\"text-center p-4\">\n                    <Headphones className=\"h-8 w-8 text-ebutine-orange mb-3 mx-auto\" />\n                    <h3 className=\"font-semibold text-ebutine-dark\">Support</h3>\n                    <p className=\"text-sm text-ebutine-blue\">\n                      24/7 client assistance\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <img\n                src=\"/founder-augustine.jpg\"\n                alt=\"Mr. Augustine Akunechendo - Founder & CEO of Ebutine Properties\"\n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n              />\n              <div className=\"relative pb-20\">\n                {/* Main section */}\n                <div className=\"mt-6 text-center\">\n                  <h3 className=\"text-2xl font-bold text-ebutine-dark\">\n                    Mr. Augustine E. Akunechendo\n                  </h3>\n                  <p className=\"text-lg text-ebutine-orange font-semibold\">\n                    Founder & CEO\n                  </p>\n                </div>\n\n                {/* Floating badge */}\n                <div className=\"absolute -bottom-6 right-6 bg-ebutine-orange text-white p-6 rounded-2xl shadow-lg\">\n                  <h3 className=\"text-2xl font-bold\">100+</h3>\n                  <p className=\"text-sm\">Happy Clients</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Preview */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">\n              Our Services\n            </h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Comprehensive real estate solutions tailored for both local and\n              diaspora clients\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              {\n                icon: \"🏠\",\n                title: \"Residential Land\",\n                description:\n                  \"Premium residential plots in developed estates with full infrastructure.\",\n              },\n              {\n                icon: \"🏢\",\n                title: \"Commercial Land\",\n                description:\n                  \"Strategic commercial properties in high-traffic areas perfect for business.\",\n              },\n              {\n                icon: \"👑\",\n                title: \"Luxury Homes\",\n                description:\n                  \"Exquisite luxury homes and penthouses in exclusive neighborhoods.\",\n              },\n              {\n                icon: \"🔧\",\n                title: \"Property Management\",\n                description:\n                  \"Complete property management services for diaspora investors.\",\n              },\n            ].map((service, index) => (\n              <Card\n                key={index}\n                className=\"hover:shadow-2xl hover:scale-105 transition-all duration-300 group border-2 border-transparent hover:border-ebutine-orange/20\"\n              >\n                <CardContent className=\"text-center p-8\">\n                  <div className=\"text-4xl mb-4 group-hover:scale-110 transition-transform duration-300\">\n                    {service.icon}\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4 group-hover:text-ebutine-orange transition-colors duration-300\">\n                    {service.title}\n                  </h3>\n                  <p className=\"text-ebutine-blue text-sm group-hover:text-gray-700 transition-colors duration-300\">\n                    {service.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Link href=\"/services\">\n              <Button className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\">\n                View All Services\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <TestimonialsSection />\n\n      {/* Quick Contact */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Invest?</h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n            Get in touch with our experts today and start your real estate\n            investment journey\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            <div className=\"flex flex-col items-center\">\n              <Phone className=\"h-12 w-12 text-ebutine-orange mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">\n                Call Us\n              </h3>\n              <a\n                href=\"tel:+2349061461411\"\n                className=\"text-ebutine-blue hover:text-ebutine-orange\"\n              >\n                +234 906 146 1411\n              </a>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <Mail className=\"h-12 w-12 text-ebutine-orange mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">\n                Email Us\n              </h3>\n              <a\n                href=\"mailto:ebutinepropertieslimited@gmail.com\"\n                className=\"text-ebutine-blue hover:text-ebutine-orange\"\n              >\n                ebutinepropertieslimited@gmail.com\n              </a>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <MapPin className=\"h-12 w-12 text-ebutine-orange mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">\n                Visit Us\n              </h3>\n              <p className=\"text-ebutine-blue\">Greenland Estate, Lagos</p>\n            </div>\n          </div>\n\n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <Link href=\"/contact\">\n              <Button\n                size=\"lg\"\n                className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\"\n              >\n                Contact Us Today\n              </Button>\n            </Link>\n            <a\n              href=\"https://wa.me/2349061461411\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-semibold py-4 px-8 text-lg\"\n              >\n                <i className=\"fab fa-whatsapp mr-2\"></i>WhatsApp Chat\n              </Button>\n            </a>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10517},"client/src/pages/PropertyDetails.tsx":{"content":"import { useRoute, useLocation } from 'wouter';\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { ArrowLeft, Heart, Phone, MapPin, Bed, Bath, Car, Calendar, Eye, Share2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from \"@/components/ui/carousel\";\nimport { useState } from \"react\";\nimport PropertyVideoModal from \"@/components/PropertyVideoModal\";\nimport type { Property } from \"@shared/schema\";\n\nexport default function PropertyDetails() {\n  const [match, params] = useRoute(`/properties/:id`);\n  const id = params?.id;\n  const [, setLocation] = useLocation();\n  const [showVideoModal, setShowVideoModal] = useState(false);\n\n  const navigate = (path: string) => setLocation(path);\n\n  const { data: property, isLoading, error } = useQuery<Property>({\n    queryKey: [`/api/properties/${id}`],\n    queryFn: async () => {\n      const response = await fetch(`/api/properties/${id}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          throw new Error(\"Property not found\");\n        }\n        throw new Error(\"Failed to fetch property\");\n      }\n      return response.json();\n    },\n    enabled: !!id,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-ebutine-light flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-ebutine-orange mx-auto mb-4\"></div>\n          <p className=\"text-ebutine-blue\">Loading property details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !property) {\n    return (\n      <div className=\"min-h-screen bg-ebutine-light flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">🏠</div>\n          <h1 className=\"text-2xl font-bold text-ebutine-dark mb-4\">Property Not Found</h1>\n          <p className=\"text-ebutine-blue mb-8\">The property you're looking for doesn't exist or has been removed.</p>\n          <Button onClick={() => navigate('/properties')} className=\"bg-ebutine-orange hover:bg-orange-600\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Properties\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const formatPrice = (price: string) => {\n    const num = parseFloat(price);\n    if (num >= 1000000) {\n      return `₦${(num / 1000000).toFixed(1)}M`;\n    }\n    return `₦${num.toLocaleString()}`;\n  };\n\n  const handleInquire = () => {\n    const message = `Hi, I'm interested in \"${property.title}\" located in ${property.location}, priced at ${formatPrice(property.price)}. Can you provide more details?`;\n    window.open(`https://wa.me/2349061461411?text=${encodeURIComponent(message)}`, '_blank');\n  };\n\n  const handleShare = () => {\n    if (navigator.share) {\n      navigator.share({\n        title: property.title,\n        text: `Check out this property: ${property.title}`,\n        url: window.location.href,\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n    }\n  };\n\n  const allMedia = [\n    ...(property.images || []).map(img => ({ type: 'image', src: img })),\n    ...(property.videos || []).map(video => ({ type: 'video', src: video })),\n    ...(property.embedCodes || []).map((embed, index) => ({ type: 'embed', src: embed.embedCode, title: embed.title || `Embed ${index + 1}` }))\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-ebutine-light\">\n      <Helmet>\n        <title>{property.title} - Ebutine Properties</title>\n        <meta name=\"description\" content={property.description} />\n      </Helmet>\n\n      {/* Header */}\n      <div className=\"bg-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Button variant=\"ghost\" onClick={() => navigate('/properties')}>\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\n              Back to Properties\n            </Button>\n            <div className=\"flex space-x-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={handleShare}>\n                <Share2 className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Heart className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Property Images/Videos Carousel */}\n      <div className=\"bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {allMedia.length > 0 ? (\n            <Carousel className=\"w-full\">\n              <CarouselContent>\n                {allMedia.map((media, index) => (\n                  <CarouselItem key={index}>\n                    <div className=\"relative h-96 md:h-[500px] rounded-2xl overflow-hidden flex items-center justify-center\">\n                      {media.type === 'image' ? (\n                        <img\n                          src={media.src}\n                          alt={`${property.title} - Image ${index + 1}`}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : media.type === 'video' ? (\n                        <video\n                          src={media.src}\n                          className=\"w-full h-full object-cover\"\n                          controls\n                          preload=\"metadata\"\n                        />\n                      ) : (\n                        <div \n                          className=\"w-full h-full flex items-center justify-center\"\n                          dangerouslySetInnerHTML={{ __html: media.src }}\n                        />\n                      )}\n                    </div>\n                  </CarouselItem>\n                ))}\n              </CarouselContent>\n              <CarouselPrevious />\n              <CarouselNext />\n            </Carousel>\n          ) : (\n            <div className=\"h-96 md:h-[500px] rounded-2xl bg-gray-200 flex items-center justify-center\">\n              <p className=\"text-gray-500\">No images available</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Property Details */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <Badge className={\n                    property.status === \"available\" ? \"bg-green-500\" :\n                    property.status === \"sold\" ? \"bg-red-500\" : \"bg-blue-500\"\n                  }>\n                    {property.status}\n                  </Badge>\n                  {property.featured && (\n                    <Badge className=\"bg-ebutine-orange\">Featured</Badge>\n                  )}\n                </div>\n\n                <h1 className=\"text-3xl font-bold text-ebutine-dark mb-4\">{property.title}</h1>\n\n                <div className=\"flex items-center text-ebutine-blue mb-6\">\n                  <MapPin className=\"h-5 w-5 mr-2\" />\n                  <span>{property.location}</span>\n                </div>\n\n                <div className=\"mb-6\">\n                  <p className=\"text-4xl font-bold text-gradient mb-2\">\n                    {formatPrice(property.price)}\n                  </p>\n                  <p className=\"text-ebutine-blue-light\">Starting price</p>\n                </div>\n\n                {/* Property Stats */}\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                  {property.bedrooms && (\n                    <div className=\"text-center p-4 bg-ebutine-light rounded-lg\">\n                      <Bed className=\"h-6 w-6 mx-auto mb-2 text-ebutine-orange\" />\n                      <p className=\"font-semibold\">{property.bedrooms}</p>\n                      <p className=\"text-sm text-ebutine-blue\">Bedrooms</p>\n                    </div>\n                  )}\n                  {property.bathrooms && (\n                    <div className=\"text-center p-4 bg-ebutine-light rounded-lg\">\n                      <Bath className=\"h-6 w-6 mx-auto mb-2 text-ebutine-orange\" />\n                      <p className=\"font-semibold\">{property.bathrooms}</p>\n                      <p className=\"text-sm text-ebutine-blue\">Bathrooms</p>\n                    </div>\n                  )}\n                  {property.parking && (\n                    <div className=\"text-center p-4 bg-ebutine-light rounded-lg\">\n                      <Car className=\"h-6 w-6 mx-auto mb-2 text-ebutine-orange\" />\n                      <p className=\"font-semibold\">{property.parking}</p>\n                      <p className=\"text-sm text-ebutine-blue\">Parking</p>\n                    </div>\n                  )}\n                  {property.size && (\n                    <div className=\"text-center p-4 bg-ebutine-light rounded-lg\">\n                      <Eye className=\"h-6 w-6 mx-auto mb-2 text-ebutine-orange\" />\n                      <p className=\"font-semibold\">{property.size}</p>\n                      <p className=\"text-sm text-ebutine-blue\">Size</p>\n                    </div>\n                  )}\n                </div>\n\n                {/* Description */}\n                <div>\n                  <h2 className=\"text-xl font-bold text-ebutine-dark mb-4\">Description</h2>\n                  <p className=\"text-ebutine-blue leading-relaxed\">{property.description}</p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Features */}\n            {property.features && property.features.length > 0 && (\n              <Card>\n                <CardContent className=\"p-6\">\n                  <h2 className=\"text-xl font-bold text-ebutine-dark mb-4\">Features & Amenities</h2>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    {property.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center\">\n                        <div className=\"h-2 w-2 bg-ebutine-orange rounded-full mr-3\"></div>\n                        <span className=\"text-ebutine-blue\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Contact Card */}\n            <Card className=\"sticky top-6\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-bold text-ebutine-dark mb-4\">Interested in this property?</h3>\n\n                <div className=\"space-y-4\">\n                  <Button \n                    className=\"w-full bg-ebutine-orange hover:bg-orange-600\"\n                    onClick={handleInquire}\n                  >\n                    <Phone className=\"mr-2 h-4 w-4\" />\n                    Contact Agent\n                  </Button>\n\n                  {((property.videos && property.videos.length > 0) || \n                    (property.externalVideos && property.externalVideos.length > 0) ||\n                    (property.embedCodes && property.embedCodes.length > 0)) && (\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full\"\n                      onClick={() => setShowVideoModal(true)}\n                    >\n                      <Eye className=\"mr-2 h-4 w-4\" />\n                      Watch Property Tour\n                    </Button>\n                  )}\n                </div>\n\n                <div className=\"mt-6 pt-6 border-t\">\n                  <div className=\"text-center\">\n                    <p className=\"text-sm text-ebutine-blue mb-2\">Need financing assistance?</p>\n                    <Button variant=\"outline\" size=\"sm\">\n                      Get Pre-approved\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Modal */}\n      <PropertyVideoModal\n        isOpen={showVideoModal}\n        onClose={() => setShowVideoModal(false)}\n        videos={property.videos || []}\n        externalVideos={property.externalVideos || []}\n        embedCodes={property.embedCodes || []}\n        propertyTitle={property.title}\n      />\n    </div>\n  );\n}","size_bytes":12668},"client/src/pages/PropertyListings.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { Search, SlidersHorizontal, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport PropertyCard from \"@/components/PropertyCard\";\nimport type { Property } from \"@shared/schema\";\n\nexport default function PropertyListings() {\n  const [filters, setFilters] = useState({\n    propertyType: \"all\",\n    location: \"all\",\n    priceRange: \"all\",\n    bedrooms: \"all\",\n    purpose: \"all\",\n  });\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const propertiesPerPage = 9;\n\n  // Parse URL params on component mount\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  useState(() => {\n    if (!isInitialized) {\n      const urlParams = new URLSearchParams(window.location.search);\n      const initialFilters = {\n        propertyType: urlParams.get(\"type\") || \"all\",\n        location: urlParams.get(\"location\") || \"all\",\n        priceRange: urlParams.get(\"budget\") || \"all\",\n        bedrooms: \"all\",\n        purpose: \"all\",\n      };\n      setFilters(initialFilters);\n      setIsInitialized(true);\n    }\n  });\n\n  const { data: properties = [], isLoading } = useQuery<Property[]>({\n    queryKey: [\"/api/properties\", filters],\n    queryFn: async () => {\n      const params = new URLSearchParams();\n      if (filters.propertyType && filters.propertyType !== \"all\") {\n        params.set(\"type\", filters.propertyType);\n      }\n      if (filters.location && filters.location !== \"all\") {\n        params.set(\"location\", filters.location);\n      }\n\n      const response = await fetch(`/api/properties?${params.toString()}`);\n      if (!response.ok) throw new Error(\"Failed to fetch properties\");\n      return response.json();\n    },\n  });\n\n  // Filter properties client-side for additional filters not handled by API\n  const filteredProperties = properties.filter(property => {\n    if (filters.priceRange && filters.priceRange !== \"all\") {\n      const price = parseFloat(property.price);\n      const [min, max] = filters.priceRange.includes(\"+\")\n        ? [parseFloat(filters.priceRange.replace(/[^\\d]/g, \"\")), Infinity]\n        : filters.priceRange.split(\"-\").map(p => parseFloat(p.replace(/[^\\d]/g, \"\")) * 1000000);\n\n      if (price < min || price > max) return false;\n    }\n\n    if (filters.bedrooms && filters.bedrooms !== \"all\" && property.bedrooms) {\n      const bedCount = parseInt(property.bedrooms);\n      if (filters.bedrooms === \"1-2\" && (bedCount < 1 || bedCount > 2)) return false;\n      if (filters.bedrooms === \"3-4\" && (bedCount < 3 || bedCount > 4)) return false;\n      if (filters.bedrooms === \"5+\" && bedCount < 5) return false;\n    }\n\n    return true;\n  });\n\n  const totalPages = Math.ceil(filteredProperties.length / propertiesPerPage);\n  const paginatedProperties = filteredProperties.slice(\n    (currentPage - 1) * propertiesPerPage,\n    currentPage * propertiesPerPage\n  );\n\n  const handleFilterChange = (filterType: string, value: string) => {\n    setFilters(prev => ({ ...prev, [filterType]: value }));\n    setCurrentPage(1); // Reset to first page when filters change\n  };\n\n  const handleViewDetails = (id: string) => {\n    // Navigate to property details page\n    window.location.href = `/properties/${id}`;\n  };\n\n  const handleInquire = (id: string) => {\n    const property = properties.find(p => p.id === id);\n    const message = `Hi, I'm interested in ${property?.title} (${property?.location}) priced at ${property?.price}. Can you provide more details?`;\n    window.open(`https://wa.me/2349061461411?text=${encodeURIComponent(message)}`, '_blank');\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>Property Listings - Buy Land & Luxury Homes in Lagos | Ebutine Properties</title>\n        <meta name=\"description\" content=\"Browse verified property listings in Lagos, Nigeria. Residential land, commercial properties, luxury homes with clear titles. Trusted by diaspora clients.\" />\n        <meta name=\"keywords\" content=\"buy land Lagos, residential land Nigeria, commercial property Lagos, luxury homes Lagos, verified properties Nigeria\" />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Property Listings</h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Browse our extensive collection of verified properties across Lagos\n          </p>\n        </div>\n      </section>\n\n      {/* Filters Section */}\n      <section className=\"py-12 bg-gradient-to-br from-gray-50 to-white border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card className=\"shadow-2xl border-0 bg-white/80 backdrop-blur-sm\">\n            <CardContent className=\"p-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-2xl font-bold text-ebutine-dark flex items-center\">\n                  <SlidersHorizontal className=\"mr-3 h-6 w-6\" />\n                  Filter Properties\n                </h2>\n                <div className=\"text-sm text-ebutine-blue\">\n                  {filteredProperties.length} properties found\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-ebutine-dark mb-2\">Property Type</label>\n                  <Select value={filters.propertyType} onValueChange={(value) => handleFilterChange(\"propertyType\", value)}>\n                    <SelectTrigger data-testid=\"filter-property-type\">\n                      <SelectValue placeholder=\"All Types\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Types</SelectItem>\n                      <SelectItem value=\"residential_land\">Residential Land</SelectItem>\n                      <SelectItem value=\"commercial_land\">Commercial Land</SelectItem>\n                      <SelectItem value=\"luxury_home\">Luxury Homes</SelectItem>\n                      <SelectItem value=\"apartment\">Apartments</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-ebutine-dark mb-2\">Location</label>\n                  <Select value={filters.location} onValueChange={(value) => handleFilterChange(\"location\", value)}>\n                    <SelectTrigger data-testid=\"filter-location\">\n                      <SelectValue placeholder=\"All Locations\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Locations</SelectItem>\n                      <SelectItem value=\"Ajah\">Ajah</SelectItem>\n                      <SelectItem value=\"Sangotedo\">Sangotedo</SelectItem>\n                      <SelectItem value=\"Ibeju-Lekki\">Ibeju-Lekki</SelectItem>\n                      <SelectItem value=\"Victoria Island\">Victoria Island</SelectItem>\n                      <SelectItem value=\"Lekki\">Lekki</SelectItem>\n                      <SelectItem value=\"Ikeja\">Ikeja</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-ebutine-dark mb-2\">Price Range</label>\n                  <Select value={filters.priceRange} onValueChange={(value) => handleFilterChange(\"priceRange\", value)}>\n                    <SelectTrigger data-testid=\"filter-price-range\">\n                      <SelectValue placeholder=\"Any Price\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">Any Price</SelectItem>\n                      <SelectItem value=\"5-15\">₦5M - ₦15M</SelectItem>\n                      <SelectItem value=\"15-30\">₦15M - ₦30M</SelectItem>\n                      <SelectItem value=\"30-50\">₦30M - ₦50M</SelectItem>\n                      <SelectItem value=\"50-100\">₦50M - ₦100M</SelectItem>\n                      <SelectItem value=\"100+\">₦100M+</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-ebutine-dark mb-2\">Bedrooms</label>\n                  <Select value={filters.bedrooms} onValueChange={(value) => handleFilterChange(\"bedrooms\", value)}>\n                    <SelectTrigger data-testid=\"filter-bedrooms\">\n                      <SelectValue placeholder=\"Any\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">Any</SelectItem>\n                      <SelectItem value=\"1-2\">1-2 Bedrooms</SelectItem>\n                      <SelectItem value=\"3-4\">3-4 Bedrooms</SelectItem>\n                      <SelectItem value=\"5+\">5+ Bedrooms</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-ebutine-dark mb-2\">Purpose</label>\n                  <Select value={filters.purpose} onValueChange={(value) => handleFilterChange(\"purpose\", value)}>\n                    <SelectTrigger data-testid=\"filter-purpose\">\n                      <SelectValue placeholder=\"Any Purpose\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">Any Purpose</SelectItem>\n                      <SelectItem value=\"investment\">Investment</SelectItem>\n                      <SelectItem value=\"personal\">Personal Use</SelectItem>\n                      <SelectItem value=\"rental\">Rental Income</SelectItem>\n                      <SelectItem value=\"development\">Development</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"flex items-end\">\n                  <Button\n                    className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white font-semibold\"\n                    onClick={() => {\n                      // Filters are applied automatically via state changes\n                      console.log(\"Filters applied:\", filters);\n                    }}\n                    data-testid=\"apply-filters-button\"\n                  >\n                    <Search className=\"mr-2 h-4 w-4\" />\n                    Apply Filters\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* Properties Grid */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {Array.from({ length: 6 }).map((_, i) => (\n                <div key={i} className=\"bg-gray-200 rounded-2xl h-96 animate-pulse\"></div>\n              ))}\n            </div>\n          ) : filteredProperties.length === 0 ? (\n            <div className=\"text-center py-20\">\n              <div className=\"text-6xl mb-4\">🏠</div>\n              <h3 className=\"text-2xl font-bold text-ebutine-dark mb-4\">No Properties Found</h3>\n              <p className=\"text-ebutine-blue mb-8\">\n                No properties match your current search criteria. Try adjusting your filters or browse all properties.\n              </p>\n              <Button\n                onClick={() => {\n                  setFilters({\n                    propertyType: \"all\",\n                    location: \"all\",\n                    priceRange: \"all\",\n                    bedrooms: \"all\",\n                    purpose: \"all\",\n                  });\n                  setCurrentPage(1);\n                }}\n                className=\"bg-ebutine-orange hover:bg-orange-600 text-white\"\n              >\n                Clear All Filters\n              </Button>\n            </div>\n          ) : (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\" data-testid=\"properties-grid\">\n                {paginatedProperties.map((property) => (\n                  <PropertyCard\n                    key={property.id}\n                    property={property}\n                    onViewDetails={handleViewDetails}\n                    onInquire={handleInquire}\n                  />\n                ))}\n              </div>\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"flex justify-center items-center space-x-4\" data-testid=\"pagination\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    data-testid=\"previous-page-button\"\n                  >\n                    <ChevronLeft className=\"mr-2 h-4 w-4\" />\n                    Previous\n                  </Button>\n\n                  <div className=\"flex space-x-2\">\n                    {Array.from({ length: Math.min(totalPages, 5) }, (_, i) => {\n                      const pageNum = i + 1;\n                      return (\n                        <Button\n                          key={pageNum}\n                          variant={currentPage === pageNum ? \"default\" : \"outline\"}\n                          className={currentPage === pageNum ? \"bg-ebutine-orange hover:bg-orange-600\" : \"\"}\n                          onClick={() => setCurrentPage(pageNum)}\n                          data-testid={`page-button-${pageNum}`}\n                        >\n                          {pageNum}\n                        </Button>\n                      );\n                    })}\n                  </div>\n\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    data-testid=\"next-page-button\"\n                  >\n                    Next\n                    <ChevronRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Invest?</h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n            Get personalized property recommendations from our experts\n          </p>\n\n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <Button size=\"lg\" className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\">\n              <a href=\"/contact\">Request Custom Search</a>\n            </Button>\n            <Button variant=\"outline\" size=\"lg\" className=\"border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-semibold py-4 px-8 text-lg\">\n              <a href=\"https://wa.me/2349061461411\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <i className=\"fab fa-whatsapp mr-2\"></i>Chat on WhatsApp\n              </a>\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":15924},"client/src/pages/Services.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Link } from \"wouter\";\nimport { Home, Building2, Crown, Wrench, TrendingUp, FileText, Calculator, CheckCircle, Mail, Phone, MapPin } from \"lucide-react\";\n\nexport default function Services() {\n  return (\n    <div>\n      <Helmet>\n        <title>Real Estate Services - Ebutine Properties | Lagos Nigeria</title>\n        <meta name=\"description\" content=\"Comprehensive real estate services in Lagos, Nigeria. Residential land, commercial properties, luxury homes, property management and development services.\" />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Our Services</h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Comprehensive real estate solutions tailored for both local and diaspora clients\n          </p>\n        </div>\n      </section>\n\n      {/* Main Services */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Core Services</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              End-to-end real estate solutions designed to meet your investment goals\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\n            {/* Service 1 - Residential Land */}\n            <Card className=\"hover:shadow-2xl transition-all duration-300 border border-gray-100 hover:border-ebutine-orange/20 group\">\n              <CardContent className=\"p-8\">\n                <div className=\"bg-gradient-to-br from-ebutine-orange/10 to-ebutine-orange/20 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                  <Home className=\"h-8 w-8 text-ebutine-orange group-hover:animate-pulse\" />\n                </div>\n                <h3 className=\"text-2xl font-semibold text-ebutine-dark mb-4\">Residential Land</h3>\n                <p className=\"text-ebutine-blue mb-6\">\n                  Premium residential plots in developed estates with full infrastructure and verified documentation. \n                  Perfect for building your dream home or long-term investment.\n                </p>\n                <ul className=\"space-y-3 mb-6\">\n                  {[\n                    \"Complete title verification and documentation\",\n                    \"Survey plans and government allocation papers\", \n                    \"Infrastructure-ready plots with utilities\",\n                    \"Flexible payment plans available\",\n                    \"After-sales support and development guidance\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-start text-sm text-ebutine-blue\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                <Button className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white\">\n                  View Residential Properties\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Service 2 - Commercial Land */}\n            <Card className=\"hover:shadow-2xl transition-all duration-300 border border-gray-100 hover:border-ebutine-orange/20 group\">\n              <CardContent className=\"p-8\">\n                <div className=\"bg-gradient-to-br from-blue-500/10 to-blue-600/20 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                  <Building2 className=\"h-8 w-8 text-blue-600 group-hover:animate-pulse\" />\n                </div>\n                <h3 className=\"text-2xl font-semibold text-ebutine-dark mb-4\">Commercial Land</h3>\n                <p className=\"text-ebutine-blue mb-6\">\n                  Strategic commercial properties in high-traffic areas perfect for business investments. \n                  Ideal for retail, office buildings, or mixed-use developments.\n                </p>\n                <ul className=\"space-y-3 mb-6\">\n                  {[\n                    \"Prime locations with high foot traffic\",\n                    \"Commercial permits and zoning approvals\",\n                    \"Investment analysis and ROI projections\",\n                    \"Business district and shopping center opportunities\",\n                    \"Legal support for commercial transactions\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-start text-sm text-ebutine-blue\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                <Button className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white\">\n                  View Commercial Properties\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Service 3 - Luxury Homes */}\n            <Card className=\"hover:shadow-2xl transition-all duration-300 border border-gray-100 hover:border-ebutine-orange/20 group\">\n              <CardContent className=\"p-8\">\n                <div className=\"bg-gradient-to-br from-yellow-400/10 to-yellow-500/20 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                  <Crown className=\"h-8 w-8 text-yellow-600 group-hover:animate-pulse\" />\n                </div>\n                <h3 className=\"text-2xl font-semibold text-ebutine-dark mb-4\">Luxury Homes</h3>\n                <p className=\"text-ebutine-blue mb-6\">\n                  Exquisite luxury homes and penthouses in exclusive neighborhoods across Lagos. \n                  Ready-to-move properties with premium finishes and world-class amenities.\n                </p>\n                <ul className=\"space-y-3 mb-6\">\n                  {[\n                    \"Premium finishes and modern architecture\",\n                    \"24/7 security and estate management\",\n                    \"Swimming pools, gyms, and recreational facilities\",\n                    \"Exclusive neighborhoods and gated communities\",\n                    \"Turnkey properties ready for immediate occupancy\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-start text-sm text-ebutine-blue\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                <Button className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white\">\n                  View Luxury Homes\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Service 4 - Property Management */}\n            <Card className=\"hover:shadow-2xl transition-all duration-300 border border-gray-100 hover:border-ebutine-orange/20 group\">\n              <CardContent className=\"p-8\">\n                <div className=\"bg-gradient-to-br from-green-500/10 to-green-600/20 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                  <Wrench className=\"h-8 w-8 text-green-600 group-hover:animate-pulse\" />\n                </div>\n                <h3 className=\"text-2xl font-semibold text-ebutine-dark mb-4\">Property Management</h3>\n                <p className=\"text-ebutine-blue mb-6\">\n                  Complete property management services for diaspora investors who need hands-off solutions. \n                  We handle everything from tenant screening to maintenance and rent collection.\n                </p>\n                <ul className=\"space-y-3 mb-6\">\n                  {[\n                    \"Tenant screening and lease management\",\n                    \"Monthly rent collection and remittance\",\n                    \"Property maintenance and repairs\",\n                    \"Regular property inspections and reports\",\n                    \"24/7 emergency response and support\"\n                  ].map((feature, index) => (\n                    <li key={index} className=\"flex items-start text-sm text-ebutine-blue\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n                <Button className=\"w-full bg-ebutine-orange hover:bg-orange-600 text-white\">\n                  Learn About Management\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Services */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Additional Services</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Comprehensive support services to ensure your real estate success\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: TrendingUp,\n                title: \"Property Development\",\n                description: \"Custom development projects from concept to completion. We work with experienced architects and contractors to bring your vision to life.\",\n                features: [\"Architectural design\", \"Construction management\", \"Project timeline monitoring\", \"Quality assurance\"],\n                color: \"from-purple-500/10 to-purple-600/20\",\n                iconColor: \"text-purple-600\"\n              },\n              {\n                icon: FileText,\n                title: \"Legal Support\",\n                description: \"Complete legal documentation and title processing services. Our legal team ensures all transactions are compliant and secure.\",\n                features: [\"Title verification\", \"Contract preparation\", \"Due diligence\", \"Registration assistance\"],\n                color: \"from-red-500/10 to-red-600/20\",\n                iconColor: \"text-red-600\"\n              },\n              {\n                icon: Calculator,\n                title: \"Investment Advisory\",\n                description: \"Expert guidance on real estate investment strategies and market analysis. Make informed decisions with our professional insights.\",\n                features: [\"Market analysis\", \"ROI calculations\", \"Investment strategies\", \"Portfolio planning\"],\n                color: \"from-indigo-500/10 to-indigo-600/20\",\n                iconColor: \"text-indigo-600\"\n              }\n            ].map((service, index) => (\n              <Card key={index} className=\"hover:shadow-2xl transition-all duration-300 hover:border-ebutine-orange/20 group\">\n                <CardContent className=\"p-8 text-center\">\n                  <div className={`bg-gradient-to-br ${service.color} w-16 h-16 rounded-full flex items-center justify-center mb-4 mx-auto group-hover:scale-110 transition-transform duration-300`}>\n                    <service.icon className={`h-8 w-8 ${service.iconColor} group-hover:animate-pulse`} />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">{service.title}</h3>\n                  <p className=\"text-ebutine-blue mb-6\">{service.description}</p>\n                  <ul className=\"space-y-2 text-sm text-ebutine-blue text-left\">\n                    {service.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        <CheckCircle className=\"h-3 w-3 text-green-500 mr-2 flex-shrink-0\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Service Process */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Our Service Process</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              A streamlined process designed for diaspora and local clients\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {[\n              {\n                step: \"01\",\n                title: \"Consultation\",\n                description: \"Initial consultation to understand your requirements, budget, and investment goals.\"\n              },\n              {\n                step: \"02\", \n                title: \"Property Selection\",\n                description: \"Curated property recommendations based on your criteria and expert market analysis.\"\n              },\n              {\n                step: \"03\",\n                title: \"Verification & Due Diligence\", \n                description: \"Thorough verification of all documentation, legal checks, and physical inspection.\"\n              },\n              {\n                step: \"04\",\n                title: \"Transaction & Support\",\n                description: \"Seamless transaction process with ongoing after-sales support and property management.\"\n              }\n            ].map((step, index) => (\n              <div key={index} className=\"text-center group\">\n                <div className=\"bg-gradient-to-br from-ebutine-orange to-orange-600 text-white w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4 shadow-lg group-hover:scale-110 group-hover:shadow-xl transition-all duration-300\">\n                  {step.step}\n                </div>\n                <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">{step.title}</h3>\n                <p className=\"text-ebutine-blue\">{step.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Get Started?</h2>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-2xl mx-auto\">\n            Let our experienced team help you navigate your real estate investment journey\n          </p>\n\n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\">\n                Book Free Consultation\n              </Button>\n            </Link>\n            <Link href=\"/properties\">\n              <Button variant=\"outline\" size=\"lg\" className=\"border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-semibold py-4 px-8 text-lg\">\n                View Properties\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}","size_bytes":15775},"client/src/pages/WhyChooseUs.tsx":{"content":"import { Helmet } from \"react-helmet\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { \n  Shield, \n  Globe, \n  Headphones, \n  TrendingUp, \n  Heart, \n  MapPin, \n  CheckCircle, \n  Users, \n  Award, \n  Clock,\n  FileCheck,\n  SearchCheck,\n  Phone\n} from \"lucide-react\";\n\nexport default function WhyChooseUs() {\n  const stats = [\n    { number: \"5000+\", label: \"Properties Sold\", icon: \"🏠\" },\n    { number: \"3500+\", label: \"Happy Clients\", icon: \"😊\" },\n    { number: \"8+\", label: \"Years Experience\", icon: \"📅\" },\n    { number: \"15+\", label: \"Countries Served\", icon: \"🌍\" }\n  ];\n\n  const verificationSteps = [\n    {\n      icon: SearchCheck,\n      title: \"Title Verification\",\n      description: \"Complete documentation and legal checks including Certificate of Occupancy verification\"\n    },\n    {\n      icon: MapPin,\n      title: \"Physical Inspection\", \n      description: \"On-ground verification and assessment by our experienced field agents\"\n    },\n    {\n      icon: FileCheck,\n      title: \"Legal Compliance\",\n      description: \"Government approvals and permits verification through official channels\"\n    }\n  ];\n\n  const benefits = [\n    {\n      icon: Globe,\n      title: \"Diaspora Focused\",\n      description: \"Specialized services for overseas investors with remote transaction capabilities and regular property updates via WhatsApp and email.\",\n      features: [\"Remote transactions\", \"Multi-timezone support\", \"Regular updates\", \"Diaspora-friendly processes\"]\n    },\n    {\n      icon: Headphones,\n      title: \"24/7 Support\",\n      description: \"Round-the-clock customer support across multiple time zones. WhatsApp, email, and phone support in English and local languages.\",\n      features: [\"24/7 availability\", \"Multi-language support\", \"WhatsApp priority\", \"Dedicated account managers\"]\n    },\n    {\n      icon: TrendingUp,\n      title: \"Investment Guidance\",\n      description: \"Expert advice on property investment strategies, market trends, and ROI projections to help you make informed decisions.\",\n      features: [\"Market analysis\", \"ROI projections\", \"Investment strategies\", \"Trend forecasting\"]\n    },\n    {\n      icon: Heart,\n      title: \"After-Sales Support\",\n      description: \"Continued support after purchase including property management, development progress updates, and resale assistance.\",\n      features: [\"Property management\", \"Progress tracking\", \"Resale assistance\", \"Maintenance coordination\"]\n    },\n    {\n      icon: Shield,\n      title: \"Competitive Pricing\",\n      description: \"Direct from developers and landowners, ensuring the best prices. Flexible payment plans and financing options available.\",\n      features: [\"Direct pricing\", \"Flexible payments\", \"No hidden fees\", \"Volume discounts\"]\n    },\n    {\n      icon: MapPin,\n      title: \"Prime Locations\",\n      description: \"Properties in developing areas with high appreciation potential. Close to infrastructure, schools, hospitals, and commercial centers.\",\n      features: [\"High appreciation\", \"Infrastructure access\", \"Strategic locations\", \"Future development\"]\n    }\n  ];\n\n  return (\n    <div>\n      <Helmet>\n        <title>Why Choose Ebutine Properties - Nigeria's Most Trusted Real Estate Company</title>\n        <meta name=\"description\" content=\"Discover why thousands of diaspora and local clients choose Ebutine Properties. 100% verified properties, 24/7 support, and proven track record in Lagos real estate.\" />\n        <meta name=\"keywords\" content=\"trusted real estate Nigeria, verified properties Lagos, diaspora real estate, reliable property company Nigeria\" />\n      </Helmet>\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-gradient-to-br from-ebutine-dark to-ebutine-blue text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Why Choose Ebutine Properties?</h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto\">\n            Trusted by thousands of diaspora and local clients for verified, premium properties\n          </p>\n        </div>\n      </section>\n\n      {/* Verification Process */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mb-16\">\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Professional Property Verification\" \n                className=\"rounded-2xl shadow-2xl\"\n              />\n            </div>\n            <div>\n              <Badge className=\"bg-ebutine-orange text-white mb-4\">100% Verified</Badge>\n              <h2 className=\"text-4xl font-bold text-ebutine-dark mb-6\">100% Verified Properties</h2>\n              <p className=\"text-lg text-ebutine-blue mb-8\">\n                Every property in our portfolio undergoes rigorous verification. We check titles, \n                survey plans, government approvals, and physical inspections to ensure you invest \n                in legitimate properties with clear documentation.\n              </p>\n              \n              <div className=\"space-y-6\">\n                {verificationSteps.map((step, index) => (\n                  <div key={index} className=\"flex items-start\">\n                    <div className=\"bg-green-100 p-3 rounded-full mr-4\">\n                      <step.icon className=\"h-6 w-6 text-green-600\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-ebutine-dark mb-2\">{step.title}</h4>\n                      <p className=\"text-ebutine-blue\">{step.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Key Benefits */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">What Makes Us Different</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Comprehensive advantages that set us apart in the Nigerian real estate market\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {benefits.map((benefit, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow h-full\" data-testid={`benefit-card-${index}`}>\n                <CardContent className=\"p-8\">\n                  <div className=\"bg-ebutine-orange bg-opacity-10 w-16 h-16 rounded-full flex items-center justify-center mb-6\">\n                    <benefit.icon className=\"h-8 w-8 text-ebutine-orange\" />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">{benefit.title}</h3>\n                  <p className=\"text-ebutine-blue mb-6\">{benefit.description}</p>\n                  \n                  <div className=\"space-y-2\">\n                    {benefit.features.map((feature, featureIndex) => (\n                      <div key={featureIndex} className=\"flex items-center text-sm text-ebutine-blue\">\n                        <CheckCircle className=\"h-3 w-3 text-green-500 mr-2 flex-shrink-0\" />\n                        {feature}\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Trust Indicators */}\n      <section className=\"py-20 bg-ebutine-dark text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold mb-4\">Trusted by Thousands</h2>\n            <p className=\"text-xl text-gray-300 max-w-2xl mx-auto\">\n              Our track record speaks for itself - thousands of successful transactions across multiple countries\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\">\n            {stats.map((stat, index) => (\n              <div key={index} className=\"bg-ebutine-blue bg-opacity-20 rounded-2xl p-8\" data-testid={`stat-${index}`}>\n                <div className=\"text-4xl mb-4\">{stat.icon}</div>\n                <div className=\"text-4xl font-bold text-ebutine-orange mb-2\">{stat.number}</div>\n                <div className=\"text-white\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Advantages */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Our Proven Process</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              A streamlined, transparent process designed for maximum client satisfaction\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {[\n              {\n                step: \"01\",\n                icon: Users,\n                title: \"Free Consultation\",\n                description: \"Initial consultation to understand your requirements, budget, and investment goals. No hidden fees or obligations.\"\n              },\n              {\n                step: \"02\",\n                icon: Award,\n                title: \"Curated Selection\",\n                description: \"Handpicked property recommendations based on your criteria and our expert market analysis.\"\n              },\n              {\n                step: \"03\",\n                icon: Shield,\n                title: \"Complete Verification\",\n                description: \"Thorough verification of all documentation, legal checks, and physical inspection reports.\"\n              },\n              {\n                step: \"04\",\n                icon: Clock,\n                title: \"Ongoing Support\",\n                description: \"Seamless transaction process with ongoing after-sales support and property management services.\"\n              }\n            ].map((step, index) => (\n              <div key={index} className=\"text-center\" data-testid={`process-step-${index}`}>\n                <div className=\"bg-ebutine-orange text-white w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-4\">\n                  {step.step}\n                </div>\n                <step.icon className=\"h-8 w-8 text-ebutine-blue mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-ebutine-dark mb-4\">{step.title}</h3>\n                <p className=\"text-ebutine-blue\">{step.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Preview */}\n      <section className=\"py-20 bg-ebutine-light\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-ebutine-dark mb-4\">Client Success Stories</h2>\n            <p className=\"text-xl text-ebutine-blue max-w-2xl mx-auto\">\n              Real testimonials from satisfied clients across Nigeria and the diaspora\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[\n              {\n                name: \"Adaora Okafor\",\n                location: \"London, UK\",\n                content: \"Ebutine Properties made buying land in Lagos so easy from London. They provided regular updates and excellent service.\",\n                rating: 5\n              },\n              {\n                name: \"Chinedu Asika\", \n                location: \"Toronto, Canada\",\n                content: \"Professional, transparent, and reliable. My property has already appreciated significantly since purchase.\",\n                rating: 5\n              },\n              {\n                name: \"Funmi Adebayo\",\n                location: \"Lagos, Nigeria\", \n                content: \"As a local investor, I was impressed by their integrity. They helped me acquire excellent rental properties.\",\n                rating: 5\n              }\n            ].map((testimonial, index) => (\n              <Card key={index} className=\"hover:shadow-lg transition-shadow\" data-testid={`testimonial-preview-${index}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex mb-4\">\n                    {Array.from({ length: testimonial.rating }).map((_, i) => (\n                      <span key={i} className=\"text-yellow-400\">⭐</span>\n                    ))}\n                  </div>\n                  <p className=\"text-ebutine-blue italic mb-4\">\"{testimonial.content}\"</p>\n                  <div>\n                    <h4 className=\"font-semibold text-ebutine-dark\">{testimonial.name}</h4>\n                    <p className=\"text-sm text-ebutine-blue\">{testimonial.location}</p>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact CTA */}\n      <section className=\"py-20 ready-to-invest\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Ready to Experience the Difference?</h2>\n          <p className=\"text-xl text-gray-600 mb-12 max-w-2xl mx-auto\">\n            Join thousands of satisfied clients who have trusted Ebutine Properties with their real estate investments\n          </p>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-12\">\n            <div className=\"flex flex-col items-center\">\n              <Phone className=\"h-12 w-12 text-ebutine-orange mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">Call Us Now</h3>\n              <a href=\"tel:+2349061461411\" className=\"text-ebutine-blue hover:text-ebutine-orange\">+234 906 146 1411</a>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <i className=\"fab fa-whatsapp text-5xl text-green-500 mb-4\"></i>\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">WhatsApp Chat</h3>\n              <a href=\"https://wa.me/2349061461411\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-ebutine-blue hover:text-ebutine-orange\">Start Conversation</a>\n            </div>\n            <div className=\"flex flex-col items-center\">\n              <MapPin className=\"h-12 w-12 text-ebutine-orange mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2 text-ebutine-dark\">Visit Our Office</h3>\n              <p className=\"text-ebutine-blue\">Greenland Estate, Lagos</p>\n            </div>\n          </div>\n          \n          <div className=\"flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" className=\"bg-ebutine-orange hover:bg-orange-600 text-white font-semibold py-4 px-8 text-lg\">\n                Get Free Consultation\n              </Button>\n            </Link>\n            <Link href=\"/properties\">\n              <Button variant=\"outline\" size=\"lg\" className=\"border-2 border-white text-white hover:bg-white hover:text-ebutine-dark font-semibold py-4 px-8 text-lg\">\n                Browse Properties\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":15870},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"start.sh":{"content":"#!/bin/bash\n# Simple startup script to run the application with tsx instead of problematic ts-node\nnpx tsx server/index.ts","size_bytes":122},"start-dev.sh":{"content":"#!/bin/bash\nnpx tsx server/index.ts","size_bytes":35},"build.js":{"content":"#!/usr/bin/env node\n\nimport { build } from \"esbuild\";\nimport { fileURLToPath } from \"url\";\nimport { dirname, join } from \"path\";\nimport { readFileSync, mkdirSync, existsSync } from \"fs\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\n// Read package.json to get dependencies that should stay external\nconst packageJson = JSON.parse(readFileSync(\"package.json\", \"utf8\"));\n\nconst externals = [\n  // Keep these as external since they're platform-specific\n  \"bufferutil\",\n  \"utf-8-validate\",\n  ...Object.keys(packageJson.dependencies || {}),\n];\n\nasync function buildServer() {\n  try {\n    console.log(\"🔧 Building server...\");\n\n    // Ensure dist directory exists\n    const distDir = join(__dirname, \"dist\", \"server\");\n    if (!existsSync(distDir)) {\n      mkdirSync(distDir, { recursive: true });\n      console.log(\"📁 Created dist directory\");\n    }\n\n    await build({\n      entryPoints: [join(__dirname, \"server/index.ts\")],\n      bundle: true,\n      platform: \"node\",\n      target: \"node20\",\n      format: \"cjs\",\n      outfile: \"dist/server/index.cjs\",\n      external: externals,\n      minify: false, // Disable minification for debugging\n      sourcemap: true,\n      resolveExtensions: [\".ts\", \".js\"],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n      },\n\n      loader: {\n        \".ts\": \"ts\",\n      },\n    });\n\n    console.log(\"✅ Server build completed successfully\");\n  } catch (error) {\n    console.error(\"❌ Server build failed:\", error);\n    process.exit(1);\n  }\n}\n\nbuildServer();\n","size_bytes":1558},"clean.js":{"content":"import { rmSync, existsSync } from \"fs\";\nimport { join } from \"path\";\n\nconst distPath = \"dist\";\n\ntry {\n  if (existsSync(distPath)) {\n    rmSync(distPath, { recursive: true, force: true });\n    console.log(\"🧹 Cleaned dist directory\");\n  }\n  console.log(\"✅ Clean completed\");\n} catch (error) {\n  console.error(\"❌ Clean failed:\", error);\n  process.exit(1);\n}\n","size_bytes":363},"vite.config.js":{"content":"import { defineConfig } from \"vite\";\nimport { fileURLToPath } from \"url\";\nimport { dirname, resolve } from \"path\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nexport default defineConfig(async () => {\n  // Use dynamic imports for ESM-only packages\n  const react = await import(\"@vitejs/plugin-react\");\n  \n  const plugins = [react.default()];\n  \n  if (process.env.NODE_ENV !== \"production\" &&\n      process.env.REPL_ID !== undefined) {\n    try {\n      const cartographer = await import(\"@replit/vite-plugin-cartographer\");\n      plugins.push(cartographer.cartographer());\n    } catch (e) {\n      // Cartographer plugin not available\n    }\n  }\n\n  return {\n    plugins,\n    resolve: {\n      alias: {\n        \"@\": resolve(__dirname, \"client\", \"src\"),\n        \"@shared\": resolve(__dirname, \"shared\"),\n        \"@assets\": resolve(__dirname, \"attached_assets\"),\n      },\n    },\n    root: resolve(__dirname, \"client\"),\n    build: {\n      outDir: resolve(__dirname, \"dist/public\"),\n      emptyOutDir: true,\n      rollupOptions: {\n        input: resolve(__dirname, \"client/index.html\"),\n      },\n    },\n  };\n});","size_bytes":1148}},"version":1}